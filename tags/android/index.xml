<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Android on 識之箱庭</title><link>https://HoshikawaRyuukou.github.io/tags/android/</link><description>Recent content in Android on 識之箱庭</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>HoshikawaRyuukou</copyright><lastBuildDate>Thu, 26 Sep 2024 13:11:00 +0000</lastBuildDate><atom:link href="https://HoshikawaRyuukou.github.io/tags/android/index.xml" rel="self" type="application/rss+xml"/><item><title>Android - Note</title><link>https://HoshikawaRyuukou.github.io/posts/android-note/</link><pubDate>Thu, 26 Sep 2024 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/android-note/</guid><description>Skill 從已安裝 app 抽取出 apk How to Extract, Save and Share an APK of an Android Application 使用內建的 Files 應用並選擇分享 app 即可</description></item><item><title>Android - Reverse Engineering</title><link>https://HoshikawaRyuukou.github.io/posts/android-reverse-engineering-copy/</link><pubDate>Fri, 30 Aug 2024 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/android-reverse-engineering-copy/</guid><description>apktool APKTool反编译 extract.bat ⚠️ 將 extract.bat, apktool.jar, apk 放在相同目錄。
@echo off REM Set the directory where apktool.jar is located set APKTOOL_DIR=%~dp0 REM Enable delayed variable expansion setlocal enabledelayedexpansion REM Loop through all APK files in the same directory as apktool.jar for %%f in (&amp;#34;%APKTOOL_DIR%*.apk&amp;#34;) do ( REM Get the APK file name (without extension) set APK_NAME=%%~nf echo Decompiling APK: !APK_NAME! REM Decompile the APK java -jar &amp;#34;%APKTOOL_DIR%apktool.jar&amp;#34; d &amp;#34;%%f&amp;#34; -o &amp;#34;%APKTOOL_DIR%!</description></item><item><title>Unity - Platform - Android - Build</title><link>https://HoshikawaRyuukou.github.io/posts/unity-platform-android-build/</link><pubDate>Sat, 03 Feb 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity-platform-android-build/</guid><description>Settings gradleTemplate.properties : 專案的全域 Gradle 配置。 AndroidManifest.xml ：用於向 Android 構建工具、Android 作業系統和 Google Play 描述應用的基本資訊。 launcherManifest.xml 定義應用的啟動配置資訊 mainTemplate.gradle：自定義 Android 專案的 Gradle 構建過程，包括添加依賴項、修改編譯設定、配置簽名資訊等。 launcherTemolate.gradle ：包含有關如何構建 Android 應用程式的指令 baseProjectTemplate.gradle：所含的配置會在其他所有範本/Gradle 專案之間共用 Ref Unity 不通過Android studio 打包接SDK</description></item><item><title>Unity - Platform - Android - AndroidJNIModule</title><link>https://HoshikawaRyuukou.github.io/posts/unity-platform-android-androidjnimodule/</link><pubDate>Sun, 28 Jan 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity-platform-android-androidjnimodule/</guid><description>前述 這次的業務需求是
將 Google Play Install Referrer 接入 Unity
目前有使用到 AndroidJNIModule 中的
AndroidJavaClass AndroidJavaObject AndroidJavaProxy 但中途採了不少坑，特此紀錄一下。
基本知識 UnityEngine.AndroidJNIModule How to Create Android Java Callbacks to C# in Unity UnityからAndroidのクラスや関数を呼び出す AndroidJavaClass 可以實例化 Java 類、調用 Java 類的靜態方法，以及訪問 Java 類的靜態屬性。 AndroidJavaObject 創建 Java 對象的實例。 AndroidJavaProxy 允許在 Unity C# 腳本中實現 Java 接口。 允許我們在 Java 中調用方法，這些方法將調用 C# 類上的 匹配 方法。 注意 函數名匹配 (建議直接看 source code 裡面的值，本此次就遇到 官方文件與 jar 為匹配) android.os.Build.VERSION 將意味著要到一個公開類 android.os.Build$VERSION 將意味著進入一個內部類</description></item></channel></rss>