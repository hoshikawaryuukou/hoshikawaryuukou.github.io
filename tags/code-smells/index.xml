<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Code Smells on 識之箱庭</title><link>https://HoshikawaRyuukou.github.io/tags/code-smells/</link><description>Recent content in Code Smells on 識之箱庭</description><generator>Hugo</generator><language>zh-tw</language><copyright>HoshikawaRyuukou</copyright><lastBuildDate>Fri, 18 Jul 2025 21:05:00 +0000</lastBuildDate><atom:link href="https://HoshikawaRyuukou.github.io/tags/code-smells/index.xml" rel="self" type="application/rss+xml"/><item><title>Software Design - Code Smells - Note</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---code-smells---note/</link><pubDate>Fri, 18 Jul 2025 21:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---code-smells---note/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>「Code Smells（程式碼異味）」是一個軟體工程的術語，指的是程式碼中潛在問題的「警訊」。雖然這些寫法不一定會直接造成錯誤，但它們通常代表設計不良、可讀性差、難以維護或擴充的風險。&lt;/p>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://luzkan.github.io/smells/">Code Smells Catalog&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Software Design - Code Smells - Side Effect</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---code-smells---side-effect/</link><pubDate>Fri, 18 Jul 2025 21:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---code-smells---side-effect/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>副作用（Side Effect）指的是一段程式在執行後，&lt;strong>除了回傳值之外還影響了外部狀態&lt;/strong>。&lt;/p>
&lt;p>在錯誤的位置或缺乏揭露的情況下使用副作用，會造成：&lt;/p>
&lt;ul>
&lt;li>函式不可預測&lt;/li>
&lt;li>測試困難&lt;/li>
&lt;li>程式閱讀成本上升&lt;/li>
&lt;li>Bug 躲藏不易察覺&lt;/li>
&lt;/ul>
&lt;h2 id="bad-examples">Bad Examples&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">getUserName&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">user&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">saveLog&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">user&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 副作用：寫入外部 log
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">notifyOthers&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">user&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// 副作用：發送通知
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">user&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="extras">Extras&lt;/h2>
&lt;p>很多時候副作用可能是無法規避的，因此重點不在「禁止副作用」，而是「把副作用設計得可控、可觀測、可預期」。&lt;/p>
&lt;p>較健康的副作用處理策略：&lt;/p>
&lt;ul>
&lt;li>明確命名：像 updateState, notifyUser, logError&lt;/li>
&lt;li>設計邊界：像 useEffect、controller 層 專職處理副作用&lt;/li>
&lt;/ul></description></item></channel></rss>