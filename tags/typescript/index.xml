<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TypeScript on 識之箱庭</title><link>https://HoshikawaRyuukou.github.io/tags/typescript/</link><description>Recent content in TypeScript on 識之箱庭</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>HoshikawaRyuukou</copyright><lastBuildDate>Sat, 22 Jun 2024 21:11:00 +0000</lastBuildDate><atom:link href="https://HoshikawaRyuukou.github.io/tags/typescript/index.xml" rel="self" type="application/rss+xml"/><item><title>Node.js - Packages</title><link>https://HoshikawaRyuukou.github.io/posts/node.js-packages/</link><pubDate>Sat, 22 Jun 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/node.js-packages/</guid><description>Package npm trends 為什麼 pnpm 比 npm 更快且更省空間？ CLI chalk cli-table3 tsx: 替代 node 指令、支持运行 TypeScript &amp;amp; ESM 的 CLI 程序 IO rimraf Rimraf详细介绍 IoC InversifyJS Multitasking workerpool</description></item><item><title>TypeScript - Note</title><link>https://HoshikawaRyuukou.github.io/posts/typescript-note/</link><pubDate>Mon, 29 Apr 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/typescript-note/</guid><description>Style Google TypeScript Style Guide Tool JSON to TypeScript Basic TypeScript 物件中的 public, private, protected, static, readonly</description></item><item><title>Node.js - Unit Test ( TypeScript + Mocha + Chai )</title><link>https://HoshikawaRyuukou.github.io/posts/node.js-unit-test-typescript-+-mocha-+-chai/</link><pubDate>Wed, 03 Apr 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/node.js-unit-test-typescript-+-mocha-+-chai/</guid><description>Guide Setup a new TypeScript project with Mocha support 如何在 TypeScript + ESM + Mocha + tsconfig-paths 下运行 Mocha 测试用例 Chai Configure npm install -D typescript mocha ts-mocha chai npm install -D @types/node npm install -D @types/mocha npm install -D @types/chai test 文件至於 根附錄 test/ 之下，使用 *.spec.ts 格式命名
.mocharc.json
{ &amp;#34;extension&amp;#34;: [ &amp;#34;ts&amp;#34; ], &amp;#34;spec&amp;#34;: &amp;#34;test/**/*.spec.ts&amp;#34;, &amp;#34;import&amp;#34;: &amp;#34;tsx&amp;#34; } package.json
{ &amp;#34;scripts&amp;#34;: { &amp;#34;test&amp;#34;: &amp;#34;ts-mocha&amp;#34; } } simpleTest.spec.ts
describe(&amp;#39;Simple Test&amp;#39;, () =&amp;gt; { it(&amp;#39;should pass this simple test&amp;#39;, () =&amp;gt; { const x = 2; const y = 2; const sum = x + y; expect(sum).</description></item></channel></rss>