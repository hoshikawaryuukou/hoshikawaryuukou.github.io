<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vite on 識之箱庭</title><link>https://HoshikawaRyuukou.github.io/tags/vite/</link><description>Recent content in Vite on 識之箱庭</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>HoshikawaRyuukou</copyright><lastBuildDate>Fri, 20 Sep 2024 20:11:00 +0000</lastBuildDate><atom:link href="https://HoshikawaRyuukou.github.io/tags/vite/index.xml" rel="self" type="application/rss+xml"/><item><title>Workflow - Vite + Vue3 + Github Pages</title><link>https://HoshikawaRyuukou.github.io/posts/workflow-vite-+-vue3-+-github-pages/</link><pubDate>Fri, 20 Sep 2024 20:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow-vite-+-vue3-+-github-pages/</guid><description>Guide vite - 部署静态站点 [vite] 將 Vite 專案部署至 Github Pages vue3项目部署到Github 前置動作 設置 vite.config.js 中設定 Base URL export default defineConfig({ base: &amp;#39;/{repo name}}/&amp;#39;, plugins: [vue()], }); 確保靜態網頁內容無誤 pnpm build pnpm preview 部屬 方式 1 - 使用 gh-pages 套件 安裝套件 pnpm add -D gh-pages 於 package.json 編寫命令 { &amp;#34;scripts&amp;#34;: { &amp;#34;deploy2ghpages&amp;#34;: &amp;#34;gh-pages -d dist&amp;#34; }, } 執行命令 pnpm deploy2ghpages 方式 2 - 使用 github actions 編寫 .github\workflows\gh-pages.yml # 將靜態內容部署到 GitHub Pages 的簡易工作流程 name: Deploy static content to Pages on: # 僅在推送到默認分支時運行。 push: branches: [&amp;#39;main&amp;#39;] # 這個選項可以使你手動在 Action tab 頁面觸發工作流 workflow_dispatch: # 設置 GITHUB_TOKEN 的權限，以允許部署到 GitHub Pages。 permissions: contents: read pages: write id-token: write # 允許一個併發的部署 concurrency: group: &amp;#39;pages&amp;#39; cancel-in-progress: true jobs: # 單次部署的工作描述 deploy: environment: name: github-pages url: ${{ steps.</description></item></channel></rss>