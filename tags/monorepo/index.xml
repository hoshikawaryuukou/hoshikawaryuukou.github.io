<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Monorepo on 識之箱庭</title><link>https://HoshikawaRyuukou.github.io/tags/monorepo/</link><description>Recent content in Monorepo on 識之箱庭</description><generator>Hugo</generator><language>zh-tw</language><copyright>HoshikawaRyuukou</copyright><lastBuildDate>Wed, 23 Oct 2024 21:05:00 +0000</lastBuildDate><atom:link href="https://HoshikawaRyuukou.github.io/tags/monorepo/index.xml" rel="self" type="application/rss+xml"/><item><title>Software Development - Repository Structure - monorepo</title><link>https://HoshikawaRyuukou.github.io/posts/software-development---repository-structure---monorepo/</link><pubDate>Wed, 23 Oct 2024 21:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-development---repository-structure---monorepo/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://segmentfault.com/a/1190000045216948">Monorepo：让你的项目脱胎换骨，既能代码复用，又能独立部署！&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="config">Config&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://blog.logrocket.com/boost-your-productivity-with-typescript-project-references/">Boost your productivity with TypeScript project references&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dev.to/cryogenicplanet/an-actual-complete-guide-to-typescript-monorepos-240l">An actual complete guide to typescript monorepos&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://moonrepo.dev/docs/guides/javascript/typescript-project-refs">TypeScript project references&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="template">Template&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/jkomyno/pnpm-monorepo-template/tree/main">jkomyno/pnpm-monorepo-template&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/bakeruk/modern-typescript-monorepo-example">bakeruk/modern-typescript-monorepo-example&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/firxworx/fx-pnpm-monorepo-starter">firxworx/fx-pnpm-monorepo-starter&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/limuen/monorepo-project">limuen/monorepo-project&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/ixahmedxi/orbitkit">ixahmedxi/orbitkit&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Workflow - Create a monorepo with pnpm workspace</title><link>https://HoshikawaRyuukou.github.io/posts/workflow---create-a-monorepo-with-pnpm-workspace/</link><pubDate>Sun, 06 Oct 2024 20:31:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow---create-a-monorepo-with-pnpm-workspace/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://juejin.cn/post/7357546247848198182">Monorepo与pnpm：前端项目管理的完美搭档&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://juejin.cn/post/7316409548994625574?searchId=20240731105621AD124E03A93B1AB5027A">为什么 pnpm+monorepo 是组件库项目的最佳实践&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://israynotarray.com/other/20240413/3177435894/">Monorepo？來聊聊另一種專案管理架構吧！&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qborfy.com/today/20230107.html">从npm版本依赖到Monorepo大仓项目&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qborfy.com/today/20230225.html">MonoRepo实战：pnpm+nx搭建MonoRepo项目&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dev.to/vinomanick/create-a-monorepo-using-pnpm-workspace-1ebn">Create a monorepo using PNPM workspace&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://juejin.cn/post/7210310775276716092?searchId=20241003162352CA6A9111EA17F1CC615A">从构建到发布：Monorepo 的最佳实践&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/Bernankez/TSTemplateMonorepo">TSTemplateMonorepo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://juejin.cn/post/7338268608324681747">pnpm monorepo 搭建工具库&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="專案基本結構">專案基本結構&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>project-root/ &lt;span style="color:#75715e"># 專案根目錄&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── pnpm-workspace.yaml &lt;span style="color:#75715e"># pnpm 的工作區配置文件，用來定義哪些資料夾屬於工作區範圍&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── package.json &lt;span style="color:#75715e"># 專案的全局配置文件，通常包括依賴、腳本和項目元數據&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── packages/ &lt;span style="color:#75715e"># 所有子包的資料夾，存放具體的子項目&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── pkg01/ &lt;span style="color:#75715e"># 子包01，包含它自己的 package.json 文件和代碼&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── pkg02/ &lt;span style="color:#75715e"># 子包02，與 pkg01 結構相似，也擁有自己的 package.json 和代碼&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="新增-專案內全局配置-packagejson">新增 專案內全局配置 ./package.json&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 產生一個基本的 package.json&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pnpm init 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>monorepo 的全局 package.json 設置 &lt;code>&amp;quot;private&amp;quot;: true&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;private&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="新增-工作區配置文件-pnpm-workspaceyaml">新增 工作區配置文件 ./pnpm-workspace.yaml&lt;/h2>
&lt;ul>
&lt;li>該檔案聲明這是一個 Monorepo 專案。&lt;/li>
&lt;li>&lt;code>pnpm install&lt;/code> 自動安裝所有 package 的相依套件。&lt;/li>
&lt;li>&lt;code>packages&lt;/code> 字段列出了工作區包含的 package 位置。&lt;/li>
&lt;li>工作區下的 package 會有各自的 package.json。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">packages&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#d88200">&amp;#39;packages/*&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="extra---在專案中限用-pnpm">Extra - 在專案中限用 pnpm&lt;/h2>
&lt;p>⚠️ 但目前 npm hook - preinstall 未如預期運作。&lt;/p></description></item><item><title>Workflow - Optimize a monorepo with pnpm and Turborepo</title><link>https://HoshikawaRyuukou.github.io/posts/workflow---optimize-a-monorepo-with-pnpm-and-turborepo/</link><pubDate>Sun, 06 Oct 2024 20:31:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow---optimize-a-monorepo-with-pnpm-and-turborepo/</guid><description>&lt;h2 id="guide">Guide&lt;/h2></description></item><item><title>Software Development - Repository Structure</title><link>https://HoshikawaRyuukou.github.io/posts/software-development---repository-structure---note/</link><pubDate>Mon, 12 Aug 2024 21:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-development---repository-structure---note/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>最近筆者在開發公司的共用套件時，踩了不少坑，尤其是在儲存庫結構方面。&lt;/p>
&lt;p>最初選擇了 polyrepo 的結構，但隨著開發的進展，碰到了一些問題：&lt;/p>
&lt;ul>
&lt;li>要確保這些獨立的 repo 配置能夠同步。&lt;/li>
&lt;li>每次發佈都需要逐一更新每個套件，尤其是那些有兩三層依賴的，讓發佈變得非常繁瑣。&lt;/li>
&lt;li>進行 code review 時，還要不停地在不同 repo 之間切換。&lt;/li>
&lt;/ul>
&lt;p>為了改善這些問題，開始研究 monorepo 的結構：&lt;/p>
&lt;ul>
&lt;li>使用 pnpm workspace 來構建。&lt;/li>
&lt;li>雖然 monorepo 有一些權限控管的隱憂，但因為共用套件的開發人數不多，所以目前還不用太擔心協作上的衝突。&lt;/li>
&lt;/ul>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/joelparkerhenderson/monorepo-vs-polyrepo">monorepo-vs-polyrepo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.explainthis.io/zh-hant/swe/why-use-monorepo">你很常聽到 monorepo，但為什麼要用 monorepo?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zenn.dev/kkoudev/articles/3963065a2ffa26">PolyrepoからMonorepoへ移行する&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="策略">策略&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>monolith&lt;/strong>: 當專案需要保持單一應用程式的完整性，所有功能都被打包在一起，且較少外部依賴。&lt;/li>
&lt;li>&lt;strong>monorepo&lt;/strong>: 當多個專案需要高度共享資源或密切合作，如共用許多元件、工具或模組的情況下。&lt;/li>
&lt;li>&lt;strong>polyrepo&lt;/strong>: 功能差異大、專案之間關聯性不強或不需要彼此干擾的情況下。每個專案獨立運行，較少相互依賴。&lt;/li>
&lt;/ul>
&lt;h2 id="monolith">monolith&lt;/h2>
&lt;h2 id="polyrepo">polyrepo&lt;/h2>
&lt;h2 id="monorepo">monorepo&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://blog.logrocket.com/managing-full-stack-monorepo-pnpm/">Managing a full-stack, multipackage monorepo using pnpm&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://colinhacks.com/essays/live-types-typescript-monorepo">Live types in a TypeScript monorepo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.gfor.rest/blog/node-ts-monorepo">Building a Typescript + NodeJS Monorepo in 2024&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="特色">特色&lt;/h3>
&lt;ul>
&lt;li>👍 package 使用相同版本 &lt;strong>依賴/設定檔/風格&lt;/strong>。&lt;/li>
&lt;li>⚠️ package 權限控管需仰賴其他工作流。&lt;/li>
&lt;/ul></description></item></channel></rss>