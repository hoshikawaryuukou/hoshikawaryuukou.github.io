<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LeetCode on 識之箱庭</title><link>https://HoshikawaRyuukou.github.io/tags/leetcode/</link><description>Recent content in LeetCode on 識之箱庭</description><generator>Hugo</generator><language>zh-tw</language><copyright>HoshikawaRyuukou</copyright><lastBuildDate>Thu, 13 Mar 2025 13:13:00 +0000</lastBuildDate><atom:link href="https://HoshikawaRyuukou.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml"/><item><title>Algorithm - LeetCode 85 - Maximal Rectangle</title><link>https://HoshikawaRyuukou.github.io/posts/algorithm---leetcode-85---maximal-rectangle/</link><pubDate>Thu, 13 Mar 2025 13:13:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/algorithm---leetcode-85---maximal-rectangle/</guid><description>&lt;h2 id="description">Description&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.cn/problems/maximal-rectangle/description/">85. 最大矩形&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="sample">Sample&lt;/h2>
&lt;h3 id="input">input&lt;/h3>



&lt;div class="goat svg-container ">
 
 &lt;svg
 xmlns="http://www.w3.org/2000/svg"
 font-family="Menlo,Lucida Console,monospace"
 
 viewBox="0 0 136 105"
 >
 &lt;g transform='translate(8,16)'>
&lt;text text-anchor='middle' x='0' y='4' fill='currentColor' style='font-size:1em'>m&lt;/text>
&lt;text text-anchor='middle' x='0' y='84' fill='currentColor' style='font-size:1em'>]&lt;/text>
&lt;text text-anchor='middle' x='8' y='4' fill='currentColor' style='font-size:1em'>a&lt;/text>
&lt;text text-anchor='middle' x='16' y='4' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='24' y='4' fill='currentColor' style='font-size:1em'>r&lt;/text>
&lt;text text-anchor='middle' x='32' y='4' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='32' y='20' fill='currentColor' style='font-size:1em'>[&lt;/text>
&lt;text text-anchor='middle' x='32' y='36' fill='currentColor' style='font-size:1em'>[&lt;/text>
&lt;text text-anchor='middle' x='32' y='52' fill='currentColor' style='font-size:1em'>[&lt;/text>
&lt;text text-anchor='middle' x='32' y='68' fill='currentColor' style='font-size:1em'>[&lt;/text>
&lt;text text-anchor='middle' x='40' y='4' fill='currentColor' style='font-size:1em'>x&lt;/text>
&lt;text text-anchor='middle' x='40' y='20' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='40' y='36' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='40' y='52' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='40' y='68' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='48' y='20' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='48' y='36' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='48' y='52' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='48' y='68' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='56' y='4' fill='currentColor' style='font-size:1em'>=&lt;/text>
&lt;text text-anchor='middle' x='56' y='20' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='56' y='36' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='56' y='52' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='56' y='68' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='64' y='20' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='64' y='36' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='64' y='52' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='64' y='68' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='72' y='4' fill='currentColor' style='font-size:1em'>[&lt;/text>
&lt;text text-anchor='middle' x='72' y='20' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='72' y='36' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='72' y='52' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='72' y='68' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='80' y='20' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='80' y='36' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='80' y='52' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='80' y='68' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='88' y='20' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='88' y='36' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='88' y='52' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='88' y='68' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='96' y='20' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='96' y='36' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='96' y='52' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='96' y='68' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='104' y='20' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='104' y='36' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='104' y='52' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='104' y='68' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;text text-anchor='middle' x='112' y='20' fill='currentColor' style='font-size:1em'>]&lt;/text>
&lt;text text-anchor='middle' x='112' y='36' fill='currentColor' style='font-size:1em'>]&lt;/text>
&lt;text text-anchor='middle' x='112' y='52' fill='currentColor' style='font-size:1em'>]&lt;/text>
&lt;text text-anchor='middle' x='112' y='68' fill='currentColor' style='font-size:1em'>]&lt;/text>
&lt;text text-anchor='middle' x='120' y='20' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='120' y='36' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='120' y='52' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;/g>

 &lt;/svg>
 
&lt;/div>
&lt;h3 id="output">output&lt;/h3>



&lt;div class="goat svg-container ">
 
 &lt;svg
 xmlns="http://www.w3.org/2000/svg"
 font-family="Menlo,Lucida Console,monospace"
 
 viewBox="0 0 16 25"
 >
 &lt;g transform='translate(8,16)'>
&lt;text text-anchor='middle' x='0' y='4' fill='currentColor' style='font-size:1em'>6&lt;/text>
&lt;/g>

 &lt;/svg>
 
&lt;/div>
&lt;h2 id="key-points">Key points&lt;/h2>
&lt;h2 id="solution-1---暴力解">Solution 1 - 暴力解&lt;/h2>
&lt;ul>
&lt;li>檢查矩陣中所有可能的矩形，並計算每個矩形是否符合條件。&lt;/li>
&lt;li>對每個可能的矩形進行迴圈遍歷。&lt;/li>
&lt;li>計算該矩形內的元素是否符合條件。&lt;/li>
&lt;/ul>
&lt;h3 id="複雜度">複雜度&lt;/h3>
&lt;ul>
&lt;li>m 為 row 的長度 ，n 是 column 的長度&lt;/li>
&lt;li>時間複雜度：O(m^2 x n^2)&lt;/li>
&lt;li>空間複雜度：O(m x n)&lt;/li>
&lt;/ul>
&lt;h2 id="solution-2---單調棧">Solution 2 - 單調棧&lt;/h2>
&lt;ul>
&lt;li>將原矩陣根據各 row 提取出數個高度(連續的1)陣列。&lt;/li>
&lt;li>便可將問題拆解成數個 84 題。&lt;/li>
&lt;/ul>
&lt;h3 id="推導">推導&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Step&lt;/th>
 &lt;th>Matrix Row&lt;/th>
 &lt;th>heights[]&lt;/th>
 &lt;th>result by No.84&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>1&lt;/td>
 &lt;td>[1,0,1,0,0]&lt;/td>
 &lt;td>[1, 0, 1, 0, 0]&lt;/td>
 &lt;td>1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>2&lt;/td>
 &lt;td>[1,0,1,1,1]&lt;/td>
 &lt;td>[2, 0, 2, 1, 1]&lt;/td>
 &lt;td>2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>3&lt;/td>
 &lt;td>[1,1,1,1,1]&lt;/td>
 &lt;td>[3, 1, 3, 2, 2]&lt;/td>
 &lt;td>6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>4&lt;/td>
 &lt;td>[1,0,0,1,0]&lt;/td>
 &lt;td>[4, 0, 0, 3, 0]&lt;/td>
 &lt;td>4&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>
 &lt;img src="https://HoshikawaRyuukou.github.io/images/Leetcode85.png" alt="Leetcode85">

&lt;/p></description></item><item><title>Algorithm - LeetCode 84 - Largest Rectangle in Histogram</title><link>https://HoshikawaRyuukou.github.io/posts/algorithm---leetcode-84---largest-rectangle-in-histogram/</link><pubDate>Thu, 13 Mar 2025 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/algorithm---leetcode-84---largest-rectangle-in-histogram/</guid><description>&lt;h2 id="description">Description&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.cn/problems/largest-rectangle-in-histogram/description/">84. 柱状图中最大的矩形&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="sample">Sample&lt;/h2>
&lt;h3 id="input">input&lt;/h3>



&lt;div class="goat svg-container ">
 
 &lt;svg
 xmlns="http://www.w3.org/2000/svg"
 font-family="Menlo,Lucida Console,monospace"
 
 viewBox="0 0 208 25"
 >
 &lt;g transform='translate(8,16)'>
&lt;text text-anchor='middle' x='0' y='4' fill='currentColor' style='font-size:1em'>h&lt;/text>
&lt;text text-anchor='middle' x='8' y='4' fill='currentColor' style='font-size:1em'>e&lt;/text>
&lt;text text-anchor='middle' x='16' y='4' fill='currentColor' style='font-size:1em'>i&lt;/text>
&lt;text text-anchor='middle' x='24' y='4' fill='currentColor' style='font-size:1em'>g&lt;/text>
&lt;text text-anchor='middle' x='32' y='4' fill='currentColor' style='font-size:1em'>h&lt;/text>
&lt;text text-anchor='middle' x='40' y='4' fill='currentColor' style='font-size:1em'>t&lt;/text>
&lt;text text-anchor='middle' x='48' y='4' fill='currentColor' style='font-size:1em'>s&lt;/text>
&lt;text text-anchor='middle' x='64' y='4' fill='currentColor' style='font-size:1em'>=&lt;/text>
&lt;text text-anchor='middle' x='80' y='4' fill='currentColor' style='font-size:1em'>[&lt;/text>
&lt;text text-anchor='middle' x='88' y='4' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='96' y='4' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='104' y='4' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='112' y='4' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='120' y='4' fill='currentColor' style='font-size:1em'>5&lt;/text>
&lt;text text-anchor='middle' x='128' y='4' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='136' y='4' fill='currentColor' style='font-size:1em'>6&lt;/text>
&lt;text text-anchor='middle' x='144' y='4' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='152' y='4' fill='currentColor' style='font-size:1em'>2&lt;/text>
&lt;text text-anchor='middle' x='160' y='4' fill='currentColor' style='font-size:1em'>,&lt;/text>
&lt;text text-anchor='middle' x='168' y='4' fill='currentColor' style='font-size:1em'>3&lt;/text>
&lt;text text-anchor='middle' x='176' y='4' fill='currentColor' style='font-size:1em'>]&lt;/text>
&lt;/g>

 &lt;/svg>
 
&lt;/div>
&lt;h3 id="output">output&lt;/h3>



&lt;div class="goat svg-container ">
 
 &lt;svg
 xmlns="http://www.w3.org/2000/svg"
 font-family="Menlo,Lucida Console,monospace"
 
 viewBox="0 0 40 25"
 >
 &lt;g transform='translate(8,16)'>
&lt;text text-anchor='middle' x='0' y='4' fill='currentColor' style='font-size:1em'>1&lt;/text>
&lt;text text-anchor='middle' x='8' y='4' fill='currentColor' style='font-size:1em'>0&lt;/text>
&lt;/g>

 &lt;/svg>
 
&lt;/div>
&lt;h2 id="key-points">Key points&lt;/h2>
&lt;ul>
&lt;li>目標是 &lt;strong>找到每個柱子能擴展的最大寬度&lt;/strong>，然後計算以該柱子為高度的最大矩形面積。&lt;/li>
&lt;/ul>
&lt;h2 id="solution-1---暴力解">Solution 1 - 暴力解&lt;/h2>
&lt;ul>
&lt;li>對於每個 &lt;code>heights[i]&lt;/code>，向 &lt;strong>左&lt;/strong>、&lt;strong>右&lt;/strong> 擴展，直到遇到比它矮的柱子。&lt;/li>
&lt;li>&lt;strong>左邊界 (left)&lt;/strong>：找第一個小於 heights[i] 的索引&lt;/li>
&lt;li>&lt;strong>右邊界 (right)&lt;/strong>：找第一個小於 heights[i] 的索引&lt;/li>
&lt;li>&lt;strong>寬度 (width)&lt;/strong>：&lt;code>width = right - left - 1&lt;/code>&lt;/li>
&lt;li>&lt;strong>面積 (area)&lt;/strong>：&lt;code>area = heights[i] * (right - left - 1)&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="推導">推導&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>i&lt;/th>
 &lt;th>heights[i]&lt;/th>
 &lt;th>left&lt;/th>
 &lt;th>right&lt;/th>
 &lt;th>width&lt;/th>
 &lt;th>area&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>0&lt;/td>
 &lt;td>2&lt;/td>
 &lt;td>-1&lt;/td>
 &lt;td>1&lt;/td>
 &lt;td>1&lt;/td>
 &lt;td>2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>1&lt;/td>
 &lt;td>1&lt;/td>
 &lt;td>-1&lt;/td>
 &lt;td>6&lt;/td>
 &lt;td>6&lt;/td>
 &lt;td>6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>2&lt;/td>
 &lt;td>5&lt;/td>
 &lt;td>1&lt;/td>
 &lt;td>4&lt;/td>
 &lt;td>2&lt;/td>
 &lt;td>10&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>3&lt;/td>
 &lt;td>6&lt;/td>
 &lt;td>2&lt;/td>
 &lt;td>4&lt;/td>
 &lt;td>1&lt;/td>
 &lt;td>6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>4&lt;/td>
 &lt;td>2&lt;/td>
 &lt;td>1&lt;/td>
 &lt;td>6&lt;/td>
 &lt;td>4&lt;/td>
 &lt;td>8&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>5&lt;/td>
 &lt;td>3&lt;/td>
 &lt;td>4&lt;/td>
 &lt;td>6&lt;/td>
 &lt;td>1&lt;/td>
 &lt;td>3&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>最大矩形面積 = &lt;code>10&lt;/code>&lt;/strong>&lt;/p></description></item></channel></rss>