<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on 識之箱庭</title><link>https://HoshikawaRyuukou.github.io/tags/git/</link><description>Recent content in Git on 識之箱庭</description><generator>Hugo</generator><language>zh-tw</language><copyright>HoshikawaRyuukou</copyright><lastBuildDate>Sun, 16 Jul 2023 10:08:39 +0800</lastBuildDate><atom:link href="https://HoshikawaRyuukou.github.io/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Git - Rebase</title><link>https://HoshikawaRyuukou.github.io/posts/git---rebase/</link><pubDate>Sun, 16 Jul 2023 10:08:39 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/git---rebase/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;過去常以為 &lt;code&gt;rebase&lt;/code&gt; 是像「剪下貼上」的操作，但實際上更像是「複製貼上」，它會將一系列的 Commit 複製一份，並重新套用在新的基底上，因此會產生新的 SHA-1 值。&lt;/p&gt;
&lt;h3 id="主要情境與特性"&gt;&lt;strong&gt;主要情境與特性&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;歷史紀錄更簡潔&lt;/strong&gt;：&lt;code&gt;rebase&lt;/code&gt; 不會像 &lt;code&gt;merge&lt;/code&gt; 那樣產生額外的合併節點（Merge Commit），讓 Commit 歷史紀錄更為線性、乾淨。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;適用於未推送的 Commit&lt;/strong&gt;：當你想要整理、合併或修改本地端「還沒推送到遠端」的 Commit 時，&lt;code&gt;rebase&lt;/code&gt; 是非常實用的工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;避免修改已推送的歷史&lt;/strong&gt;：由於 &lt;code&gt;rebase&lt;/code&gt; 會改寫 Commit 歷史，因此 &lt;strong&gt;絕對不要&lt;/strong&gt; 對已經推送到遠端（與他人協作中）的分支進行 &lt;code&gt;rebase&lt;/code&gt; 操作，以免造成他人的困擾。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HeF7dwVyzow"&gt;另一種合併方式（使用 rebase）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jessie75919.medium.com/git-rebase-%E7%94%A8%E6%B3%95-3e1ef046e357"&gt;git rebase 用法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="extras"&gt;Extras&lt;/h2&gt;
&lt;h3 id="如何取消-rebase-操作"&gt;&lt;strong&gt;如何取消 Rebase 操作&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;如果你在進行 &lt;code&gt;rebase&lt;/code&gt; 時後悔了，可以透過以下兩種方式安全地回溯到操作之前的狀態：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;使用 &lt;code&gt;git reflog&lt;/code&gt; 尋找歷史紀錄&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;輸入 &lt;code&gt;git reflog&lt;/code&gt;，這會列出你所有的 Git 操作紀錄。&lt;/li&gt;
&lt;li&gt;找到 &lt;code&gt;rebase&lt;/code&gt; 執行前的 Commit ID。&lt;/li&gt;
&lt;li&gt;輸入 &lt;code&gt;git reset XXXXXXX --hard&lt;/code&gt; 來回溯（其中 &lt;code&gt;XXXXXXX&lt;/code&gt; 為該 Commit ID）。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;使用 &lt;code&gt;ORIG_HEAD&lt;/code&gt; 快速回溯&lt;/strong&gt; 由於 Git 在執行 &lt;code&gt;reset&lt;/code&gt; 等具風險的操作時，會額外將上一個 HEAD 的位置記錄在 &lt;code&gt;ORIG_HEAD&lt;/code&gt; 中。因此，你也可以直接執行以下指令來快速達到相同的效果：&lt;/p&gt;</description></item><item><title>Git - Reapply .gitignore</title><link>https://HoshikawaRyuukou.github.io/posts/git---reapply-.gitignore/</link><pubDate>Fri, 14 Jul 2023 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/git---reapply-.gitignore/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;當你一開始沒 ignore 到某些檔案，後來補上 .gitignore，卻發現 Git 還是繼續追蹤那些檔案。&lt;/p&gt;
&lt;h2 id="solution"&gt;Solution&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 先清掉 Git 的快取（不會刪檔，只是取消追蹤）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;git rm -r --cached .
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 再重新加入所有檔案（讓 .gitignore 這次能正確發揮作用）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 然後提交變更&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;git commit -m &lt;span style="color:#d88200"&gt;&amp;#34;Reapply .gitignore rules&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item></channel></rss>