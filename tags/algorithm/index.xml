<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Algorithm on 識之箱庭</title><link>https://HoshikawaRyuukou.github.io/tags/algorithm/</link><description>Recent content in Algorithm on 識之箱庭</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>HoshikawaRyuukou</copyright><lastBuildDate>Thu, 28 Nov 2024 13:11:00 +0000</lastBuildDate><atom:link href="https://HoshikawaRyuukou.github.io/tags/algorithm/index.xml" rel="self" type="application/rss+xml"/><item><title>Algorithm - Complexity</title><link>https://HoshikawaRyuukou.github.io/posts/algorithm-complexity/</link><pubDate>Thu, 28 Nov 2024 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/algorithm-complexity/</guid><description>Quick Chat 在尋求最優解法設計 既快又省 的資料結構與演算時，有以下兩個面向
時間效率：演算法執行時間的長短。 空間效率：演算法佔用記憶體空間的大小。 Guide 第 2 章 - 复杂度分析 時間複雜度 (Time Complexity) 2.3 時間複雜度 ⚠️ 時間複雜度分析統計的不是演算法執行時間，而是演算法執行時間隨著資料量變大時的增長趨勢。
有效評估演算法效率。 推算方法更簡便。 存在一定的侷限性(當輸入資料大小較小時)。 空間複雜度 (Space Complexity) 2.4 空間複雜度 ⚠️ 我們通常只關注最差空間複雜度。
輸入空間：演算法的輸入資料。 暫存空間：執行過程中的變數、物件、函式上下文等資料。 輸出空間：儲存演算法的輸出資料。</description></item><item><title>Algorithm - Sampling - Alias Method</title><link>https://HoshikawaRyuukou.github.io/posts/algorithm-sampling-alias-method/</link><pubDate>Sun, 04 Aug 2024 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/algorithm-sampling-alias-method/</guid><description>別名方法是一種眾所周知的演算法，用於從任意離散機率分佈中進行恆定時間採樣，該演算法依賴於簡單的預先計算的查找表。
Guide Alias Method: 非均匀随机抽样算法 Darts, Dice, and Coins: Sampling from a Discrete Distribution Weighted Random: algorithms for sampling from discrete probability distributions mackysoft/Choice jgrapht-core/src/main/java/org/jgrapht/alg/util/AliasMethodSampler.java 務必先觀看
第一篇文章的漸進思考與核心精神 第二篇文章最後的 Vose&amp;rsquo;s Alias Method 圖解 Example 給定的權重 [0.1, 0.2, 0.3, 0.4]。
按均值縮放權重： 均值為 : 0.25 縮放後的權重：[0.4, 0.8, 1.2, 1.6] 分類權重到 large 和 small 隊列： 初始狀態：small = [], large = [] 權重 0.4 小於 1，放入 small：small = [0] 權重 0.8 小於 1，放入 small：small = [0, 1] 權重 1.</description></item><item><title>Algorithm - Note</title><link>https://HoshikawaRyuukou.github.io/posts/algorithm-note/</link><pubDate>Thu, 30 May 2024 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/algorithm-note/</guid><description>Books fucking-algorithm hello-algo Repo The Algorithms</description></item></channel></rss>