<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pnpm on 識之箱庭</title><link>https://HoshikawaRyuukou.github.io/tags/pnpm/</link><description>Recent content in pnpm on 識之箱庭</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>HoshikawaRyuukou</copyright><lastBuildDate>Mon, 04 Nov 2024 21:11:00 +0000</lastBuildDate><atom:link href="https://HoshikawaRyuukou.github.io/tags/pnpm/index.xml" rel="self" type="application/rss+xml"/><item><title>Workflow - Publish private packages to Github Packages using Changesets</title><link>https://HoshikawaRyuukou.github.io/posts/workflow-publish-private-packages-to-github-packages-using-changesets/</link><pubDate>Mon, 04 Nov 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow-publish-private-packages-to-github-packages-using-changesets/</guid><description>Guide changesets/action .github/workflows/publish-package.yml name: Publish package to GitHub Packages on: workflow_dispatch: release: types: [published] concurrency: ${{ github.workflow }}-${{ github.ref }} jobs: release: runs-on: ubuntu-latest steps: - name: Checkout Repo uses: actions/checkout@v4 - uses: pnpm/action-setup@v4 with: version: 9 run_install: false - uses: actions/setup-node@v4 with: node-version: &amp;#39;20.x&amp;#39; registry-url: &amp;#39;https://npm.pkg.github.com&amp;#39; scope: &amp;#39;@user-or-organization&amp;#39; - name: Install dependencies run: pnpm install - name: Build package run: pnpm build - name: Create Release Pull Request or Publish to npm id: changesets uses: changesets/action@v1 with: # This expects you to have a script called release which does a build for your packages and calls changeset publish publish: pnpm release env: GITHUB_TOKEN: ${{ secrets.</description></item><item><title>Node.js - Package Manager - pnpm</title><link>https://HoshikawaRyuukou.github.io/posts/node.js-package-manager-pnpm/</link><pubDate>Sat, 12 Oct 2024 21:16:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/node.js-package-manager-pnpm/</guid><description>Guide pnpm 为什么现在我更推荐 pnpm 而不是 npm/yarn? pnpm、npm、yarn 包管理工具『优劣对比』及『环境迁移』 从pnpm工具了解整个npm包核心管理原理 為什麼 pnpm 比 npm 更快且更省空間？ pnpm实战教程 Install 全域安裝 npm install -g pnpm 環境配置 - Windows ⚠️ 使用 PowerShell 系統管理員 Get-ExecutionPolicy # 如果為 Restricted 則繼續進行 Set-ExecutionPolicy RemoteSigned Commands pnpm 本體 pnpm self-update : 將 pnpm 更新到最新版本。(建議重啟 ide) Node.js 的執行環境 pnpm env use &amp;ndash;global lts : 安裝並使用 LTS 版本 pnpm env use &amp;ndash;global {version} : 安裝並使用指定版本 pnpm env add &amp;ndash;global {version} : 僅安裝指定版本 pnpm env remove &amp;ndash;global {version} : 移除指定版本 pnpm env list &amp;ndash;remote : 列出線上可用的版本 packages pnpm add &amp;lt;pkg&amp;gt; : 添加依賴 pnpm remove &amp;lt;pkg&amp;gt; : 移除依賴 pnpm install : 安裝所有依賴 pnpm update : 在 package.</description></item><item><title>Workflow - Create a monorepo with pnpm workspace</title><link>https://HoshikawaRyuukou.github.io/posts/workflow-create-a-monorepo-with-pnpm-workspace/</link><pubDate>Sun, 06 Oct 2024 20:31:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow-create-a-monorepo-with-pnpm-workspace/</guid><description>Guide Monorepo与pnpm：前端项目管理的完美搭档 为什么 pnpm+monorepo 是组件库项目的最佳实践 Monorepo？來聊聊另一種專案管理架構吧！ 从npm版本依赖到Monorepo大仓项目 MonoRepo实战：pnpm+nx搭建MonoRepo项目 Create a monorepo using PNPM workspace 从构建到发布：Monorepo 的最佳实践 TSTemplateMonorepo pnpm monorepo 搭建工具库 專案基本結構 project-root/ # 專案根目錄 ├── pnpm-workspace.yaml # pnpm 的工作區配置文件，用來定義哪些資料夾屬於工作區範圍 ├── package.json # 專案的全局配置文件，通常包括依賴、腳本和項目元數據 └── packages/ # 所有子包的資料夾，存放具體的子項目 ├── pkg01/ # 子包01，包含它自己的 package.json 文件和代碼 └── pkg02/ # 子包02，與 pkg01 結構相似，也擁有自己的 package.json 和代碼 新增 專案內全局配置 ./package.json # 產生一個基本的 package.json pnpm init monorepo 的全局 package.json 設置 &amp;quot;private&amp;quot;: true { &amp;#34;private&amp;#34;: true, } 新增 工作區配置文件 .</description></item><item><title>Workflow - Optimize a monorepo with pnpm and Turborepo</title><link>https://HoshikawaRyuukou.github.io/posts/workflow-optimize-a-monorepo-with-pnpm-and-turborepo/</link><pubDate>Sun, 06 Oct 2024 20:31:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow-optimize-a-monorepo-with-pnpm-and-turborepo/</guid><description>Guide</description></item><item><title>Workflow - Publish a private package to Github Packages</title><link>https://HoshikawaRyuukou.github.io/posts/workflow-publish-a-private-package-to-github-packages/</link><pubDate>Sun, 06 Oct 2024 20:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow-publish-a-private-package-to-github-packages/</guid><description>Guide Publishing a Private Package on GitHub Packages 发布 Node.js 包 Notice ⚠️ 請先確保 repository 與 package 以配置為 private。 ⚠️ 本範例使用 pnpm。 package.json 的必要配置 { &amp;#34;name&amp;#34;: &amp;#34;@user-or-organization/package-name&amp;#34;, &amp;#34;version&amp;#34;: &amp;#34;1.0.0&amp;#34;, &amp;#34;repository&amp;#34;: { &amp;#34;url&amp;#34;: &amp;#34;https://github.com/user-or-organization/package-name.git&amp;#34; }, &amp;#34;publishConfig&amp;#34;: { &amp;#34;registry&amp;#34;: &amp;#34;https://npm.pkg.github.com/&amp;#34; } } .github/workflows/publish-package.yml name: Publish package to GitHub Packages on: workflow_dispatch: release: types: [published] jobs: build: runs-on: ubuntu-latest permissions: contents: read packages: write steps: - uses: actions/checkout@v4 - uses: pnpm/action-setup@v4 with: version: 9 run_install: false - uses: actions/setup-node@v4 with: node-version: &amp;#39;20.</description></item></channel></rss>