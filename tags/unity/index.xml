<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Unity on 識之箱庭</title><link>https://HoshikawaRyuukou.github.io/tags/unity/</link><description>Recent content in Unity on 識之箱庭</description><generator>Hugo</generator><language>zh-tw</language><copyright>HoshikawaRyuukou</copyright><lastBuildDate>Tue, 26 Aug 2025 16:56:18 +0800</lastBuildDate><atom:link href="https://HoshikawaRyuukou.github.io/tags/unity/index.xml" rel="self" type="application/rss+xml"/><item><title>Unity - Platform - Web - Build</title><link>https://HoshikawaRyuukou.github.io/posts/unity---platform---web/</link><pubDate>Tue, 26 Aug 2025 16:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---platform---web/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;⚠️ 建議使用 &lt;strong&gt;Unity 2021&lt;/strong&gt; 以上開發，我目前使用 &lt;strong&gt;Unity 6&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/6000.2/Documentation/Manual/webgl-develop.html"&gt;Unity - Manual: Web development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.unity.com/tutorial/getting-started-with-unity-web"&gt;Getting started with Unity Web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="webassembly"&gt;WebAssembly&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/develop/guide/game-engine/rd-to-SCgame/open-capacity/overview-and-compatibility/sc_webgl_overview"&gt;WebGL适配方案概述_抖音开放平台&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="template"&gt;Template&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://seansleblanc.itch.io/better-minimal-webgl-template"&gt;(Unity) Better Minimal WebGL Template&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="build"&gt;Build&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.crazygames.com/resources/export-tips/"&gt;Export tips - CrazyGames Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/develop/guide/game-engine/rd-to-SCgame/open-capacity/changelog-and-resource/sc_webgl_resource"&gt;小游戏资源部署与缓存_小游戏_抖音开放平台&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="host"&gt;Host&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/terreng/simple-web-server"&gt;terreng/simple-web-server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/terreng/sws-unity-plugin"&gt;terreng/sws-unity-plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="optimization"&gt;Optimization&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/live/DlnS53TYJO8"&gt;Crazy Web Game Jam 24: Masterclass #1 - Web Optimization - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/develop/guide/game-engine/rd-to-SCgame/open-capacity/performance-optimization/sc_webgl_performance_optimization"&gt;性能优化总览_抖音开放平台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/develop/guide/performance-optimization/startup-performance/sc_webgl_start_speed"&gt;提升Unity WebGL游戏启动速度_抖音开放平台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/develop/guide/performance-optimization/runtime-performance/optimize-game-memory"&gt;优化普通小游戏内存_抖音开放平台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/develop/guide/performance-optimization/runtime-performance/sc_webgl_runtime_optimization"&gt;Unity WebGL 运行时优化建议_抖音开放平台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/6000.2/Documentation/Manual/webgl-texture-compression.html"&gt;Unity - Manual: Texture compression in Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/egostudio/article/details/145555816"&gt;Unity WebGL包体压缩_unity webgl 压缩-CSDN博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Package Manager &lt;strong&gt;停用&lt;/strong&gt; 不使用的 &lt;strong&gt;Built-in&lt;/strong&gt; 模組&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="others"&gt;Others&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/GoodCooking/article/details/136307133"&gt;Unity发布webgl获取浏览器的URL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Marinerer/unity-webgl"&gt;GitHub - Marinerer/unity-webg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="possibly-outdated"&gt;Possibly Outdated&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tech.framesynthesis.co.jp/unity/webgl/"&gt;Unity WebGLビルドメモ - フレームシンセシス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/happy_elements/articles/hekk_ac_20231215"&gt;Unity 製 WebGL ゲームを AWS でお手軽公開&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Workflow – Host Unity Web Game on GitHub Pages</title><link>https://HoshikawaRyuukou.github.io/posts/workflow--host-unity-web-game-on-github-pages/</link><pubDate>Mon, 18 Aug 2025 20:38:51 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow--host-unity-web-game-on-github-pages/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;⚠️ 在 Unity 中需啟用 &lt;strong&gt;Decompression Fallback&lt;/strong&gt;（因 GitHub Pages 不支援壓縮檔案）。&lt;/li&gt;
&lt;li&gt;⚠️ &lt;strong&gt;僅 Public Repository&lt;/strong&gt; 可免費使用 GitHub Pages。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下提供兩種簡單的部署方式（此處不討論 CI 自動化）：&lt;/p&gt;
&lt;h2 id="方法一建立獨立的-public-repository"&gt;方法一：建立獨立的 Public Repository&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;建立一個新的 &lt;strong&gt;Public Repository&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;將 Unity WebGL 的建置輸出檔案上傳至該 Repository。&lt;/li&gt;
&lt;li&gt;在 GitHub 設定中，指定包含 &lt;code&gt;index.html&lt;/code&gt; 的資料夾，即可完成部署。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="方法二孤兒分支-orphan-branch"&gt;方法二：孤兒分支 (Orphan Branch)&lt;/h2&gt;
&lt;p&gt;我已封裝好一個 PowerShell 工具，能快速完成部署：&lt;/p&gt;
&lt;p&gt;👉 &lt;a href="https://github.com/hoshikawaryuukou/MGST-PowerShell-Toolkit/tree/main/GH-Pages-Deploy"&gt;MGST-PowerShell-Toolkit/GH-Pages-Deploy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此工具能將指定 Git 倉庫中的建置成果部署到 GitHub Pages 的 &lt;code&gt;gh-pages&lt;/code&gt; 分支。&lt;br&gt;
它透過 &lt;strong&gt;Git worktree&lt;/strong&gt; 與 &lt;strong&gt;孤兒分支（orphan branch）&lt;/strong&gt; 技術，能在不影響主分支開發的情況下，獨立維護部署內容。&lt;/p&gt;
&lt;p&gt;請先確認目標目錄符合以下結構：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;project-root/ 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── .git
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;└── Builds/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Unity - Sites</title><link>https://HoshikawaRyuukou.github.io/posts/unity---sites/</link><pubDate>Sat, 16 Aug 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---sites/</guid><description>&lt;h2 id="news"&gt;News&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.yucchiy.com/"&gt;Yucchiy&amp;rsquo;s Note&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="community"&gt;Community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://unityroom.com/"&gt;unityroom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/tags/unity"&gt;Qiita|Unity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/topics/unity?order=daily"&gt;Zenn|Unity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learning.unity3d.jp/"&gt;Unity Learning Materials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://note.com/search?q=unity&amp;amp;context=note&amp;amp;mode=search"&gt;「unity」の人気の記事一覧｜note&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="blog-enterprise"&gt;Blog (Enterprise)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.cyberagent.co.jp/blog/"&gt;CyberAgent Developers Blog | サイバーエージェント デベロッパーズブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://technote.qualiarts.jp/"&gt;QualiArtsエンジニアブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://note.com/reality_eng/"&gt;REALITY｜note&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tech.mirrativ.stream/"&gt;Mirrativ Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="blog-active"&gt;Blog (Active)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://baba-s.hatenablog.com/"&gt;コガネブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://light11.hatenadiary.com/"&gt;LIGHT11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://takap-tech.com/"&gt;PG日誌&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.kyubuns.dev/"&gt;きゅぶろぐ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hanachiru-blog.com/"&gt;はなちるのマイノート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kan-kikuchi.hatenablog.com/"&gt;(:3[kanのメモ帳]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nowsprinting.com/"&gt;やらなイカ？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nekojara.city/"&gt;ねこじゃらシティ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.karvan1230.com/"&gt;原カバンは鞄のお店ではありません。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raspberly.hateblo.jp/archive"&gt;Raspberlyのブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://unityletsgo.hatenablog.com/"&gt;unityでいってみよう！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="blog"&gt;Blog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gamedevbeginner.com/"&gt;Game Dev Beginner - Everyone Can Make Games&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://orotiyamatano.hatenablog.com/"&gt;YAMADA TAISHI’s diary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shibuya24.info/"&gt;渋谷ほととぎす通信&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kingmo.jp/kumonos/"&gt;くものす&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://onclick9927.github.io/"&gt;Real-Man&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tedliou.com/unity/"&gt;偵錯桐人 - unity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.coolcoding.cn/"&gt;老刘@开发笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.liuocean.com/"&gt;L&amp;rsquo;s Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lianbai.github.io/"&gt;LianBai&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lightjiao/lightjiao.github.io/tree/master?tab=readme-ov-file"&gt;Lightjiao的博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kyoro-s.com/"&gt;ピクセルブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="channel"&gt;Channel&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCFK6NCbuCIVzA6Yj1G_ZqCg"&gt;Code Monkey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/@MSTUDIOHUB/videos"&gt;M Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCfIiEKtakOPRPnE4iQTLvlA/videos"&gt;Coco Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="events"&gt;Events&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://meetup.unity3d.jp/jp/"&gt;Unity Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/advent-calendar/2023/unity"&gt;Unity Advent Calendar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://uycc.unity3d.jp/"&gt;Unityユースクリエイターカップ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Package - Web Stripping Tool</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package---web-stripping-tool/</link><pubDate>Fri, 15 Aug 2025 12:46:15 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package---web-stripping-tool/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;透過移除未使用的 &lt;strong&gt;子模組（Submodules）&lt;/strong&gt;，你可以在不刪除整個功能套件的情況下，有效縮減遊戲的最終建置大小。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;這款套件可說是 &lt;strong&gt;Unity 6&lt;/strong&gt; 推出至今，我個人認為最有價值的工具之一。然而，它卻只在 &lt;strong&gt;Unity Korea&lt;/strong&gt; 的 YouTube 頻道上發布介紹，而且幾乎沒有任何宣傳，這點實在令人費解 😂。&lt;/p&gt;
&lt;p&gt;⚠️ 詳細的具體操作步驟，請務必參考官方文件與影片說明。此處僅列出幾個關鍵要點。&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/Packages/com.unity.web.stripping-tool@1.1/manual/index.html"&gt;Web Stripping Tool package | Web Stripping Tool | 1.1.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=p2n7BStUazw"&gt;[꼬꼬유] Web Stripping 툴 패키지를 활용한 빌드 크기 및 로드 시간 최적화&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://j2su0218.tistory.com/1706"&gt;Unity Web Stripping Tool - 초보자용 정리 가이드&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="notice"&gt;Notice&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;適用於 Unity 6.1 及以上版本。&lt;/li&gt;
&lt;li&gt;用於移除 Submodules 而不是整個 Modules。 若使用 2D Rendering 但未使用到 2D Rendering Sorting，則可以僅刪除指定子模組。&lt;/li&gt;
&lt;li&gt;剝離過程是在遊戲完成初步建構後進行的，屬於建構管線的 &lt;strong&gt;後處理&lt;/strong&gt; 步驟。&lt;/li&gt;
&lt;li&gt;建議將設置文件納入版本控制。&lt;/li&gt;
&lt;li&gt;該工具將持續改進，並計劃支持更多子模組。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="workflow"&gt;Workflow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安裝與設置&lt;/strong&gt;：&lt;/p&gt;</description></item><item><title>Unity - Optimization</title><link>https://HoshikawaRyuukou.github.io/posts/unity---optimization/</link><pubDate>Fri, 08 Aug 2025 16:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---optimization/</guid><description>&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.crazygames.com/resources/development-tips/"&gt;Development tips - CrazyGames Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="profiler"&gt;Profiler&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://sharpcoderblog.com/blog/unity-3d-how-to-use-profiler-to-optimize-your-code"&gt;Unity Optimize Your Game Using Profiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.chunfuchao.com/posts/unity-profiling-tools/"&gt;Unity 手機遊戲最佳化雜談– 內建Profiling&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="project-auditor"&gt;Project Auditor&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/Packages/com.unity.project-auditor@1.0/manual/index.html"&gt;Project Auditor package | Project Auditor | 1.0.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/attiliohimeki/unity-project-analysis-with-the-project-auditor-2pea"&gt;Unity Project analysis with the Project Auditor - DEV Community&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Software Design - Architecture - Unity Slot Game Client</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---architecture---unity-slot-game-client/</link><pubDate>Mon, 30 Jun 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---architecture---unity-slot-game-client/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;前端開發時，「狀態管理」一直是個大哉問。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;本次的應用是 &lt;strong&gt;Slot Game&lt;/strong&gt;，這類應用強調「表現層細節」，所以對於狀態的控制不像一般資料應用一樣單純，需要處理許多細部和即時的變化。&lt;/p&gt;
&lt;h3 id="狀態管理挑戰"&gt;狀態管理挑戰&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;響應式 data-binding 限制 :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若完全依賴響應式 data-binding，容易產生太多「中間態」(例如動畫進行中、結果待顯示、部分組件已經觸發&amp;hellip;等)。&lt;/li&gt;
&lt;li&gt;這樣會造成 state 爆炸、難以追蹤維護。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;命令式流程控制的必要性 :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;部分場景下，直接用命令式（imperative）流程更有效率。&lt;/li&gt;
&lt;li&gt;多組件聯動時的「動畫序列控制」。&lt;/li&gt;
&lt;li&gt;一連串的 user action/遊戲事件，需明確依序觸發。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="-技術棧一覽"&gt;⚙️ 技術棧一覽&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;UniTask (異步)&lt;/li&gt;
&lt;li&gt;R3 (Rx，UniRx 後繼者)&lt;/li&gt;
&lt;li&gt;VContainer (依賴注入)&lt;/li&gt;
&lt;li&gt;LitMotion (Tween)&lt;/li&gt;
&lt;li&gt;YooAsset (資源管理)&lt;/li&gt;
&lt;li&gt;Newtonsoft Json (Json 解析)&lt;/li&gt;
&lt;li&gt;Alchemy (編輯器擴充)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="專案結構"&gt;專案結構&lt;/h2&gt;
&lt;h3 id="modules-主架構"&gt;Modules 主架構&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;project-root/
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── _Debug/ &lt;span style="color:#75715e"&gt;# 測試或實驗用模組&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── App/ &lt;span style="color:#75715e"&gt;# 啟動點與業務邏輯總控&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── GameAPI/ &lt;span style="color:#75715e"&gt;# 遊戲 API 定義&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── GameRunner/ &lt;span style="color:#75715e"&gt;# 遊戲平台通用組件 (純 UIComponent)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── GameStage/ &lt;span style="color:#75715e"&gt;# 遊戲表演組件 (純 UIComponent)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;└── Shared/ &lt;span style="color:#75715e"&gt;# 共用模組&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;App：負責組合、調度各個模組，等於是專案的大腦。&lt;/li&gt;
&lt;li&gt;GameAPI：只放介面定義，跨模組通訊與擴充。&lt;/li&gt;
&lt;li&gt;GameRunner / GameStage：都是純 UIComponent (基本都是 Mono)。&lt;/li&gt;
&lt;li&gt;Shared：共用邏輯、工具類、資料結構都放這裡。&lt;/li&gt;
&lt;li&gt;_Debug：僅用於測試、debug，正式版本不打包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="module-模組以單一模組為例"&gt;Module 模組（以單一模組為例）&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;module-root/
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── Res/ &lt;span style="color:#75715e"&gt;# 模組獨立資源&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;└── Scripts/ &lt;span style="color:#75715e"&gt;# 腳本程式碼&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ├── Editor/ &lt;span style="color:#75715e"&gt;# 編輯器相關&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; └── Runtime/ &lt;span style="color:#75715e"&gt;# 執行時相關&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Res：模組內專屬資源包。&lt;/li&gt;
&lt;li&gt;Scripts/Editor：編輯器工具。&lt;/li&gt;
&lt;li&gt;Scripts/Runtime：模組實際邏輯，遊戲執行時會用到的部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="app-runtime運行時架構"&gt;App-Runtime（運行時架構）&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;App-Runtime-root/
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── Configs/ &lt;span style="color:#75715e"&gt;# 配置與定義&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── Services/ &lt;span style="color:#75715e"&gt;# 封裝各種業務操作&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── Presenters/ &lt;span style="color:#75715e"&gt;# 控制流程、狀態綁定&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;└── Stores/ &lt;span style="color:#75715e"&gt;# 狀態管理&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Configs：所有定義類、配置文件，便於集中管理。&lt;/li&gt;
&lt;li&gt;Services：將業務操作進行封裝，利於重用及維護。&lt;/li&gt;
&lt;li&gt;Presenters：類似 MVP Pattern 的 Presenter，專注於流程控制和資料流。&lt;/li&gt;
&lt;li&gt;Stores：專責狀態儲存，確保資料一致性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="實作體悟-1實務上的狀態變化"&gt;實作體悟 1：實務上的狀態變化&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一個操作觸發多處改變（One-to-Many Updates）&lt;br&gt;
例如：用戶點擊「開始」後，同時啟動動畫、鎖定按鈕、重置分數、播放音效。&lt;/p&gt;</description></item><item><title>Unity - Packages</title><link>https://HoshikawaRyuukou.github.io/posts/unity---packages/</link><pubDate>Mon, 19 May 2025 12:46:15 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---packages/</guid><description>&lt;h2 id="package-collection"&gt;Package Collection&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/XINCGer/Unity3DTraining/tree/0501d6b93520f9d3481f76cd092b71c945e3e3f7?tab=readme-ov-file"&gt;XINCGer/Unity3DTraining&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/killop/anything_about_game/tree/b5c3b2e573d0970b318fd75b1449dbd9fdaa0ee9"&gt;killop/anything_about_game&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/baba-s/awesome-unity-open-source-on-github/tree/master?tab=readme-ov-file"&gt;baba-s/awesome-unity-open-source-on-github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="animation---tween"&gt;Animation - Tween&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AnnulusGames/LitMotion"&gt;AnnulusGames/LitMotion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="async"&gt;Async&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Cysharp/UniTask"&gt;Cysharp/UniTask&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="debug"&gt;Debug&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yasirkula/UnityIngameDebugConsole"&gt;yasirkula/UnityIngameDebugConsole&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="dependency-injection"&gt;Dependency Injection&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hadashiA/VContainer"&gt;hadashiA/VContainer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="dialogue"&gt;Dialogue&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/YarnSpinnerTool/YarnSpinner-Unity"&gt;YarnSpinnerTool/YarnSpinner-Unity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="editor"&gt;Editor&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AnnulusGames/Alchemy"&gt;AnnulusGames/Alchemy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="hot-update"&gt;Hot Update&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hybridclr.doc.code-philosophy.com/"&gt;focus-creative-games/hybridclr&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="io"&gt;IO&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Cysharp/ZString"&gt;Cysharp/ZString&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jilleJr/Newtonsoft.Json-for-Unity/wiki/Install-official-via-UPM"&gt;Newtonsoft.Json&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;git - com.unity.nuget.newtonsoft-json&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="language"&gt;Language&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/phanphantz/ThaiTextCare-for-Unity"&gt;phanphantz/ThaiTextCare-for-Unity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="localization"&gt;Localization&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/tools/localization/lean-localization-28504"&gt;Lean Localization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="logging"&gt;Logging&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JoanStinson/UnityLoggerExtended"&gt;JoanStinson/UnityLoggerExtended&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="media"&gt;Media&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yasirkula/UnityNativeCamera"&gt;yasirkula/UnityNativeCamera&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="messaging"&gt;Messaging&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Cysharp/MessagePipe"&gt;Cysharp/MessagePipe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="persistence"&gt;Persistence&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sabresaurus/PlayerPrefsEditor"&gt;sabresaurus/PlayerPrefsEditor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="resource-management"&gt;Resource Management&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tuyoogame/YooAsset"&gt;tuyoogame/YooAsset&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rx-reactive-extensions"&gt;Rx (Reactive Extensions)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Cysharp/R3"&gt;Cysharp/R3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="social"&gt;Social&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yasirkula/UnityNativeShare"&gt;Unity Native Share Plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="sprite"&gt;Sprite&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/elringus/sprite-dicing"&gt;elringus/sprite-dicing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="state-machine"&gt;State Machine&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Inspiaaa/UnityHFSM"&gt;Inspiaaa/UnityHFSM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="ui"&gt;UI&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mob-sakai/UIEffect"&gt;mob-sakai/UIEffect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mob-sakai/ParticleEffectForUGUI"&gt;mob-sakai/ParticleEffectForUGUI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qiankanglai/LoopScrollRect"&gt;qiankanglai/LoopScrollRect&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="web"&gt;Web&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/psygames/UnityWebSocket"&gt;psygames/UnityWebSocket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gree/unity-webview"&gt;gree/unity-webview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/t-34400/SimpleUnity3DWebView"&gt;t-34400/SimpleUnity3DWebView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TLabAltoh/TLabWebView"&gt;TLabAltoh/TLabWebView&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity</title><link>https://HoshikawaRyuukou.github.io/posts/unity/</link><pubDate>Thu, 15 May 2025 10:22:16 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;在Unity這幾年的發展中，無疑經歷了不少波折&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Unity Runtime Fee 事件&lt;/li&gt;
&lt;li&gt;CEO 的騷操作&lt;/li&gt;
&lt;li&gt;中國的「團結引擎」，壓縮中國 Unity 原生社群，導致部分獨立開發者出走 Godot&lt;/li&gt;
&lt;li&gt;Godot 社群越來越活躍&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;不過我關注的幾個 出走到 Unreal/Godot 的開發者最近似乎都歸隊了，畢竟短期內這塊蛋糕還是有一定份量的😏。&lt;/p&gt;
&lt;p&gt;我覺得 Unity 在 AI 方面的發展稍顯落後，但這或許與整體的開發流程有關。畢竟遊戲畫面的呈現，並不像純前端那樣能完全依靠腳本來開發。&lt;/p&gt;
&lt;h2 id="releases"&gt;Releases&lt;/h2&gt;
&lt;p&gt;Unity 版本大致分為 &lt;strong&gt;LTS&lt;/strong&gt; 與 &lt;strong&gt;Supported&lt;/strong&gt; 兩種。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LTS（Long Term Support）版本&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供 &lt;strong&gt;2 年&lt;/strong&gt; 的支援期。&lt;/li&gt;
&lt;li&gt;適合專案已進入穩定運營，或即將鎖定版本（例如長期營運的線上遊戲）。&lt;/li&gt;
&lt;li&gt;重點是穩定性，減少升級成本與風險。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Supported（Update releases）版本&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;約一年內會推出多個更新版本。&lt;/li&gt;
&lt;li&gt;適合新專案或開發中的專案，追求 &lt;strong&gt;最新功能&lt;/strong&gt;、&lt;strong&gt;平台支援&lt;/strong&gt; 與 &lt;strong&gt;效能優化&lt;/strong&gt; 的團隊。&lt;/li&gt;
&lt;li&gt;⚠️ 只會維護最新版本（例如 6.2 發布後，6.1 將停止維護）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多細節可參考 &lt;a href="https://unity.com/blog/unity-6-1-is-now-available"&gt;官方說明&lt;/a&gt;。&lt;/p&gt;</description></item><item><title>Unity - Env - Preferences</title><link>https://HoshikawaRyuukou.github.io/posts/unity---env---preferences/</link><pubDate>Sat, 29 Mar 2025 16:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---env---preferences/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;紀錄常用的配置&lt;/p&gt;
&lt;h2 id="config"&gt;Config&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/kazu0617/articles/be682e8c1a204c"&gt;services-config.json で使えるカラム情報のお話&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="configuration"&gt;Configuration&lt;/h2&gt;
&lt;h3 id="避免執行期間變動導致不可預料的問題"&gt;避免執行期間變動導致不可預料的問題&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Edit &amp;gt; Preferences &amp;gt; General &amp;gt; Script Changes While Playing (Stop Playing and Recompile)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ide-配置出現問題可以嘗試重新生成"&gt;IDE 配置出現問題可以嘗試重新生成&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Edit &amp;gt; Preferences &amp;gt; External Tools&lt;/li&gt;
&lt;li&gt;Generate .csproj files for
&lt;ul&gt;
&lt;li&gt;Embedded packages&lt;/li&gt;
&lt;li&gt;Local packages&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Basic - ScriptableObject</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---scriptableobject/</link><pubDate>Fri, 28 Mar 2025 16:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---scriptableobject/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;ScriptableObjects 的主要用例是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在編輯器會話期間儲存和儲存資料。&lt;/li&gt;
&lt;li&gt;將資料保存為專案中的資產以便在運行時使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/6000.2/Documentation/Manual/class-ScriptableObject.html"&gt;Unity - Manual: ScriptableObject&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="notice"&gt;Notice&lt;/h2&gt;
&lt;h3 id="editor-play-mode-persistence"&gt;Editor Play Mode Persistence&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在編輯器中進入「播放模式」(Play Mode) 時對 ScriptableObject 實例（.asset 文件對應的記憶體物件）所做的修改，在&lt;strong&gt;退出播放模式後會被保留下來&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;如果需要在 Play Mode 中臨時修改數據進行測試，考慮使用 &lt;code&gt;Instantiate()&lt;/code&gt; 創建 ScriptableObject 的副本來操作，這樣修改就不會影響原始的 .asset 文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="runtime-changes-in-builds"&gt;Runtime Changes in Builds&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在建構出的遊戲版本 (Build) 中，於執行期間對 ScriptableObject 實例所做的修改&lt;strong&gt;不會被保存&lt;/strong&gt;回原始的資產文件。當遊戲關閉並重新啟動後，ScriptableObject 會恢復到建構時的初始狀態。&lt;/li&gt;
&lt;li&gt;對於需要持久化的數據，應使用其他儲存機制，例如 PlayerPrefs、儲存為 JSON/XML/二進位檔案，或使用資料庫。&lt;/li&gt;
&lt;li&gt;ScriptableObject 可以在執行期被修改，用作**單次遊戲會話（Session）**內的共享狀態容器，但要知道這些變更不會自動存檔。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asset-vs-instance-confusion"&gt;Asset vs. Instance Confusion&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;多個地方直接引用同一個 ScriptableObject &lt;code&gt;.asset&lt;/code&gt;，它們實際上都指向記憶體中的同一個共享實例。&lt;/li&gt;
&lt;li&gt;對於實現全局配置或共享狀態非常有用。&lt;/li&gt;
&lt;li&gt;如果每個使用者擁有獨立的數據副本，則需要在執行期 Instantiate() 這個 ScriptableObject 來創建副本。&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Env - IDE</title><link>https://HoshikawaRyuukou.github.io/posts/unity---env---ide/</link><pubDate>Fri, 28 Mar 2025 16:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---env---ide/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;我目前在 &lt;strong&gt;Windows 環境&lt;/strong&gt;下，會依需求在 &lt;strong&gt;Visual Studio&lt;/strong&gt; 與 &lt;strong&gt;VS Code&lt;/strong&gt; 之間切換：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Visual Studio&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;專案初期建置&lt;/li&gt;
&lt;li&gt;需要進行檔案或命名重構 (renaming)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;VS Code&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要使用 &lt;strong&gt;GitHub Copilot&lt;/strong&gt; 時&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="configuration---vs-code"&gt;Configuration - VS Code&lt;/h2&gt;
&lt;h3 id="net-sdk-安裝"&gt;.NET SDK 安裝&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;前往 &lt;a href="https://dotnet.microsoft.com/en-us/download"&gt;.NET 官方下載頁面&lt;/a&gt; 下載對應版本&lt;/li&gt;
&lt;li&gt;選擇對應平台的 SDK：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Mac M 系列 (M1/M2)&lt;/strong&gt; ➔ 安裝 &lt;strong&gt;Arm64&lt;/strong&gt; 版本&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;其他 Mac 型號&lt;/strong&gt; ➔ 安裝 &lt;strong&gt;x64&lt;/strong&gt; 版本&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt; ➔ 安裝 &lt;strong&gt;x64&lt;/strong&gt; 版本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;安裝完成後 &lt;strong&gt;重新啟動電腦&lt;/strong&gt;，以讓環境變數生效&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Unity - Coding - Warnings</title><link>https://HoshikawaRyuukou.github.io/posts/unity---coding---warnings/</link><pubDate>Tue, 25 Mar 2025 16:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---coding---warnings/</guid><description>&lt;h2 id="unt0023-coalescing-assignment-on-unity-objects"&gt;UNT0023 Coalescing assignment on Unity objects&lt;/h2&gt;
&lt;p&gt;合併賦值運算子 &lt;code&gt;??=&lt;/code&gt; 是 C# 8.0 引入的運算子，其功能是：如果左側運算元為 null，則將右側運算元的值賦給左側運算元。&lt;/p&gt;
&lt;p&gt;然而，在 Unity 中直接對 Unity 物件 (如 GameObject、Component 等) 使用這個運算子可能會導致問題，因為：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Unity 物件的特殊生命週期&lt;/strong&gt;：Unity 物件即使被銷毀，在 C# 層面的變數可能不會自動設為 null，而是成為&amp;quot;偽 null&amp;quot;物件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;自訂的 null 檢查行為&lt;/strong&gt;：Unity 覆寫了 &lt;code&gt;==&lt;/code&gt; 運算子，使得對已銷毀的 Unity 物件進行 null 檢查時會返回 true，但 `?? 運算子使用的是底層的 null 檢查機制。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="使用明確的-null-檢查"&gt;使用明確的 null 檢查&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-cs" data-lang="cs"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;private&lt;/span&gt; &lt;span style="color:#111"&gt;Rigidbody&lt;/span&gt; &lt;span style="color:#111"&gt;rb&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;void&lt;/span&gt; &lt;span style="color:#111"&gt;Start&lt;/span&gt;&lt;span style="color:#111"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;if&lt;/span&gt; &lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#111"&gt;rb&lt;/span&gt; &lt;span style="color:#111"&gt;==&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;null&lt;/span&gt;&lt;span style="color:#111"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;rb&lt;/span&gt; &lt;span style="color:#111"&gt;=&lt;/span&gt; &lt;span style="color:#111"&gt;GetComponent&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#111"&gt;Rigidbody&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Unity - Package Manager</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package-manager/</link><pubDate>Wed, 19 Mar 2025 12:46:15 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package-manager/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Unity Package Manager (UPM) 的設計理念，是向現代軟體開發的 「套件管理系統」
看齊，最主要的借鏡對象就是網頁開發領域的 NPM (Node Package Manager)。&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;模組化&lt;/strong&gt;：不同功能（像是 2D 工具、Timeline、Addressables）都能獨立存在，更新或安裝時不會牽動整個專案。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可控版本&lt;/strong&gt;：可以指定版本，就像你在 npm 裡選擇某個 library 的版本，確保團隊成員與 CI 環境一致。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;遠端來源&lt;/strong&gt;：除了 Unity 官方 registry，也可以掛上私有 registry，甚至用 Git URL 或本地資料夾引入。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;幾個重要觀念：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;所有透過 UPM 安裝的套件都會被存放在 &lt;code&gt;Packages&lt;/code&gt; 資料夾。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Packages&lt;/code&gt; 是唯讀的，不過仍有方式能夠修改。&lt;/li&gt;
&lt;li&gt;UPM 的主要使用情境是管理可重用的「功能模組」，這些通常以程式碼為核心。而遊戲專案中獨特的、需頻繁修改的藝術素材 （如模型、貼圖、音效），其歸宿依然是傳統的 &lt;code&gt;Assets&lt;/code&gt; 資料夾。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.jianshu.com/p/153841d65846"&gt;开发Unity PackageManager 插件包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://neogeek.dev/creating-custom-packages-for-unity-2018.3/"&gt;Creating Custom Packages for Unity 2018.3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gametorrahod.com/how-to-asmdef-upm/?fbclid=IwAR31P12StjzcTi9IO1vDvwWJIwaKHxIEmUQLic6K1LGElmwv6OFRqe8sVig"&gt;How to remodel your project for asmdef and UPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://annulusgames-lab.blogspot.com/2023/01/unity-package-manager.html"&gt;【Unity】Package Manager活用術&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zhuanlan.zhihu.com/p/146565975"&gt;使用OpenUPM发布自己的Unity项目&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="installing-packages-using-upm"&gt;Installing Packages using UPM&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Package manager -&amp;gt; Advanced project settings&lt;/li&gt;
&lt;li&gt;Add Scoped Registries&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Name: package.openupm.com
URL: https://package.openupm.com
Scope(s): 
 com.cysharp.unitask
&lt;/code&gt;&lt;/pre&gt;&lt;ol start="3"&gt;
&lt;li&gt;Package manager -&amp;gt; Packages: My Registries -&amp;gt; Install&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="package-template"&gt;Package Template&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IvanMurzak/Unity-Package-Template"&gt;GitHub - IvanMurzak/Unity-Package-Template: Template Unity Package for OpenUPM and NPMJS. Supports UPM (Unity Package Manager) with versioning.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Project Structure</title><link>https://HoshikawaRyuukou.github.io/posts/unity---project-structure/</link><pubDate>Tue, 18 Mar 2025 12:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---project-structure/</guid><description>&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=o8HIGKObG1Q"&gt;Organizing Your Unity Project — Content vs Feature Folders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@ikonija.bogojevic/organizing-project-folder-structure-function-based-vs-feature-based-168596b6d169"&gt;Organizing Project Folder Structure: Function-Based vs Feature-Based&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="content-based依內容分類"&gt;Content-Based（依內容分類）&lt;/h2&gt;
&lt;h3 id="特點"&gt;特點&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;以「資源類型」來劃分資料夾，例如腳本、材質、模型等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="缺點"&gt;缺點&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;同一個功能可能分散在多個資料夾中。&lt;br&gt;
例如你想找「商店系統」的 prefab、script 和 UI，可能得在三、四個資料夾中翻找。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="範例"&gt;範例&lt;/h3&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Assets/
├── Materials/
├── Models/
├── Textures/
├── Scripts/
├── Animations/
├── Prefabs/
├── Audio/
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="feature-based依功能分類"&gt;Feature-Based（依功能分類）&lt;/h2&gt;
&lt;h3 id="特點-1"&gt;特點&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;以功能模組為單位集中管理相關資源。&lt;/li&gt;
&lt;li&gt;適合模組化開發，有助於封裝、重用與搬移。&lt;/li&gt;
&lt;li&gt;找特定功能時，所有相關資源都集中在一起，不需東找西找。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="缺點-1"&gt;缺點&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;相同類型的資源（例如所有動畫或音效）會分散各處，不利統一管理。&lt;br&gt;
（不過透過 Editor 的搜尋功能，其實影響不大。）&lt;/li&gt;
&lt;li&gt;若模組間耦合度高，可能導致功能邊界模糊。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="範例-1"&gt;範例&lt;/h3&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Assets/
├── Shop/
│ ├── Scripts/
│ ├── Prefabs/
│ ├── UI/
├── Player/
│ ├── Scripts/
│ ├── Animations/
│ ├── Prefabs/
├── Inventory/
│ ├── Scripts/
│ ├── UI/
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="hybrid混合式"&gt;Hybrid（混合式）&lt;/h2&gt;
&lt;h3 id="特點-2"&gt;特點&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;以 Feature-Based 為主體。&lt;/li&gt;
&lt;li&gt;共用資源集中放置於 Common 或 Shared 資料夾中，避免重複。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="範例-2"&gt;範例&lt;/h3&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Assets/
├── Common/
│ ├── Materials/
│ ├── Fonts/
│ ├── Audio/
├── Player/
│ ├── Scripts/
│ ├── Prefabs/
├── Shop/
│ ├── Scripts/
│ ├── UI/
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="實踐建議"&gt;實踐建議&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;小型專案或原型（Prototype）建議先採用 Content-Based 結構，快速上手。&lt;/li&gt;
&lt;li&gt;專案逐漸擴大後，可以逐步轉向 Feature-Based，以利管理與維護。&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Basic - Media</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---media/</link><pubDate>Thu, 23 Jan 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---media/</guid><description>&lt;h2 id="audio"&gt;Audio&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://sharpcoderblog.com/blog/unity-3d-audio-clip-import-settings-for-the-best-performance"&gt;Unity Audio Clip Import Settings For The Best Performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.raywenderlich.com/532-audio-tutorial-for-unity-the-audio-mixer"&gt;Audio tutorial for Unity: the Audio Mixer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://johnleonardfrench.com/the-right-way-to-make-a-volume-slider-in-unity-using-logarithmic-conversion/"&gt;The right way to make a volume slider in Unity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Basic - Editor</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---editor/</link><pubDate>Wed, 22 Jan 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---editor/</guid><description>&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;h2 id="editor"&gt;Editor&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://linkliu.github.io/game-tech-post/posts/%E5%9C%A8Unity%E7%BC%96%E8%BE%91%E5%99%A8%E4%B8%8D%E5%90%8C%E4%BD%8D%E7%BD%AE%E6%B7%BB%E5%8A%A0%E8%8F%9C%E5%8D%95/"&gt;在unity编辑器不同位置添加菜单&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://light11.hatenadiary.com/entry/2021/12/13/194147"&gt;SerializeReferenceをつけている型をリネーム・削除する時の注意点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forum.unity.com/threads/what-are-editorbuildsettings-config-objects-used-for-or-how-can-i-use-them.712031/"&gt;What are EditorBuildSettings config objects used for or how can I use them?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.unity.cn/cn/current/ScriptReference/EditorBuildSettings.TryGetConfigObject.html"&gt;EditorBuildSettings Example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Basic - UI</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---ui/</link><pubDate>Mon, 20 Jan 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---ui/</guid><description>&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://shibuya24.info/entry/unity-ui-anchor"&gt;【Unity】3つだけでいい!?覚えるべきUIアンカー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shibuya24.info/entry/unity-ui-layout"&gt;【Unity基礎】スマホ向けゲームUIの作り方！基本的なUI配置から複数解像度対応まで解説&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cW-E4WEogzE"&gt;Master your Unity UI Buttons! - Unity UI tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QnT-2KxVvyk"&gt;How to scale Unity UI objects for every screen - Unity UI tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="canvas"&gt;Canvas&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/Packages/com.unity.ugui@1.0/manual/HOWTO-UIMultiResolution.html"&gt;Designing UI for Multiple Resolutions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/hello_1995/article/details/122130097"&gt;Unity Canvas Scaler 组件的使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/qq_42672770/article/details/121886944"&gt;Unity分辨率适配方案设置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/BV1AFvTzFEbG"&gt;Unity教程：如何让UI自适应分辨率_哔哩哔哩_bilibili&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="material"&gt;Material&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.jianshu.com/p/3df37c726530"&gt;Unity中，UI反向Mask效果（图片挖洞）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="text"&gt;Text&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/final5788/article/details/134158552"&gt;【Unity编辑器扩展】艺术字/自定义图片字体生成工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kyoro-s.com/unity-5/#google_vignette"&gt;【Unity】自作フォントを作成してTextで表示する方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/linxinfa/article/details/116561750"&gt;Unity中自制UGUI艺术字体（位图字体）（Bitmap Font Generator）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="textmeshpro"&gt;TextMeshPro&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gametorrahod.com/textmeshpro-anatomy/"&gt;TextMeshPro Anatomy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/BV1oK411x7MG"&gt;[Unity干货]使用TextMeshPro动态字体节省时间&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nekojara.city/unity-textmesh-pro-sprite-number"&gt;【Unity】TextMesh Proで数字をスプライト表示する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Platform - Web - Issue</title><link>https://HoshikawaRyuukou.github.io/posts/unity---platform---web---issue/</link><pubDate>Sun, 19 Jan 2025 16:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---platform---web---issue/</guid><description>&lt;h2 id="error"&gt;Error&lt;/h2&gt;
&lt;h3 id="error--failed-to-parse-binary-data-file-buildxxxdatabr"&gt;Error : Failed to parse binary data file Build/xxx.data.br&amp;hellip;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Failed to parse binary data file Build/web.data.br (with &amp;ldquo;Content-Type: null&amp;rdquo;), because it is still brotli-compressed. It should have been uncompressed by the browser, but it was unable to do so since the web server provided the compressed content without specifying the HTTP Response Header &amp;ldquo;Content-Encoding: br&amp;rdquo; that would have informed the browser that decompression is needed. Please verify your web server hosting configuration to add the missing &amp;ldquo;Content-Encoding: br&amp;rdquo; HTTP Response Header.&lt;/p&gt;</description></item><item><title>Unity - Package - LitMotion</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package---litmotion/</link><pubDate>Fri, 23 Aug 2024 10:08:39 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package---litmotion/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;從 DOTween 轉換到 LitMotion 的過程很順利，特別是看中它「零記憶體配置」（Zero Allocation）的特性。加上它對 UniTask 和 R3 的良好支援。&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AnnulusGames/LitMotion"&gt;GitHub - annulusgames/LitMotion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://annulusgames.github.io/LitMotion/index.html"&gt;LitMotion Overview | LitMotion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://game-ui.net/?p=835"&gt;DOTweenのイージング一覧を世界一詳しく&amp;amp;分かりやすく説明する | ゲームUIネット&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="practice"&gt;Practice&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.karvan1230.com/entry/2025/07/01/200000"&gt;【Unity】2次ベジェ曲線を使ってLitMotionでジャンプ機能を実装する - 原カバンは鞄のお店ではありません。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.karvan1230.com/entry/2024/05/07/215217"&gt;【Unity】Splineを利用してLitMotionでパス移動を実現する - 原カバンは鞄のお店ではありません。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Coding - Renaming</title><link>https://HoshikawaRyuukou.github.io/posts/unity---coding---renaming/</link><pubDate>Wed, 27 Mar 2024 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---coding---renaming/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rider 能更好處理 Unity 開發環境的大小事，但你知道的費用&amp;hellip; 👀&lt;/li&gt;
&lt;li&gt;處理 Renaming 事務一律切到 Visual Studio，因為 VS Code 的支援很不到位。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="field"&gt;Field&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/ScriptReference/Serialization.FormerlySerializedAsAttribute.html"&gt;Unity - Scripting API: FormerlySerializedAsAttribute&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="monobehaviour-class"&gt;MonoBehaviour Class&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;現在 Unity 裡對 Class 重新命名（這時 .cs 檔會與 class name 不一致）&lt;/li&gt;
&lt;li&gt;到 Visual Studio 裡重新命名&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;⚠️ 順序錯誤可能會導致引用噴掉
⚠️ 步驟 2 先執行會導致 Unity 的 class 檔名會一起變動（有概率會出錯）&lt;/p&gt;
&lt;h2 id="namespace"&gt;Namespace&lt;/h2&gt;
&lt;p&gt;有兩個情境&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;真的想重新命名 namespace （對著 namespace 直接右鍵重新命名即可）&lt;/li&gt;
&lt;li&gt;想把某 Type 歸屬到指定 namespace&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;情境 2 要使用 Visual Studio 的重構工具&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;對著 Type 右鍵 - &lt;strong&gt;快速動作與重構&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;選擇 &lt;strong&gt;移到命名空間&lt;/strong&gt;（這樣所有的參考都會連動修改）&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Unity - Coding - Managed code stripping</title><link>https://HoshikawaRyuukou.github.io/posts/unity---coding---managed-code-stripping/</link><pubDate>Tue, 26 Mar 2024 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---coding---managed-code-stripping/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;在構建過程中，Unity 通過稱為託管代碼剝離的過程刪除未使用或無法訪問的代碼，這可以顯著減小應用程式的最終大小。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;File -&amp;gt; Build Settings -&amp;gt; Player Settings -&amp;gt; Optimization -&amp;gt; Managed Stripping Level&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;⚠️ Managed Stripping Level 等級越高裁剪掉的代碼越多，包體也就越小，但是對應的風險也就更大。&lt;/li&gt;
&lt;li&gt;藉由屬性或特殊 XML 配置檔的形式提供註釋，以指示 Unity 連結器要保留代碼庫的哪些部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/6000.0/Documentation/Manual/managed-code-stripping.html"&gt;Unity - Manual: Managed code stripping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KuraiAndras/LinkerGenerator"&gt;KuraiAndras/LinkerGenerator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/hatopopo_0113/articles/279d3b89c791d1"&gt;IUnityLinkerProcessorでCodeStrippingからコードを守る&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="preserving"&gt;Preserving&lt;/h2&gt;
&lt;h3 id="preserve-attribute"&gt;Preserve attribute&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;⚠️ [Preserve] 屬性屬於“侵入式”的解決方案，不建議&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-cs" data-lang="cs"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;class&lt;/span&gt; &lt;span style="color:#75af00"&gt;Foo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75af00"&gt; [Preserve]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;public&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;void&lt;/span&gt; &lt;span style="color:#111"&gt;PreservedMethod&lt;/span&gt;&lt;span style="color:#111"&gt;(){}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="linkxml"&gt;link.xml&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在專案的 Assets 目錄下創建個 link.xml&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;&amp;lt;linker&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;lt;assembly&lt;/span&gt; &lt;span style="color:#75af00"&gt;fullname=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;DOTween&amp;#34;&lt;/span&gt; &lt;span style="color:#75af00"&gt;preserve=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;all&amp;#34;&lt;/span&gt; &lt;span style="color:#f92672"&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;lt;assembly&lt;/span&gt; &lt;span style="color:#75af00"&gt;fullname=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;Newtonsoft.Json&amp;#34;&lt;/span&gt; &lt;span style="color:#75af00"&gt;preserve=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;all&amp;#34;&lt;/span&gt; &lt;span style="color:#f92672"&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;lt;assembly&lt;/span&gt; &lt;span style="color:#75af00"&gt;fullname=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;Assembly-CSharp&amp;#34;&lt;/span&gt; &lt;span style="color:#75af00"&gt;preserve=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;all&amp;#34;&lt;/span&gt; &lt;span style="color:#f92672"&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;lt;assembly&lt;/span&gt; &lt;span style="color:#75af00"&gt;fullname=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;UnityEngine&amp;#34;&lt;/span&gt;&lt;span style="color:#f92672"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;lt;type&lt;/span&gt; &lt;span style="color:#75af00"&gt;fullname=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;UnityEngine.SpriteRenderer&amp;#34;&lt;/span&gt; &lt;span style="color:#75af00"&gt;preserve=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;all&amp;#34;&lt;/span&gt;&lt;span style="color:#f92672"&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;lt;type&lt;/span&gt; &lt;span style="color:#75af00"&gt;fullname=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;UnityEngine.Rigidbody2D&amp;#34;&lt;/span&gt; &lt;span style="color:#75af00"&gt;preserve=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;all&amp;#34;&lt;/span&gt;&lt;span style="color:#f92672"&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;lt;/assembly&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;&amp;lt;/linker&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Unity - Package Manager - Modify a Package</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package-manager---modify-a-package/</link><pubDate>Fri, 12 Jan 2024 12:46:15 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package-manager---modify-a-package/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;客製化 Unity 官方 / git 直接導入 的 Package&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://support.unity.com/hc/en-us/articles/9113460764052-How-can-I-modify-built-in-packages-"&gt;How can I modify built-in packages?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/linjf520/article/details/125738218"&gt;Unity - 如何修改一个 Package 或是如何将 Package Local化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="steps"&gt;Steps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;至 &lt;code&gt;ProjrctRoot\Library\PackageCache&lt;/code&gt; 找到目標的 Package&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;剪下貼上&lt;/strong&gt;至 &lt;code&gt;ProjrctRoot\Packages&lt;/code&gt; 即可&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Unity - Package - External Dependency Manager for Unity (EDM4U)</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package---external-dependency-manager-for-unity-edm4u/</link><pubDate>Wed, 08 Nov 2023 12:46:15 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package---external-dependency-manager-for-unity-edm4u/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;Google 停止維護 Game Package Registry (GPR) 導致不能直接使用 Package Manager 導入包。必須到封存檔網站下載「.tgz」手動導入。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/unity/archive?hl=zh-tw#external_dependency_manager_for_unity"&gt;Google Unity 套件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/Manual/upm-ui-tarball.html"&gt;Install a package from a local tarball file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他的相關的 Google Service 依賴(AR/Firebase/Google Play等)也可以用此方法導入。&lt;/p&gt;
&lt;h2 id="configuration"&gt;Configuration&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Assets &amp;gt; External Dependency Manager &amp;gt; Android Resolver &amp;gt; Settings&lt;/code&gt;
啟用這三個 Patch&lt;/p&gt;
&lt;p&gt;
 &lt;img src="https://HoshikawaRyuukou.github.io/images/blog/EDM4U_01.png" alt="EDM4U_01"&gt;

&lt;/p&gt;
&lt;p&gt;並至 &lt;code&gt;Player Settings &amp;gt; Publishing Settings&lt;/code&gt;
啟用以下選項&lt;/p&gt;
&lt;p&gt;
 &lt;img src="https://HoshikawaRyuukou.github.io/images/blog/EDM4U_02.png" alt="EDM4U_02"&gt;

&lt;/p&gt;
&lt;h2 id="auto-resolution"&gt;Auto Resolution&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Assets &amp;gt; External Dependency Manager &amp;gt; Android Resolver &amp;gt; Force Resolve&lt;/code&gt;
後會去收集專案&lt;strong&gt;所有 Editor 資料夾&lt;/strong&gt;下的 *&lt;strong&gt;Dependencies.xml&lt;/strong&gt; 加到 mainTemplate 中&lt;/p&gt;</description></item><item><title>Unity - Basic - Preprocessor Directives</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---preprocessor-directives/</link><pubDate>Fri, 07 Jul 2023 16:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---preprocessor-directives/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;在口語交流中，我們常用 &lt;strong&gt;&lt;code&gt;Define&lt;/code&gt;&lt;/strong&gt; 來稱呼，但正式名稱其實是 &lt;strong&gt;前置處理器指示詞（Preprocessor Directives）&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我最近接手一個舊專案時，發現裡面大量使用了 &lt;strong&gt;條件式編譯&lt;/strong&gt;。例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-csharp" data-lang="csharp"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#if&lt;/span&gt; &lt;span style="color:#111"&gt;DEBUG&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;Console&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;WriteLine&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;Debug version&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#endif&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 Unity 中，這類寫法也經常出現在處理不同平台或環境時：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-csharp" data-lang="csharp"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;public&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;class&lt;/span&gt; &lt;span style="color:#75af00"&gt;PlatformDefines&lt;/span&gt; &lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#111"&gt;MonoBehaviour&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;void&lt;/span&gt; &lt;span style="color:#111"&gt;Start&lt;/span&gt; &lt;span style="color:#111"&gt;()&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;#if&lt;/span&gt; &lt;span style="color:#111"&gt;UNITY_EDITOR&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;Debug&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;Log&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;Unity Editor&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;#endif&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;#if&lt;/span&gt; &lt;span style="color:#111"&gt;UNITY_IOS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;Debug&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;Log&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;iOS&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;#endif&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;#if&lt;/span&gt; &lt;span style="color:#111"&gt;UNITY_STANDALONE_OSX&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;Debug&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;Log&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;Standalone OSX&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;#endif&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;#if&lt;/span&gt; &lt;span style="color:#111"&gt;UNITY_STANDALONE_WIN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;Debug&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;Log&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;Standalone Windows&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;#endif&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;前置處理器指示詞並非沒有代價，過度使用會帶來以下困擾：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;編譯版本數量容易爆炸（至少是 &lt;code&gt;2^(指示詞分類數)&lt;/code&gt; 種），使得除錯與測試難度上升。&lt;/li&gt;
&lt;li&gt;在 Unit Test 中幾乎無法有效使用。&lt;/li&gt;
&lt;li&gt;無法透過一般的編譯檢查來捕捉錯誤。&lt;/li&gt;
&lt;li&gt;巢狀結構一旦出現，可讀性大幅降低。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最直接的影響就是：&lt;strong&gt;問題會被延後發現！&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="quide"&gt;Quide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/zh-tw/dotnet/csharp/language-reference/preprocessor-directives"&gt;C# 前置處理器指示詞&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/mattak/articles/3ef65fd8c9db63"&gt;macroのカジュアル多用は危険&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/Manual/PlatformDependentCompilation.html"&gt;Conditional Compilation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="practice"&gt;Practice&lt;/h2&gt;
&lt;p&gt;原則上能避免就避免使用，通常可以透過 &lt;strong&gt;條件分支&lt;/strong&gt;、&lt;strong&gt;策略模式&lt;/strong&gt; 或 &lt;strong&gt;依賴注入&lt;/strong&gt; 來更清楚地表達邏輯，並提升程式的可維護性。&lt;/p&gt;
&lt;h3 id="-允許--少量使用-unity_editor-在-monobehaviour"&gt;✅ 允許 — 少量使用 &lt;code&gt;UNITY_EDITOR&lt;/code&gt; 在 MonoBehaviour&lt;/h3&gt;
&lt;p&gt;某些情境下需要針對編輯器做額外處理(客製編輯器)，這算是合理的使用方式：&lt;/p&gt;</description></item><item><title>Unity - Basic - Assembly Definition (Asmdef)</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---assembly-definition-asmdef/</link><pubDate>Mon, 19 Jun 2023 12:46:15 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---assembly-definition-asmdef/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Assembly Definition (asmdef)&lt;/strong&gt; 檔案是 Unity 用來組織和管理專案程式碼的工具。它能將你的腳本分組，形成多個獨立的「&lt;strong&gt;程式集 (Assembly)&lt;/strong&gt;」。&lt;/p&gt;
&lt;p&gt;在沒有使用 &lt;code&gt;asmdef&lt;/code&gt; 的情況下，Unity 會將所有腳本編譯成一個單一、龐大的 &lt;strong&gt;Assembly-CSharp.dll&lt;/strong&gt; 程式集。這會導致兩個主要問題：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;編譯時間長&lt;/strong&gt;：每次修改任何一個腳本，都必須重新編譯整個巨大的程式集，拖慢開發進度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;程式碼依賴混亂&lt;/strong&gt;：所有腳本彼此間都可以任意存取，使得依賴關係變得複雜且難以管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;asmdef&lt;/code&gt; 的核心價值就是為了解決這些問題。&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/Manual/ScriptCompilationAssemblyDefinitionFiles.html"&gt;Doc - Assembly definitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zhuanlan.zhihu.com/p/139090680"&gt;Unity中 .asmdef文件的作用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;透過 &lt;code&gt;asmdef&lt;/code&gt;，你可以將專案切分成邏輯上獨立的程式碼區塊，每個區塊都有自己的 &lt;code&gt;asmdef&lt;/code&gt; 檔案，這帶來三大優勢：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;大幅縮短編譯時間&lt;/strong&gt;
這是 &lt;code&gt;asmdef&lt;/code&gt; 最重要的優點。當你只修改了某個程式集的腳本時，Unity 只會重新編譯那個程式集，以及任何依賴它的程式集。沒有被影響的部分則不會被重新編譯，能顯著加快開發迭代的速度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;改善程式碼結構&lt;/strong&gt;
&lt;code&gt;asmdef&lt;/code&gt; 強制你明確定義程式集之間的依賴關係。一個程式集只能存取它所引用的程式碼，這能避免不必要的依賴，讓專案結構更清晰、更易於維護和重用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;增強程式碼封裝性&lt;/strong&gt;
你可以更好地控制程式碼的存取權限，防止內部函式被外部不相關的程式集隨意使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="package-與-asmdef-的關係"&gt;Package 與 Asmdef 的關係&lt;/h2&gt;
&lt;p&gt;Unity 的 &lt;strong&gt;Package Manager&lt;/strong&gt; 系統正是建立在 &lt;code&gt;asmdef&lt;/code&gt; 的基礎上。每個 Unity 套件都必須使用 &lt;code&gt;asmdef&lt;/code&gt; 來定義其程式集結構，確保套件內的程式碼與專案其他部分相互獨立，只透過明確的引用進行互動。&lt;/p&gt;
&lt;p&gt;這也是為什麼你在使用或開發 Unity 套件時，會看到每個功能模組都有其對應的 &lt;code&gt;asmdef&lt;/code&gt; 檔案。&lt;/p&gt;
&lt;h2 id="常見的結構runtime-與-editor"&gt;常見的結構：Runtime 與 Editor&lt;/h2&gt;
&lt;p&gt;在許多 Unity 專案和套件中，最常見的 &lt;code&gt;asmdef&lt;/code&gt; 結構是將程式碼區分為 &lt;strong&gt;Runtime&lt;/strong&gt; 和 &lt;strong&gt;Editor&lt;/strong&gt; 兩部分：&lt;/p&gt;</description></item><item><title>Unity - Editor - Scripted Importer</title><link>https://HoshikawaRyuukou.github.io/posts/unity---editor---scripted-importer/</link><pubDate>Sat, 27 May 2023 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---editor---scripted-importer/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;為 Unity 本身不支持的文件格式編寫自定義資源導入器，從而添加支持。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;⚠️無法處理已由 Unity 本身處理的文件擴展名。&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/Manual/ScriptedImporters.html"&gt;Scripted Importers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cnblogs.com/wildmelon/p/16087056.html"&gt;[Unity] 资源工作流程 - ScriptedImporter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="example"&gt;Example&lt;/h2&gt;
&lt;p&gt;這裡將 .lua 以 TextAsset&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-csharp" data-lang="csharp"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;using&lt;/span&gt; &lt;span style="color:#111"&gt;UnityEngine&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;using&lt;/span&gt; &lt;span style="color:#111"&gt;System.IO&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;using&lt;/span&gt; &lt;span style="color:#111"&gt;UnityEditor.AssetImporters&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75af00"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75af00"&gt;[ScriptedImporter( 1, &amp;#34;lua&amp;#34; )]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;public&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;class&lt;/span&gt; &lt;span style="color:#75af00"&gt;LuaImporter&lt;/span&gt; &lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#111"&gt;ScriptedImporter&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;public&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;override&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;void&lt;/span&gt; &lt;span style="color:#111"&gt;OnImportAsset&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt; &lt;span style="color:#111"&gt;AssetImportContext&lt;/span&gt; &lt;span style="color:#111"&gt;ctx&lt;/span&gt; &lt;span style="color:#111"&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;TextAsset&lt;/span&gt; &lt;span style="color:#111"&gt;subAsset&lt;/span&gt; &lt;span style="color:#111"&gt;=&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;new&lt;/span&gt; &lt;span style="color:#111"&gt;TextAsset&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt; &lt;span style="color:#111"&gt;File&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;ReadAllText&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt; &lt;span style="color:#111"&gt;ctx&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;assetPath&lt;/span&gt; &lt;span style="color:#111"&gt;)&lt;/span&gt; &lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;ctx&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;AddObjectToAsset&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt; &lt;span style="color:#d88200"&gt;&amp;#34;text&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;,&lt;/span&gt; &lt;span style="color:#111"&gt;subAsset&lt;/span&gt; &lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;ctx&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;SetMainObject&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt; &lt;span style="color:#111"&gt;subAsset&lt;/span&gt; &lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Unity - Basic - DontDestroyOnLoad</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---dontdestroyonload/</link><pubDate>Mon, 20 Mar 2023 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---dontdestroyonload/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;「在尚未深入依賴注入框架前，我常使用它來管理跨場景的資源。」&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;「當然，在小專案中，它仍是一個相當方便實用的工具。」&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html"&gt;Unity - Scripting API: Object.DontDestroyOnLoad&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;DontDestroyOnLoad&lt;/code&gt;&lt;/strong&gt; 標籤能確保物件在場景切換時不會被銷毀，主要應用於以下三種情境：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;全域管理器&lt;/strong&gt;：此類物件需要貫穿遊戲始終，例如&lt;strong&gt;音效管理器&lt;/strong&gt;、&lt;strong&gt;遊戲設定&lt;/strong&gt;或&lt;strong&gt;玩家數據&lt;/strong&gt;。標記為 &lt;code&gt;DontDestroyOnLoad&lt;/code&gt; 後，這些管理器便能持續發揮功能並保留數據，確保遊戲體驗不間斷。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持久性資料&lt;/strong&gt;：當有多個場景需要共享同一份資料時，例如&lt;strong&gt;玩家的遊戲進度&lt;/strong&gt;或&lt;strong&gt;全域配置設定&lt;/strong&gt;，可以將儲存這些資料的物件設為 &lt;code&gt;DontDestroyOnLoad&lt;/code&gt;，確保不同場景都能存取並更新。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;常駐物件&lt;/strong&gt;：某些物件（如&lt;strong&gt;遊戲狀態面板&lt;/strong&gt;、&lt;strong&gt;計時器&lt;/strong&gt;或&lt;strong&gt;得分顯示&lt;/strong&gt;）需要持續顯示。透過 &lt;code&gt;DontDestroyOnLoad&lt;/code&gt;，這些物件在場景切換時不會消失，能保持持續更新。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="notice"&gt;Notice&lt;/h2&gt;
&lt;p&gt;雖然 &lt;code&gt;DontDestroyOnLoad&lt;/code&gt; 很實用，但使用不當會引發以下問題：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;記憶體洩漏&lt;/strong&gt;：如果一個 &lt;code&gt;DontDestroyOnLoad&lt;/code&gt; 物件在後續場景中不再需要，但沒有手動銷毀，它會一直存在於記憶體中。這會造成&lt;strong&gt;記憶體佔用增加&lt;/strong&gt;，導致遊戲效能下降，甚至出現記憶體洩漏。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;場景耦合&lt;/strong&gt;：&lt;code&gt;DontDestroyOnLoad&lt;/code&gt; 會打破 Unity 場景應有的&lt;strong&gt;獨立性&lt;/strong&gt;。當場景之間存在大量共享物件時，會增加它們之間的依賴性（&lt;strong&gt;高耦合&lt;/strong&gt;），使得程式碼難以管理、維護和測試。&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Unity - Basic - Misc</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---misc/</link><pubDate>Mon, 20 Feb 2023 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---misc/</guid><description>&lt;h2 id="camera"&gt;Camera&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pressstart.vip/tutorials/2018/06/6/37/understanding-orthographic-size.html"&gt;Understanding Orthographic Size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.lujun.co/2019/06/02/unity_camera_clear_flags/#"&gt;探寻 Unity Camera 属性之 Clear Flags&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://3dunity.org/game-create-lesson/clicker-game/mobile-adjustment/"&gt;Unityの画面のアスペクト比と解像度を自動変換　全スマホ・複数解像度に対応させる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="screen"&gt;Screen&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gamedevbeginner.com/how-to-capture-the-screen-in-unity-3-methods/"&gt;How to capture the screen in Unity (3 methods)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item></channel></rss>