<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 識之箱庭</title><link>https://HoshikawaRyuukou.github.io/posts/</link><description>Recent content in Posts on 識之箱庭</description><generator>Hugo</generator><language>zh-tw</language><copyright>HoshikawaRyuukou</copyright><lastBuildDate>Sat, 27 Sep 2025 13:55:55 +0800</lastBuildDate><atom:link href="https://HoshikawaRyuukou.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>AI - Prompt - Headshot</title><link>https://HoshikawaRyuukou.github.io/posts/ai---prompt---headshot/</link><pubDate>Sat, 27 Sep 2025 13:55:55 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---prompt---headshot/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;最近為了更新履歷需要一張專業大頭照，但我手邊只有生活照。於是我嘗試使用 Google AI Studio 上的 &lt;strong&gt;Gemini 2.5 Flash&lt;/strong&gt;，效果相當不錯。&lt;/p&gt;
&lt;h2 id="practice"&gt;Practice&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;服裝&lt;/strong&gt;：深色西裝
&lt;strong&gt;光線&lt;/strong&gt;：側光，額頭去除油光
&lt;strong&gt;構圖&lt;/strong&gt;：半身照，臉部佔 70%~80%
&lt;strong&gt;尺寸&lt;/strong&gt;：4.5 公分 × 3.5 公分
&lt;strong&gt;表情&lt;/strong&gt;：微笑但自然，嘴巴合閉不露齒
&lt;strong&gt;背景&lt;/strong&gt;：白色，光源均勻，無陰影或反光
&lt;strong&gt;品質&lt;/strong&gt;：清晰對焦，高品質無摺痕
&lt;strong&gt;角度&lt;/strong&gt;：眼睛正視鏡頭&lt;/p&gt;
&lt;p&gt;⚠️ 關於&lt;strong&gt;尺寸&lt;/strong&gt;的指令（如 4.5cm × 3.5cm），目前的 AI 模型通常無法直接生成精確的實體尺寸。 加入這項指令主要是為了讓 AI 更理解「這是一張證件照」的脈絡，從而優化構圖與臉部比例。最終，你仍需要將生成圖片匯入影像編輯軟體進行手動裁切，以符合最終需求。&lt;/p&gt;</description></item><item><title>Chat - Career - Work Milestones</title><link>https://HoshikawaRyuukou.github.io/posts/chat---career---work-milestones/</link><pubDate>Wed, 24 Sep 2025 20:31:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/chat---career---work-milestones/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;h3 id="第一站朱o數位科技-unity-數位內容開發"&gt;&lt;strong&gt;第一站：朱O數位科技 (Unity 數位內容開發)&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;我的第一份正職工作，是大學產學合作的延伸。對於剛畢業的我來說，薪資條件相當不錯，當時的想法很單純，就是希望能邊做邊學，持續精進技術。&lt;/p&gt;
&lt;p&gt;主要的工作內容是開發 Unity 數位教材和 VR 應用。然而，經過一年的實踐，我開始感覺到一絲不安。團隊的開發模式比較接近大學時期的專案，缺乏業界標準化的流程。加上我是公司唯一的 Unity 開發者，雖然獨立完成了許多專案，卻也少了程式碼審查 (Code Review) 和技術交流的機會，讓我擔心自己會逐漸與業界主流脫節。&lt;/p&gt;
&lt;p&gt;在某次合作案中，我深刻體會到，一個專案若缺乏專業的企劃或產品經理 (PM)，會對產品方向和開發效率造成多大的衝擊。這段經歷讓我第一次意識到，軟體開發不僅僅是寫程式而已。&lt;/p&gt;
&lt;p&gt;不久後，公司業務受到中國「雙減政策」的影響，我也在這波變動中，以半資遣、半主動的方式離開，踏上了尋找下一站的旅程。&lt;/p&gt;
&lt;h3 id="轉職沉澱期系統化地重塑技術根基"&gt;&lt;strong&gt;轉職沉澱期：系統化地重塑技術根基&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;離開第一份工作後，我沒有急著投入下一間公司，而是決定給自己一段時間，系統性地打好技術基礎。&lt;/p&gt;
&lt;p&gt;為什麼不直接在工作中學習呢？我詢問了身邊的朋友，發現許多公司的開發環境，更要求你快速融入既有的工作流，反而學習新技術的機會相對有限。這給我一種「你可能會成為資深員工，卻不一定是資深工程師」的感覺。&lt;/p&gt;
&lt;p&gt;因此，我開始有計劃地深入學習 Design Pattern、軟體架構 (Architecture)，並大量閱讀國外開發者的經驗分享。我不是空想，而是將這些理論在 Unity 中反覆實踐、驗證，逐步建立起屬於自己的設計思維體系。這段時期的每一次練習，都成為了我日後解決問題的基石。&lt;/p&gt;
&lt;h3 id="第二站青o遊戲-遊戲客戶端開發"&gt;&lt;strong&gt;第二站：青O遊戲 (遊戲客戶端開發)&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;在面試時，老闆提及他曾是工程師出身，並且非常認同我的設計理念。這讓我燃起了熱情，希望能到第一線的開發戰場，實際驗證我所學的知識，並深入了解如何與美術、企劃、PM 等不同角色進行高效的協同開發。&lt;/p&gt;
&lt;p&gt;進入公司後，我觀察到核心團隊成員大多是跟隨老闆從學校時期一路打拼至今的夥伴，這使得公司的技術棧相對傳統。我所參與的客戶端專案，不僅累積了大量的技術債，架構也比較混亂。在無法進行大規模重構的前提下，我的首要任務是為專案「續命」，成功導入了熱更新機制和資源管理系統，以維持產品的穩定運作。&lt;/p&gt;
&lt;p&gt;此外，公司也賦予我「為團隊注入技術新血」的任務，我開始負責新技術的研究與分享，希望能帶動團隊的技術氛圍。然而，當時公司正處於現金流不穩的階段，我時常需要支援不同單位的緊急任務，導致工作體驗變得相當破碎。&lt;/p&gt;
&lt;p&gt;我曾提出一些關於改善開發流程的建議，雖然得到了認同，但受限於資源，最終無力執行。技術單位的角色，逐漸淪為專案需求的附庸。在這次經歷後，我意識到，一個體制完善、流程清晰的工作環境，對於工程師的長期發展至關重要，也因此萌生了尋找更成熟團隊的想法。&lt;/p&gt;</description></item><item><title>Side Project - Photo Puzzle</title><link>https://HoshikawaRyuukou.github.io/posts/side-project---photo-puzzle/</link><pubDate>Sat, 20 Sep 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/side-project---photo-puzzle/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;此專案已開源，完整設計思路請參見 repo。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoshikawaryuukou/MGSP_PhotoPuzzle"&gt;GitHub - hoshikawaryuukou/MGSP_PhotoPuzzle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-遊戲介紹"&gt;🎮 遊戲介紹&lt;/h2&gt;
&lt;h3 id="遊戲目標"&gt;遊戲目標&lt;/h3&gt;
&lt;p&gt;將所有被打亂順序的拼圖碎片，透過&lt;strong&gt;交換位置&lt;/strong&gt;的方式，在固定的盤面上還原成一幅完整的原始圖像。&lt;/p&gt;
&lt;h3 id="-遊戲特色"&gt;🎯 遊戲特色&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;多種難度&lt;/strong&gt;：支援 3×3 到 7×7 的盤面大小選擇&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;隨機圖片&lt;/strong&gt;：整合 Lorem Picsum API，提供豐富的圖片資源&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;即時預覽&lt;/strong&gt;：隨時查看原圖提示，幫助完成挑戰&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="-遊戲玩法"&gt;🕹️ 遊戲玩法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;設定挑戰&lt;/strong&gt;：選擇盤面大小，系統自動載入隨機圖片&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;交換碎片&lt;/strong&gt;：點選第一塊拼圖碎片，再點選第二塊，兩者位置即會交換&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;完成挑戰&lt;/strong&gt;：持續交換直到所有碎片歸位，還原完整圖像即獲勝！&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Python</title><link>https://HoshikawaRyuukou.github.io/posts/python/</link><pubDate>Sun, 14 Sep 2025 17:12:40 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/python/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;當初想學 Python，卻常常卡在版本跟依賴的混亂。現在再回來，生態整合好多了，總算可以專心在「學」這件事上。&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;h3 id="env"&gt;Env&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aVXs8lb7i9U"&gt;用uv管理Python的一切！ - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jd1aRE5pJWc"&gt;从pip到uv：一口气梳理现代Python项目管理全流程！ - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2m0Ygyzli5I"&gt;build + hatchling 15分钟搞懂Python项目结构和打包 - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>AI - Agent - Gemini CLI - Custom Slash Command</title><link>https://HoshikawaRyuukou.github.io/posts/ai---agent---gemini-cli---custom-slash-command/</link><pubDate>Sun, 14 Sep 2025 14:04:32 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---agent---gemini-cli---custom-slash-command/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;Gemini CLI 已經成了我的主力工具。那些常用的操作，我乾脆全都包成 &lt;strong&gt;custom slash commands&lt;/strong&gt;，用起來順手又舒服。&lt;/p&gt;
&lt;p&gt;它的體驗和寫 Bash 腳本完全不同——這裡是透過自然語言跟 AI 對話，還能搭配 Gemini 的多模態功能，玩起來別有一番風味。當然，若單比執行效率，傳統腳本命令可能還是更勝一籌。&lt;/p&gt;
&lt;p&gt;印象最深的一次，是一個簡單的編輯搬移任務，結果來回居然跑了 &lt;strong&gt;30 個 requests&lt;/strong&gt; 才完成……&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/blog/topics/developers-practitioners/gemini-cli-custom-slash-commands"&gt;Gemini CLI: Custom slash commands | Google Cloud Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/google-cloud/gemini-cli-tutorial-series-part-7-custom-slash-commands-64c06195294b"&gt;Gemini CLI Tutorial Series — Part 7 : Custom slash commands&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="samples"&gt;Samples&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/amitkmaraj/gemini-cli-custom-slash-commands"&gt;GitHub - amitkmaraj/gemini-cli-custom-slash-commands: Some great custom slash commands to supercharge your workflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Tools</title><link>https://HoshikawaRyuukou.github.io/posts/tools/</link><pubDate>Fri, 12 Sep 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/tools/</guid><description>&lt;h2 id="antivirus"&gt;Antivirus&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.cyberlock.global/DefenderUI.aspx"&gt;DefenderUI - Unlocks the full power of Windows Defender with an intuitive, streamlined interface.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="automation"&gt;Automation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/taojy123/KeymouseGo?tab=readme-ov-file"&gt;taojy123/KeymouseGo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="batch"&gt;Batch&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://chromewebstore.google.com/detail/save-all-resources/abpdnfjocnmdomablahdcfnoggeeiedb"&gt;Save All Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="context"&gt;Context&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BluePointLilac/ContextMenuManager"&gt;BluePointLilac/ContextMenuManager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="diagram"&gt;Diagram&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=CU0ZhMoXz7k"&gt;只會用 Office 畫流程圖？許多人試用過這個後直呼回不去了 👍 | Draw.io 教學&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://postspark.app/"&gt;postspark&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="disk"&gt;Disk&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://diskanalyzer.com/"&gt;WizTree - The Fastest Disk Space Analyzer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.voidtools.com/"&gt;Everything&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="document"&gt;Document&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hackmd.io/zh"&gt;HackMD：協作 Markdown 文件，分享知識的平台&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="media---image"&gt;Media - Image&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://yeoji.github.io/spritesheet-cutter/"&gt;Spritesheet Cutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="free-tex-packer.com/"&gt;texture packer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://witnessmonolith.itch.io/atlased"&gt;Atlased&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://umesh-kc.itch.io/free-online-texture-packer-alternative"&gt;Texture Atlas Generator Web App by Umesh KC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="media---speech"&gt;Media - Speech&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jianchang512/stt"&gt;jianchang512/stt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="media---video"&gt;Media - Video&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ERee4DY2LQ8"&gt;如何安裝FFmpeg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.screentogif.com/"&gt;ScreenToGif&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://videodler.com/zh-Hant/"&gt;Twitter 影片下載器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.videolan.org/vlc/index.zh_TW.html"&gt;VLC media player&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Tyrrrz/YoutubeDownloader"&gt;Tyrrrz/YoutubeDownloader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mifi/lossless-cut"&gt;mifi/lossless-cut&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.capcut.com/zh-tw/"&gt;CapCut&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Andrews54757/FastStream"&gt;Andrews54757/FastStream&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alyssaxuu/screenity"&gt;GitHub - alyssaxuu/screenity: The free and privacy-friendly screen recorder with no limits 🎥&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="message"&gt;Message&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://emojipedia.org/"&gt;Emojipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="network"&gt;Network&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rejetto/hfs"&gt;rejetto/hfs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/terreng/simple-web-server"&gt;terreng/simple-web-server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emanuele-f/PCAPdroid"&gt;emanuele-f/PCAPdroid&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="package-manager"&gt;Package Manager&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/marticliment/UniGetUI"&gt;marticliment/UniGetUI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="translation"&gt;Translation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://chromewebstore.google.com/detail/%E6%B2%99%E6%8B%89%E7%BF%BB%E8%AD%AF%EF%BC%9A%E8%81%9A%E5%90%88%E5%AD%97%E5%85%B8%20%E3%80%81%E5%8A%83%E8%A9%9E%E7%BF%BB%E8%AD%AF%20%26%20%E6%9F%A5%E8%A9%9E/kmmcnncdadfmbjkoloakclhfllocaeap"&gt;沙拉翻譯：聚合字典 、劃詞翻譯 &amp;amp; 查詞 - Chrome 線上應用程式商店&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dmMaze/BallonsTranslator"&gt;dmMaze/BallonsTranslator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="search"&gt;Search&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://felo.ai/zh-Hant/search"&gt;Felo - 您的免費 AI 搜尋引擎&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="site"&gt;Site&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=NrpnYQDQ5s4"&gt;史上最簡單「一頁式網站」建置工具！ | Google Sites 協作平台快速上手&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="misc"&gt;Misc&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tools.wingzero.tw/web/page/1"&gt;網路資源列表| DeTools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>AI - Favorites</title><link>https://HoshikawaRyuukou.github.io/posts/ai---favorites/</link><pubDate>Fri, 05 Sep 2025 10:25:42 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---favorites/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;記錄些目前使用率很高的 AI 工具 🤓。&lt;/p&gt;
&lt;h2 id="collections"&gt;Collections&lt;/h2&gt;
&lt;h3 id="chat"&gt;Chat&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aistudio.google.com/prompts/new_chat"&gt;Google AI Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chatgpt.com/"&gt;ChatGPT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gemini.google.com/app?hl=zh-TW"&gt;Google Gemini&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://grok.com/"&gt;Grok&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="search"&gt;Search&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://felo.ai/zh-Hant/search"&gt;Felo - 您的免費 AI 搜尋引擎&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="all-in-one"&gt;All-in-One&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.genspark.ai/"&gt;Genspark - 一站式 AI 工作空間&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="design"&gt;Design&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.lovart.ai/zh-TW"&gt;Lovart | 全球首個設計智能體&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XtWHGmEz5CA"&gt;🔥Google Stitch颠覆传统UI设计！10秒生成专业级UI！快速生成产品原型！小白也能开发精美UI。 支持无缝导入Figma！ Stitch保姆级教程：从想法到APP大师级界面效果堪比专业团队 - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Side Project - Track Piece</title><link>https://HoshikawaRyuukou.github.io/posts/side-project---track-piece/</link><pubDate>Sun, 31 Aug 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/side-project---track-piece/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;此專案已開源，完整設計思路請參見 repo。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hoshikawaryuukou/MGSP_TrackPiece"&gt;GitHub - hoshikawaryuukou/MGSP_TrackPiece&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="遊戲介紹"&gt;遊戲介紹&lt;/h2&gt;
&lt;h3 id="遊戲目標"&gt;遊戲目標&lt;/h3&gt;
&lt;p&gt;率先將自己的棋子連成一線（橫線、直線或對角線）的玩家獲勝。&lt;/p&gt;
&lt;h3 id="遊戲設置"&gt;遊戲設置&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;玩家人數&lt;/strong&gt;：2人&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;遊戲配件&lt;/strong&gt;：一個 4x4 或 6x6 的棋盤、足量的黑子與白子。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;初始狀態&lt;/strong&gt;：棋盤清空，一名玩家持黑子，另一名玩家持白子。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="遊戲流程"&gt;遊戲流程&lt;/h3&gt;
&lt;p&gt;遊戲由黑方玩家先手，雙方輪流進行回合。在你的回合中，必須依序完成以下兩個步驟：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;放置棋子 (Place a Piece)&lt;/strong&gt;
在棋盤上選擇一個&lt;strong&gt;空格&lt;/strong&gt;，放上自己的一枚棋子。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;旋轉棋盤 (Rotate the Board)&lt;/strong&gt;
放置棋子後，棋盤上&lt;strong&gt;所有&lt;/strong&gt;的棋子會立即&lt;strong&gt;逆時針&lt;/strong&gt;移動一格。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;完成以上步驟後，進行勝負判定。若無人獲勝，則換下一位玩家進行他的回合。&lt;/p&gt;
&lt;h3 id="勝利條件"&gt;勝利條件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在「旋轉棋盤」的步驟完成&lt;strong&gt;後&lt;/strong&gt;，檢查棋盤。&lt;/li&gt;
&lt;li&gt;若有任何一方的棋子連成一條線（橫線、直線或對角線），該玩家立即獲勝，遊戲結束。&lt;/li&gt;
&lt;li&gt;若棋盤所有格子皆已下滿，仍未分出勝負，則為平局。&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>AI - Tools</title><link>https://HoshikawaRyuukou.github.io/posts/ai---tools/</link><pubDate>Fri, 29 Aug 2025 10:08:39 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---tools/</guid><description>&lt;h2 id="news"&gt;News&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.aibase.com/zh/"&gt;AIbase基地 - 让更多人看到未来 通往AGI之路&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="audio"&gt;Audio&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/BV17SVUznEGw"&gt;AI声音建模：MiniMax Audio 一键声音克隆&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="coding"&gt;Coding&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=IqVo8V4QNm0"&gt;GitHub项目理解神器：DeepWiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AsyncFuncAI/deepwiki-open"&gt;AsyncFuncAI/deepwiki-open&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="design"&gt;Design&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=c0K308mLz8U"&gt;【Lovart】設計師偷偷在用的AI 工具🫢 3分鐘搞定 Logo＋海報＋網站🔥 Laichu - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="translation"&gt;Translation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/SakuraLLM/SakuraLLM"&gt;SakuraLLM/SakuraLLM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zyddnys/manga-image-translator"&gt;zyddnys/manga-image-translator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dmMaze/BallonsTranslator"&gt;dmMaze/BallonsTranslator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>OS - Window - PowerShell</title><link>https://HoshikawaRyuukou.github.io/posts/os---windows---powershell/</link><pubDate>Thu, 28 Aug 2025 16:24:30 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/os---windows---powershell/</guid><description>&lt;h2 id="issues"&gt;Issues&lt;/h2&gt;
&lt;h3 id="中文顯示問題"&gt;中文顯示問題&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;在腳本第一行再加上這行
&lt;pre tabindex="0"&gt;&lt;code&gt;[Console]::OutputEncoding = [System.Text.Encoding]::UTF8
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;把 &lt;code&gt;.ps1&lt;/code&gt; 檔案存成 &lt;strong&gt;UTF-8 with BOM&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Chat - Misc - Pangu Spacing</title><link>https://HoshikawaRyuukou.github.io/posts/chat---misc---pangu-spacing/</link><pubDate>Thu, 28 Aug 2025 15:02:36 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/chat---misc---pangu-spacing/</guid><description>&lt;h2 id="quick"&gt;Quick&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;我總習慣在中英文之間加個空格，讓排版看起來更舒服。今天才知道，原來這個習慣性的空格有個詩意的名字，叫做「&lt;strong&gt;盤古之白&lt;/strong&gt;」，而它在英文裡則被稱為 &lt;strong&gt;Pangu spacing&lt;/strong&gt;。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;定義&lt;/strong&gt;：Pangu spacing 指的是在中文和英文（或數字）之間插入的空格，旨在劈開全形字和半形字之間的混沌，使得文本更易於閱讀。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;排版規範&lt;/strong&gt;：在中英文混排的情況下，通常建議在中文和半形英文字母之間加入空格，例如「當你凝視著 bug，bug 也凝視著你」而不是「當你凝視著bug，bug也凝視著你」。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="extra"&gt;Extra&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vinta/pangu.js"&gt;GitHub - vinta/pangu.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Platform - Web - Build</title><link>https://HoshikawaRyuukou.github.io/posts/unity---platform---web/</link><pubDate>Tue, 26 Aug 2025 16:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---platform---web/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;⚠️ 建議使用 &lt;strong&gt;Unity 2021&lt;/strong&gt; 以上開發，我目前使用 &lt;strong&gt;Unity 6&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/6000.2/Documentation/Manual/webgl-develop.html"&gt;Unity - Manual: Web development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learn.unity.com/tutorial/getting-started-with-unity-web"&gt;Getting started with Unity Web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="webassembly"&gt;WebAssembly&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/develop/guide/game-engine/rd-to-SCgame/open-capacity/overview-and-compatibility/sc_webgl_overview"&gt;WebGL适配方案概述_抖音开放平台&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="template"&gt;Template&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://seansleblanc.itch.io/better-minimal-webgl-template"&gt;(Unity) Better Minimal WebGL Template&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="build"&gt;Build&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.crazygames.com/resources/export-tips/"&gt;Export tips - CrazyGames Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/develop/guide/game-engine/rd-to-SCgame/open-capacity/changelog-and-resource/sc_webgl_resource"&gt;小游戏资源部署与缓存_小游戏_抖音开放平台&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="host"&gt;Host&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/terreng/simple-web-server"&gt;terreng/simple-web-server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/terreng/sws-unity-plugin"&gt;terreng/sws-unity-plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="optimization"&gt;Optimization&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/live/DlnS53TYJO8"&gt;Crazy Web Game Jam 24: Masterclass #1 - Web Optimization - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/develop/guide/game-engine/rd-to-SCgame/open-capacity/performance-optimization/sc_webgl_performance_optimization"&gt;性能优化总览_抖音开放平台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/develop/guide/performance-optimization/startup-performance/sc_webgl_start_speed"&gt;提升Unity WebGL游戏启动速度_抖音开放平台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/develop/guide/performance-optimization/runtime-performance/optimize-game-memory"&gt;优化普通小游戏内存_抖音开放平台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.open-douyin.com/docs/resource/zh-CN/mini-game/develop/guide/performance-optimization/runtime-performance/sc_webgl_runtime_optimization"&gt;Unity WebGL 运行时优化建议_抖音开放平台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/6000.2/Documentation/Manual/webgl-texture-compression.html"&gt;Unity - Manual: Texture compression in Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/egostudio/article/details/145555816"&gt;Unity WebGL包体压缩_unity webgl 压缩-CSDN博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Package Manager &lt;strong&gt;停用&lt;/strong&gt; 不使用的 &lt;strong&gt;Built-in&lt;/strong&gt; 模組&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="others"&gt;Others&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/GoodCooking/article/details/136307133"&gt;Unity发布webgl获取浏览器的URL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Marinerer/unity-webgl"&gt;GitHub - Marinerer/unity-webg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="possibly-outdated"&gt;Possibly Outdated&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tech.framesynthesis.co.jp/unity/webgl/"&gt;Unity WebGLビルドメモ - フレームシンセシス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/happy_elements/articles/hekk_ac_20231215"&gt;Unity 製 WebGL ゲームを AWS でお手軽公開&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Obsidian - Plugins</title><link>https://HoshikawaRyuukou.github.io/posts/obsidian---plugins/</link><pubDate>Wed, 20 Aug 2025 09:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/obsidian---plugins/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;紀錄目前在使用的外掛。&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;h3 id="auto-link-title"&gt;Auto Link Title&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;自動取得貼上連結的網頁標題，並將其轉換成Markdown格式的鏈接。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="open-vault-in-vscode"&gt;Open vault in VSCode&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在 VSCode 直接開啟整個 Obsidian Vault。&lt;/li&gt;
&lt;li&gt;對於有時要做一些程序性的處理比較方便。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="image-converter"&gt;Image Converter&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;批量處理圖片。&lt;/li&gt;
&lt;li&gt;支援剪貼簿直接貼上圖片，並將圖片放置指定位置。&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Workflow – Host Unity Web Game on GitHub Pages</title><link>https://HoshikawaRyuukou.github.io/posts/workflow--host-unity-web-game-on-github-pages/</link><pubDate>Mon, 18 Aug 2025 20:38:51 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow--host-unity-web-game-on-github-pages/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;⚠️ 在 Unity 中需啟用 &lt;strong&gt;Decompression Fallback&lt;/strong&gt;（因 GitHub Pages 不支援壓縮檔案）。&lt;/li&gt;
&lt;li&gt;⚠️ &lt;strong&gt;僅 Public Repository&lt;/strong&gt; 可免費使用 GitHub Pages。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下提供兩種簡單的部署方式（此處不討論 CI 自動化）：&lt;/p&gt;
&lt;h2 id="方法一建立獨立的-public-repository"&gt;方法一：建立獨立的 Public Repository&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;建立一個新的 &lt;strong&gt;Public Repository&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;將 Unity WebGL 的建置輸出檔案上傳至該 Repository。&lt;/li&gt;
&lt;li&gt;在 GitHub 設定中，指定包含 &lt;code&gt;index.html&lt;/code&gt; 的資料夾，即可完成部署。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="方法二孤兒分支-orphan-branch"&gt;方法二：孤兒分支 (Orphan Branch)&lt;/h2&gt;
&lt;p&gt;我已封裝好一個 PowerShell 工具，能快速完成部署：&lt;/p&gt;
&lt;p&gt;👉 &lt;a href="https://github.com/hoshikawaryuukou/MGST-PowerShell-Toolkit/tree/main/GH-Pages-Deploy"&gt;MGST-PowerShell-Toolkit/GH-Pages-Deploy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此工具能將指定 Git 倉庫中的建置成果部署到 GitHub Pages 的 &lt;code&gt;gh-pages&lt;/code&gt; 分支。&lt;br&gt;
它透過 &lt;strong&gt;Git worktree&lt;/strong&gt; 與 &lt;strong&gt;孤兒分支（orphan branch）&lt;/strong&gt; 技術，能在不影響主分支開發的情況下，獨立維護部署內容。&lt;/p&gt;
&lt;p&gt;請先確認目標目錄符合以下結構：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;project-root/ 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── .git
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;└── Builds/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Unity - Sites</title><link>https://HoshikawaRyuukou.github.io/posts/unity---sites/</link><pubDate>Sat, 16 Aug 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---sites/</guid><description>&lt;h2 id="news"&gt;News&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.yucchiy.com/"&gt;Yucchiy&amp;rsquo;s Note&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="community"&gt;Community&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://unityroom.com/"&gt;unityroom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/tags/unity"&gt;Qiita|Unity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/topics/unity?order=daily"&gt;Zenn|Unity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learning.unity3d.jp/"&gt;Unity Learning Materials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://note.com/search?q=unity&amp;amp;context=note&amp;amp;mode=search"&gt;「unity」の人気の記事一覧｜note&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="blog-enterprise"&gt;Blog (Enterprise)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.cyberagent.co.jp/blog/"&gt;CyberAgent Developers Blog | サイバーエージェント デベロッパーズブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://technote.qualiarts.jp/"&gt;QualiArtsエンジニアブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://note.com/reality_eng/"&gt;REALITY｜note&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tech.mirrativ.stream/"&gt;Mirrativ Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="blog-active"&gt;Blog (Active)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://baba-s.hatenablog.com/"&gt;コガネブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://light11.hatenadiary.com/"&gt;LIGHT11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://takap-tech.com/"&gt;PG日誌&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.kyubuns.dev/"&gt;きゅぶろぐ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hanachiru-blog.com/"&gt;はなちるのマイノート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kan-kikuchi.hatenablog.com/"&gt;(:3[kanのメモ帳]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nowsprinting.com/"&gt;やらなイカ？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nekojara.city/"&gt;ねこじゃらシティ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.karvan1230.com/"&gt;原カバンは鞄のお店ではありません。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raspberly.hateblo.jp/archive"&gt;Raspberlyのブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://unityletsgo.hatenablog.com/"&gt;unityでいってみよう！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="blog"&gt;Blog&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gamedevbeginner.com/"&gt;Game Dev Beginner - Everyone Can Make Games&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://orotiyamatano.hatenablog.com/"&gt;YAMADA TAISHI’s diary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shibuya24.info/"&gt;渋谷ほととぎす通信&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kingmo.jp/kumonos/"&gt;くものす&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://onclick9927.github.io/"&gt;Real-Man&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tedliou.com/unity/"&gt;偵錯桐人 - unity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.coolcoding.cn/"&gt;老刘@开发笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.liuocean.com/"&gt;L&amp;rsquo;s Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lianbai.github.io/"&gt;LianBai&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lightjiao/lightjiao.github.io/tree/master?tab=readme-ov-file"&gt;Lightjiao的博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kyoro-s.com/"&gt;ピクセルブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="channel"&gt;Channel&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCFK6NCbuCIVzA6Yj1G_ZqCg"&gt;Code Monkey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/@MSTUDIOHUB/videos"&gt;M Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCfIiEKtakOPRPnE4iQTLvlA/videos"&gt;Coco Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="events"&gt;Events&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://meetup.unity3d.jp/jp/"&gt;Unity Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/advent-calendar/2023/unity"&gt;Unity Advent Calendar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://uycc.unity3d.jp/"&gt;Unityユースクリエイターカップ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Obsidian - CSS Snippets</title><link>https://HoshikawaRyuukou.github.io/posts/obsidian---css-snippets/</link><pubDate>Fri, 15 Aug 2025 20:00:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/obsidian---css-snippets/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;試過幾款主題，但沒有特別喜歡的，感覺還是用預設主題就好。&lt;/p&gt;
&lt;p&gt;不過，Markdown 的顯示樣式還是想稍微調整一下。&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://help.obsidian.md/snippets"&gt;CSS snippets - Obsidian Help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="configuration"&gt;Configuration&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;開啟 &lt;strong&gt;設定&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;在 &lt;strong&gt;外觀 → CSS 片段&lt;/strong&gt; 中，點選 &lt;strong&gt;開啟片段資料夾&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;在該資料夾中建立一個 &lt;code&gt;.css&lt;/code&gt; 檔，並寫入自訂的程式碼片段。&lt;/li&gt;
&lt;li&gt;回到 Obsidian，於 &lt;strong&gt;外觀 → CSS 片段&lt;/strong&gt; 中，點選 &lt;strong&gt;重新載入片段&lt;/strong&gt;，即可在清單中看到新片段。&lt;/li&gt;
&lt;li&gt;開啟對應的切換按鈕以啟用程式碼片段。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="modification"&gt;Modification&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;H2 與 H3&lt;/strong&gt; 字體大小太接近&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;H2&lt;/strong&gt; 標題下方加一條淡色分隔線&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;清單項目&lt;/strong&gt;之間的間距稍微拉開&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="customcss"&gt;custom.css&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-css" data-lang="css"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#75af00"&gt;markdown-preview-view&lt;/span&gt; &lt;span style="color:#f92672"&gt;h2&lt;/span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;font-size&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;1.6&lt;/span&gt;&lt;span style="color:#00a8c8"&gt;em&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;font-weight&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;bold&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;border-bottom&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;2&lt;/span&gt;&lt;span style="color:#00a8c8"&gt;px&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;solid&lt;/span&gt; &lt;span style="color:#75af00"&gt;var&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#f92672"&gt;--&lt;/span&gt;&lt;span style="color:#111"&gt;background&lt;/span&gt;&lt;span style="color:#f92672"&gt;-&lt;/span&gt;&lt;span style="color:#111"&gt;modifier&lt;/span&gt;&lt;span style="color:#f92672"&gt;-&lt;/span&gt;&lt;span style="color:#111"&gt;border&lt;/span&gt;&lt;span style="color:#111"&gt;);&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;padding-bottom&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;0.2&lt;/span&gt;&lt;span style="color:#00a8c8"&gt;em&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;margin-bottom&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;0.5&lt;/span&gt;&lt;span style="color:#00a8c8"&gt;em&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#75af00"&gt;markdown-preview-view&lt;/span&gt; &lt;span style="color:#f92672"&gt;h3&lt;/span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;font-size&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;1.3&lt;/span&gt;&lt;span style="color:#00a8c8"&gt;em&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;font-weight&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;bold&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#75af00"&gt;markdown-preview-view&lt;/span&gt; &lt;span style="color:#f92672"&gt;li&lt;/span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;margin-bottom&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;0.25&lt;/span&gt;&lt;span style="color:#00a8c8"&gt;em&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#75af00"&gt;markdown-preview-view&lt;/span&gt; &lt;span style="color:#f92672"&gt;ul&lt;/span&gt;&lt;span style="color:#f92672"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#75af00"&gt;markdown-preview-view&lt;/span&gt; &lt;span style="color:#f92672"&gt;ol&lt;/span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;margin-bottom&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;0.5&lt;/span&gt;&lt;span style="color:#00a8c8"&gt;em&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Unity - Package - Web Stripping Tool</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package---web-stripping-tool/</link><pubDate>Fri, 15 Aug 2025 12:46:15 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package---web-stripping-tool/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;透過移除未使用的 &lt;strong&gt;子模組（Submodules）&lt;/strong&gt;，你可以在不刪除整個功能套件的情況下，有效縮減遊戲的最終建置大小。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;這款套件可說是 &lt;strong&gt;Unity 6&lt;/strong&gt; 推出至今，我個人認為最有價值的工具之一。然而，它卻只在 &lt;strong&gt;Unity Korea&lt;/strong&gt; 的 YouTube 頻道上發布介紹，而且幾乎沒有任何宣傳，這點實在令人費解 😂。&lt;/p&gt;
&lt;p&gt;⚠️ 詳細的具體操作步驟，請務必參考官方文件與影片說明。此處僅列出幾個關鍵要點。&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/Packages/com.unity.web.stripping-tool@1.1/manual/index.html"&gt;Web Stripping Tool package | Web Stripping Tool | 1.1.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=p2n7BStUazw"&gt;[꼬꼬유] Web Stripping 툴 패키지를 활용한 빌드 크기 및 로드 시간 최적화&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://j2su0218.tistory.com/1706"&gt;Unity Web Stripping Tool - 초보자용 정리 가이드&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="notice"&gt;Notice&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;適用於 Unity 6.1 及以上版本。&lt;/li&gt;
&lt;li&gt;用於移除 Submodules 而不是整個 Modules。 若使用 2D Rendering 但未使用到 2D Rendering Sorting，則可以僅刪除指定子模組。&lt;/li&gt;
&lt;li&gt;剝離過程是在遊戲完成初步建構後進行的，屬於建構管線的 &lt;strong&gt;後處理&lt;/strong&gt; 步驟。&lt;/li&gt;
&lt;li&gt;建議將設置文件納入版本控制。&lt;/li&gt;
&lt;li&gt;該工具將持續改進，並計劃支持更多子模組。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discussions.unity.com/t/question-about-original-wasm-size-behavior-with-strip-automatically-after-build/1684619/5"&gt;Question about Original wasm size behavior with Strip Automatically After Build - Unity Engine - Unity Discussions&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="workflow"&gt;Workflow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安裝與設置&lt;/strong&gt;：&lt;/p&gt;</description></item><item><title>Workflow – Mirroring Obsidian Notes to Hugo</title><link>https://HoshikawaRyuukou.github.io/posts/workflow--mirror-obsidian-notes-to-hugo/</link><pubDate>Wed, 13 Aug 2025 20:31:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow--mirror-obsidian-notes-to-hugo/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;robocopy&lt;/code&gt; 以鏡像方式，將 &lt;code&gt;obsidian-notes&lt;/code&gt; 中的 &lt;code&gt;posts&lt;/code&gt; 與 &lt;code&gt;images&lt;/code&gt; 資料夾，同步到 Hugo 專案的對應目錄。&lt;/p&gt;
&lt;h2 id="operation"&gt;Operation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;詢問使用者&lt;/strong&gt;是否要執行同步任務。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;設定並驗證路徑&lt;/strong&gt;，確保來源與目標皆存在。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;執行 &lt;code&gt;robocopy&lt;/code&gt; 鏡像同步&lt;/strong&gt;，將來源內容完整覆蓋至 Hugo 專案目標位置。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="mirrorbat"&gt;mirror.bat&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;@echo off
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;setlocal
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;:: Ask &lt;span style="color:#00a8c8"&gt;if&lt;/span&gt; the sync task should be run
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;echo&lt;/span&gt; Do you want to run the sync task? &lt;span style="color:#f92672"&gt;(&lt;/span&gt;Y/N&lt;span style="color:#f92672"&gt;)&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;set&lt;/span&gt; /p &lt;span style="color:#111"&gt;RUN_SYNC&lt;/span&gt;&lt;span style="color:#f92672"&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;if&lt;/span&gt; /I not &lt;span style="color:#d88200"&gt;&amp;#34;%RUN_SYNC%&amp;#34;&lt;/span&gt;&lt;span style="color:#f92672"&gt;==&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;Y&amp;#34;&lt;/span&gt; &lt;span style="color:#f92672"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;echo&lt;/span&gt; Sync task cancelled.
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; pause
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; goto :EOF
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;:: Get the directory of the current script
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;set&lt;/span&gt; &lt;span style="color:#d88200"&gt;&amp;#34;SCRIPT_DIR=%~dp0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;:: Set relative paths
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;set&lt;/span&gt; &lt;span style="color:#d88200"&gt;&amp;#34;SRC_POSTS=%SCRIPT_DIR%..\obsidian-notes\blog\posts&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;set&lt;/span&gt; &lt;span style="color:#d88200"&gt;&amp;#34;SRC_IMGS=%SCRIPT_DIR%..\obsidian-notes\blog\images&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;set&lt;/span&gt; &lt;span style="color:#d88200"&gt;&amp;#34;DST_POSTS=%SCRIPT_DIR%content\posts&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;set&lt;/span&gt; &lt;span style="color:#d88200"&gt;&amp;#34;DST_IMGS=%SCRIPT_DIR%static\images&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;:: Check &lt;span style="color:#00a8c8"&gt;if&lt;/span&gt; &lt;span style="color:#111"&gt;source&lt;/span&gt; paths exist
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;echo&lt;/span&gt; Checking &lt;span style="color:#111"&gt;source&lt;/span&gt; paths...
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;if&lt;/span&gt; not exist &lt;span style="color:#d88200"&gt;&amp;#34;%SRC_POSTS%&amp;#34;&lt;/span&gt; &lt;span style="color:#f92672"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;echo&lt;/span&gt; ERROR: Source posts directory not found: %SRC_POSTS%
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;echo&lt;/span&gt; Please confirm that the blog-obsidian project location is correct.
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; pause
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; goto :EOF
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;if&lt;/span&gt; not exist &lt;span style="color:#d88200"&gt;&amp;#34;%SRC_IMGS%&amp;#34;&lt;/span&gt; &lt;span style="color:#f92672"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;echo&lt;/span&gt; ERROR: Source images directory not found: %SRC_IMGS%
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;echo&lt;/span&gt; Please confirm that the blog-obsidian project location is correct.
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; pause
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; goto :EOF
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;echo&lt;/span&gt; Source path check passed.
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;echo.
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;echo&lt;/span&gt; Starting synchronization...
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;:: Run synchronization
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;echo&lt;/span&gt; Syncing posts directory...
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;robocopy &lt;span style="color:#d88200"&gt;&amp;#34;%SRC_POSTS%&amp;#34;&lt;/span&gt; &lt;span style="color:#d88200"&gt;&amp;#34;%DST_POSTS%&amp;#34;&lt;/span&gt; /MIR
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;echo.
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;echo&lt;/span&gt; Syncing images directory...
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;robocopy &lt;span style="color:#d88200"&gt;&amp;#34;%SRC_IMGS%&amp;#34;&lt;/span&gt; &lt;span style="color:#d88200"&gt;&amp;#34;%DST_IMGS%&amp;#34;&lt;/span&gt; /MIR
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;echo.
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;echo&lt;/span&gt; Synchronization complete!
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;pause
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;endlocal
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>OS - Windows - Tools</title><link>https://HoshikawaRyuukou.github.io/posts/os---windows---tools/</link><pubDate>Sun, 10 Aug 2025 09:56:18 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/os---windows---tools/</guid><description>&lt;h2 id="robocopy"&gt;robocopy&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;全名是 &lt;strong&gt;Robust File Copy&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;是 Windows 作業系統內建的&lt;strong&gt;命令列檔案複製工具&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;支援多執行緒、差異複製、恢復中斷等功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;robocopy source destination /MIR
&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;source&lt;/code&gt; : 來源資料夾路徑&lt;/li&gt;
&lt;li&gt;&lt;code&gt;destination&lt;/code&gt; : 目標資料夾路徑&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/MIR&lt;/code&gt; : 鏡像同步
&lt;ul&gt;
&lt;li&gt;新增來源有但目標沒有的檔案&lt;/li&gt;
&lt;li&gt;覆蓋來源較新的檔案&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;刪除&lt;/strong&gt;目標有但來源已刪除的檔案（⚠️注意不可逆）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Unity - Optimization</title><link>https://HoshikawaRyuukou.github.io/posts/unity---optimization/</link><pubDate>Fri, 08 Aug 2025 16:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---optimization/</guid><description>&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.crazygames.com/resources/development-tips/"&gt;Development tips - CrazyGames Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="profiler"&gt;Profiler&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://sharpcoderblog.com/blog/unity-3d-how-to-use-profiler-to-optimize-your-code"&gt;Unity Optimize Your Game Using Profiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.chunfuchao.com/posts/unity-profiling-tools/"&gt;Unity 手機遊戲最佳化雜談– 內建Profiling&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="project-auditor"&gt;Project Auditor&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/Packages/com.unity.project-auditor@1.0/manual/index.html"&gt;Project Auditor package | Project Auditor | 1.0.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/attiliohimeki/unity-project-analysis-with-the-project-auditor-2pea"&gt;Unity Project analysis with the Project Auditor - DEV Community&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Chat –Personal Knowledge Management</title><link>https://HoshikawaRyuukou.github.io/posts/chat---personal-knowledge-management/</link><pubDate>Thu, 07 Aug 2025 09:56:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/chat---personal-knowledge-management/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;我對理想的筆記工具有四個核心要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;資料掌控權：&lt;/strong&gt; 必須支援 &lt;strong&gt;Markdown 格式&lt;/strong&gt; 並能 &lt;strong&gt;本地儲存&lt;/strong&gt;。我不喜歡將個人資料完全託管在雲端，希望能完全掌控自己的知識資產。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;開放與分享：&lt;/strong&gt; 具備與 &lt;strong&gt;GitHub 輕鬆整合&lt;/strong&gt; 的能力，並能直接 &lt;strong&gt;輸出為靜態網頁&lt;/strong&gt;。這讓我的知識不僅限於個人使用，更能方便地公開分享。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;高效檢索：&lt;/strong&gt; 需要強大的 &lt;strong&gt;標籤（Tags）與搜尋功能&lt;/strong&gt;，以便在海量筆記中快速找到所需內容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;智慧輔助：&lt;/strong&gt; 期待能整合 &lt;strong&gt;AI 輔助功能&lt;/strong&gt;，例如自動製圖、格式化與大綱提取，讓知識工作流程更有效率。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="轉向-obsidian"&gt;轉向 Obsidian&lt;/h2&gt;
&lt;p&gt;過去，我習慣用 &lt;strong&gt;VS Code&lt;/strong&gt; 撰寫 &lt;strong&gt;Markdown&lt;/strong&gt; 筆記，再透過 &lt;strong&gt;GitHub Actions&lt;/strong&gt; 將筆記部署成 &lt;strong&gt;Hugo 靜態網站&lt;/strong&gt;。這套流程行之有年，我也曾以為可以用它一直寫下去。&lt;/p&gt;
&lt;p&gt;然而，當我開始思考如何管理**「私人筆記」**時，這套流程的局限性逐漸浮現。我的 Hugo 網站是公開的，這意味著所有內容都必須部署到 GitHub Pages 上，完全不具備隱私性。這讓我意識到，我需要一個能同時處理公開與私人知識的工具。&lt;/p&gt;
&lt;p&gt;我曾想過嘗試 &lt;strong&gt;Obsidian&lt;/strong&gt;，但當時它的生態系和功能還不夠成熟，所以沒有深入嘗試。如今，Obsidian 的基礎設施已相當完善，尤其是社群中如雨後春筍般湧現的 &lt;strong&gt;「Obsidian + AI」工作流&lt;/strong&gt;，更是讓我的社群動態被這類分享佔據，這強烈地吸引了我，讓我萌生了重新嘗試的念頭。&lt;/p&gt;
&lt;p&gt;此外，作為一個專門的 Markdown 編輯器，&lt;strong&gt;Obsidian&lt;/strong&gt; 自然比 VS Code 擁有更強大的文章編輯體驗，尤其在&lt;strong&gt;豐富的外掛生態系&lt;/strong&gt;方面，大幅提升了我的寫作效率。這些外掛不僅能滿足基本的筆記需求，還能提供自動製圖、格式化與大綱提取等進階功能，完美契合了我對智慧輔助的期待，也成為我決定轉向 Obsidian 的關鍵因素。&lt;/p&gt;
&lt;h2 id="重新規劃架構"&gt;重新規劃架構&lt;/h2&gt;
&lt;p&gt;轉向 Obsidian 後，我的理想工作流有了以下調整：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;資料源分離：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;舊流程：&lt;/strong&gt; 筆記內容與 Hugo 專案深度耦合。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;新流程：&lt;/strong&gt; 將筆記視為一個獨立的專案，作為唯一的數據源（&lt;strong&gt;Single Source of Truth&lt;/strong&gt;）。Hugo 僅作為靜態網站的生成工具，不再直接編輯文章，而是接收 Obsidian 匯出的結果。&lt;/p&gt;</description></item><item><title>Chat - Career - Mindset</title><link>https://HoshikawaRyuukou.github.io/posts/chat---career---mindset/</link><pubDate>Thu, 24 Jul 2025 20:31:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/chat---career---mindset/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;這是我近年於職場上的心態轉變，也算是告別曾經的那份天真👀。&lt;/p&gt;
&lt;h2 id="不再自我感動職場沒有默契只有溝通"&gt;&lt;strong&gt;不再自我感動：職場沒有默契，只有溝通&lt;/strong&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;以前常會想：「我都做到這樣了，應該會被看見吧？」&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;但現實往往是——大家都在忙，沒人會有空觀察你、理解你努力背後的細節。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有額外做，就清楚地說。這不是邀功，是讓資訊透明、讓決策更有依據。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="不再腦補結論有問題就問不猜測別人怎麼想"&gt;&lt;strong&gt;不再腦補結論：有問題就問，不猜測別人怎麼想&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;很多時候一句主管的語氣、一個同事的反應，可能讓人開始內心小劇場：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;「是不是我表現不好？他是不是在暗示我？」&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;但其實根本沒這麼複雜，有問題就說、想知道就問。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不確定的事先標註是猜測，別拿來當決策依據。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="不再只看自己的工具箱用對資源比技術更重要"&gt;&lt;strong&gt;不再只看自己的工具箱：用對資源比技術更重要&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;這是最近一個明顯體悟。某次 server 誤刪資料，技術面很難復原，大家都在討論備份或 rollback 的可能性。但以營運部門的觀點：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其實有個方式可以救到 70% 關鍵資料，而且成本很低。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;因為他們知道哪些資料「真有價值」。技術不該只解「怎麼做」，更該問「為什麼做、為什麼這樣做比較值得」。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;不要急著找最強的技術解，要先找到對的人問對的問題。&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;</description></item><item><title>Software Design - Code Smell</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---code-smell/</link><pubDate>Fri, 18 Jul 2025 16:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---code-smell/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;「Code Smells（程式碼異味）」是一個軟體工程的術語，指的是程式碼中潛在問題的「警訊」。雖然這些寫法不一定會直接造成錯誤，但它們通常代表設計不良、可讀性差、難以維護或擴充的風險。&lt;/p&gt;
&lt;p&gt;⚠️ 不過在實務上&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**Code Smells 重要，但是否需要處理，要考量 &lt;strong&gt;專案體量、維護週期、團隊規模&lt;/strong&gt; 等因素。&lt;/li&gt;
&lt;li&gt;小專案或短期原型，可以容忍一些 Code Smells；而長期、大型專案，則需要更嚴謹地處理。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://refactoring.guru/refactoring/smells"&gt;Code Smells&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://luzkan.github.io/smells/"&gt;Code Smells Catalog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Software Design - Code Smell - Side Effect</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---code-smell---side-effect/</link><pubDate>Fri, 18 Jul 2025 16:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---code-smell---side-effect/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;副作用（Side Effect）指的是一段程式在執行後，&lt;strong&gt;除了回傳值之外還影響了外部狀態&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在錯誤的位置或缺乏揭露的情況下使用副作用，會造成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;函式不可預測&lt;/li&gt;
&lt;li&gt;測試困難&lt;/li&gt;
&lt;li&gt;程式閱讀成本上升&lt;/li&gt;
&lt;li&gt;Bug 躲藏不易察覺&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="bad-examples"&gt;Bad Examples&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-js" data-lang="js"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;function&lt;/span&gt; &lt;span style="color:#75af00"&gt;getUserName&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#75af00"&gt;user&lt;/span&gt;&lt;span style="color:#111"&gt;)&lt;/span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75af00"&gt;saveLog&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#75af00"&gt;user&lt;/span&gt;&lt;span style="color:#111"&gt;);&lt;/span&gt; &lt;span style="color:#75715e"&gt;// 副作用：寫入外部 log
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;&lt;/span&gt; &lt;span style="color:#75af00"&gt;notifyOthers&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#75af00"&gt;user&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#75af00"&gt;name&lt;/span&gt;&lt;span style="color:#111"&gt;);&lt;/span&gt; &lt;span style="color:#75715e"&gt;// 副作用：發送通知
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;return&lt;/span&gt; &lt;span style="color:#75af00"&gt;user&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#75af00"&gt;name&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="extras"&gt;Extras&lt;/h2&gt;
&lt;p&gt;很多時候副作用可能是無法規避的，因此重點不在「禁止副作用」，而是「把副作用設計得可控、可觀測、可預期」。&lt;/p&gt;
&lt;p&gt;較健康的副作用處理策略：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;明確命名：像 updateState, notifyUser, logError&lt;/li&gt;
&lt;li&gt;設計邊界：像 useEffect、controller 層 專職處理副作用&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Software Design - Pattern - Orchestrator Pattern</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---orchestrator-pattern/</link><pubDate>Fri, 18 Jul 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---orchestrator-pattern/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;協調者模式，主要用於管理多個獨立服務或元件之間錯綜複雜的互動。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;其核心理念是在系統中引入一個專責的「協調者」（Orchestrator）或「控制器」（Controller）元件，作為整體業務流程的指揮者。&lt;/p&gt;
&lt;p&gt;協調者本身並不執行具體的業務邏輯，而是像導演一樣，負責調度各個「參與者」（Participants）或「服務」（Services）來完成任務。每個參與者專注於自己擅長的部分（例如資料查詢、驗證、計算等），執行完後將結果回傳給協調者。&lt;/p&gt;
&lt;p&gt;協調者則根據這些結果，決定後續該呼叫哪個參與者、是否中斷流程，或如何彙整輸出，以推進整體流程邏輯。如此一來，流程控制與業務邏輯得以明確分離，讓系統更具彈性與可維護性。&lt;/p&gt;
&lt;h2 id="examples"&gt;Examples&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-js" data-lang="js"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;class&lt;/span&gt; &lt;span style="color:#75af00"&gt;BaseGame&lt;/span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75af00"&gt;play&lt;/span&gt;&lt;span style="color:#111"&gt;()&lt;/span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75af00"&gt;console&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#75af00"&gt;log&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;Playing base game...&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;const&lt;/span&gt; &lt;span style="color:#75af00"&gt;result&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;this&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#75af00"&gt;spin&lt;/span&gt;&lt;span style="color:#111"&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;return&lt;/span&gt; &lt;span style="color:#75af00"&gt;result&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75af00"&gt;spin&lt;/span&gt;&lt;span style="color:#111"&gt;()&lt;/span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;return&lt;/span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75af00"&gt;symbols&lt;/span&gt;&lt;span style="color:#f92672"&gt;:&lt;/span&gt; &lt;span style="color:#111"&gt;[&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;Free&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;,&lt;/span&gt; &lt;span style="color:#d88200"&gt;&amp;#34;Free&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;,&lt;/span&gt; &lt;span style="color:#d88200"&gt;&amp;#34;Free&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75af00"&gt;freeSpinCount&lt;/span&gt;&lt;span style="color:#f92672"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;3&lt;/span&gt;&lt;span style="color:#111"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75af00"&gt;win&lt;/span&gt;&lt;span style="color:#f92672"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;100&lt;/span&gt;&lt;span style="color:#111"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;class&lt;/span&gt; &lt;span style="color:#75af00"&gt;FreeGame&lt;/span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75af00"&gt;play&lt;/span&gt;&lt;span style="color:#111"&gt;()&lt;/span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75af00"&gt;console&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#75af00"&gt;log&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;Playing free game...&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;return&lt;/span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75af00"&gt;win&lt;/span&gt;&lt;span style="color:#f92672"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;200&lt;/span&gt;&lt;span style="color:#111"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75af00"&gt;spins&lt;/span&gt;&lt;span style="color:#f92672"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;6&lt;/span&gt;&lt;span style="color:#111"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;class&lt;/span&gt; &lt;span style="color:#75af00"&gt;GameFlowController&lt;/span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75af00"&gt;constructor&lt;/span&gt;&lt;span style="color:#111"&gt;()&lt;/span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;this&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#75af00"&gt;baseGame&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;new&lt;/span&gt; &lt;span style="color:#75af00"&gt;BaseGame&lt;/span&gt;&lt;span style="color:#111"&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;this&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#75af00"&gt;freeGame&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;new&lt;/span&gt; &lt;span style="color:#75af00"&gt;FreeGame&lt;/span&gt;&lt;span style="color:#111"&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75af00"&gt;run&lt;/span&gt;&lt;span style="color:#111"&gt;()&lt;/span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;const&lt;/span&gt; &lt;span style="color:#75af00"&gt;baseResult&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;this&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#75af00"&gt;baseGame&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#75af00"&gt;play&lt;/span&gt;&lt;span style="color:#111"&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;let&lt;/span&gt; &lt;span style="color:#75af00"&gt;finalResult&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&lt;/span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75af00"&gt;from&lt;/span&gt;&lt;span style="color:#f92672"&gt;:&lt;/span&gt; &lt;span style="color:#d88200"&gt;&amp;#34;base only&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75af00"&gt;baseResult&lt;/span&gt;&lt;span style="color:#111"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;if&lt;/span&gt; &lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#75af00"&gt;baseResult&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#75af00"&gt;freeSpinCount&lt;/span&gt; &lt;span style="color:#f92672"&gt;&amp;gt;=&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;3&lt;/span&gt;&lt;span style="color:#111"&gt;)&lt;/span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;const&lt;/span&gt; &lt;span style="color:#75af00"&gt;freeResult&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;this&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#75af00"&gt;freeGame&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#75af00"&gt;play&lt;/span&gt;&lt;span style="color:#111"&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75af00"&gt;finalResult&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&lt;/span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75af00"&gt;from&lt;/span&gt;&lt;span style="color:#f92672"&gt;:&lt;/span&gt; &lt;span style="color:#d88200"&gt;&amp;#34;base + free&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75af00"&gt;baseResult&lt;/span&gt;&lt;span style="color:#111"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75af00"&gt;freeResult&lt;/span&gt;&lt;span style="color:#111"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;return&lt;/span&gt; &lt;span style="color:#75af00"&gt;finalResult&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;const&lt;/span&gt; &lt;span style="color:#75af00"&gt;controller&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;new&lt;/span&gt; &lt;span style="color:#75af00"&gt;GameFlowController&lt;/span&gt;&lt;span style="color:#111"&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;const&lt;/span&gt; &lt;span style="color:#75af00"&gt;result&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&lt;/span&gt; &lt;span style="color:#75af00"&gt;controller&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#75af00"&gt;run&lt;/span&gt;&lt;span style="color:#111"&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75af00"&gt;console&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#75af00"&gt;log&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#75af00"&gt;result&lt;/span&gt;&lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Software Design - Architecture - Unity Slot Game Client</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---architecture---unity-slot-game-client/</link><pubDate>Mon, 30 Jun 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---architecture---unity-slot-game-client/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;前端開發時，「狀態管理」一直是個大哉問。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;本次的應用是 &lt;strong&gt;Slot Game&lt;/strong&gt;，這類應用強調「表現層細節」，所以對於狀態的控制不像一般資料應用一樣單純，需要處理許多細部和即時的變化。&lt;/p&gt;
&lt;h3 id="狀態管理挑戰"&gt;狀態管理挑戰&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;響應式 data-binding 限制 :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若完全依賴響應式 data-binding，容易產生太多「中間態」(例如動畫進行中、結果待顯示、部分組件已經觸發&amp;hellip;等)。&lt;/li&gt;
&lt;li&gt;這樣會造成 state 爆炸、難以追蹤維護。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;命令式流程控制的必要性 :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;部分場景下，直接用命令式（imperative）流程更有效率。&lt;/li&gt;
&lt;li&gt;多組件聯動時的「動畫序列控制」。&lt;/li&gt;
&lt;li&gt;一連串的 user action/遊戲事件，需明確依序觸發。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="-技術棧一覽"&gt;⚙️ 技術棧一覽&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;UniTask (異步)&lt;/li&gt;
&lt;li&gt;R3 (Rx，UniRx 後繼者)&lt;/li&gt;
&lt;li&gt;VContainer (依賴注入)&lt;/li&gt;
&lt;li&gt;LitMotion (Tween)&lt;/li&gt;
&lt;li&gt;YooAsset (資源管理)&lt;/li&gt;
&lt;li&gt;Newtonsoft Json (Json 解析)&lt;/li&gt;
&lt;li&gt;Alchemy (編輯器擴充)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="專案結構"&gt;專案結構&lt;/h2&gt;
&lt;h3 id="modules-主架構"&gt;Modules 主架構&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;project-root/
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── _Debug/ &lt;span style="color:#75715e"&gt;# 測試或實驗用模組&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── App/ &lt;span style="color:#75715e"&gt;# 啟動點與業務邏輯總控&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── GameAPI/ &lt;span style="color:#75715e"&gt;# 遊戲 API 定義&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── GameRunner/ &lt;span style="color:#75715e"&gt;# 遊戲平台通用組件 (純 UIComponent)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── GameStage/ &lt;span style="color:#75715e"&gt;# 遊戲表演組件 (純 UIComponent)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;└── Shared/ &lt;span style="color:#75715e"&gt;# 共用模組&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;App：負責組合、調度各個模組，等於是專案的大腦。&lt;/li&gt;
&lt;li&gt;GameAPI：只放介面定義，跨模組通訊與擴充。&lt;/li&gt;
&lt;li&gt;GameRunner / GameStage：都是純 UIComponent (基本都是 Mono)。&lt;/li&gt;
&lt;li&gt;Shared：共用邏輯、工具類、資料結構都放這裡。&lt;/li&gt;
&lt;li&gt;_Debug：僅用於測試、debug，正式版本不打包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="module-模組以單一模組為例"&gt;Module 模組（以單一模組為例）&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;module-root/
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── Res/ &lt;span style="color:#75715e"&gt;# 模組獨立資源&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;└── Scripts/ &lt;span style="color:#75715e"&gt;# 腳本程式碼&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; ├── Editor/ &lt;span style="color:#75715e"&gt;# 編輯器相關&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; └── Runtime/ &lt;span style="color:#75715e"&gt;# 執行時相關&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Res：模組內專屬資源包。&lt;/li&gt;
&lt;li&gt;Scripts/Editor：編輯器工具。&lt;/li&gt;
&lt;li&gt;Scripts/Runtime：模組實際邏輯，遊戲執行時會用到的部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="app-runtime運行時架構"&gt;App-Runtime（運行時架構）&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;App-Runtime-root/
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── Configs/ &lt;span style="color:#75715e"&gt;# 配置與定義&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── Services/ &lt;span style="color:#75715e"&gt;# 封裝各種業務操作&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;├── Presenters/ &lt;span style="color:#75715e"&gt;# 控制流程、狀態綁定&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;└── Stores/ &lt;span style="color:#75715e"&gt;# 狀態管理&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Configs：所有定義類、配置文件，便於集中管理。&lt;/li&gt;
&lt;li&gt;Services：將業務操作進行封裝，利於重用及維護。&lt;/li&gt;
&lt;li&gt;Presenters：類似 MVP Pattern 的 Presenter，專注於流程控制和資料流。&lt;/li&gt;
&lt;li&gt;Stores：專責狀態儲存，確保資料一致性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="實作體悟-1實務上的狀態變化"&gt;實作體悟 1：實務上的狀態變化&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一個操作觸發多處改變（One-to-Many Updates）&lt;br&gt;
例如：用戶點擊「開始」後，同時啟動動畫、鎖定按鈕、重置分數、播放音效。&lt;/p&gt;</description></item><item><title>AI - Art - Stable Diffusion - Inpainting</title><link>https://HoshikawaRyuukou.github.io/posts/ai---art---stable-diffusion---inpainting/</link><pubDate>Thu, 12 Jun 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---art---stable-diffusion---inpainting/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;目前並未特別使用進階修圖技巧。若圖片瑕疵可透過簡單塗色與描邊處理，即會嘗試修復。&lt;/p&gt;
&lt;p&gt;若瑕疵較嚴重，則多半直接放棄並重新生成 —— 通常下一張會更好。&lt;/p&gt;
&lt;h2 id="modification"&gt;Modification&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;圖片先送入 &lt;code&gt;img2img&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;簡單處理：使用 &lt;code&gt;Inpaint sketch&lt;/code&gt;（注意不要在 sketch 模式下直接生成）。&lt;/li&gt;
&lt;li&gt;複雜處理：使用 &lt;code&gt;photopea-embed&lt;/code&gt; 進行手動遮罩或編輯。&lt;/li&gt;
&lt;li&gt;完成後再送回 &lt;code&gt;Inpaint&lt;/code&gt; 重新生成。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="generation"&gt;Generation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;採樣方法（Sampling method）：&lt;code&gt;DPM++ 2M&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;時間表類型（Schedule type）：&lt;code&gt;Karras&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;去雜強度（Denoising strength）建議範圍：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0.2 ~ 0.3&lt;/code&gt;：保留原圖整體色彩結構，僅微調瑕疵與過渡區域。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0.3 ~ 0.5&lt;/code&gt;：適度改變結構與細節，適合嘗試新的構圖或調整 seed 取得更好結果。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Packages</title><link>https://HoshikawaRyuukou.github.io/posts/unity---packages/</link><pubDate>Mon, 19 May 2025 12:46:15 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---packages/</guid><description>&lt;h2 id="package-collection"&gt;Package Collection&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/XINCGer/Unity3DTraining/tree/0501d6b93520f9d3481f76cd092b71c945e3e3f7?tab=readme-ov-file"&gt;XINCGer/Unity3DTraining&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/killop/anything_about_game/tree/b5c3b2e573d0970b318fd75b1449dbd9fdaa0ee9"&gt;killop/anything_about_game&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/baba-s/awesome-unity-open-source-on-github/tree/master?tab=readme-ov-file"&gt;baba-s/awesome-unity-open-source-on-github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="animation---tween"&gt;Animation - Tween&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AnnulusGames/LitMotion"&gt;AnnulusGames/LitMotion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="async"&gt;Async&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Cysharp/UniTask"&gt;Cysharp/UniTask&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="debug"&gt;Debug&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yasirkula/UnityIngameDebugConsole"&gt;yasirkula/UnityIngameDebugConsole&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="dependency-injection"&gt;Dependency Injection&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hadashiA/VContainer"&gt;hadashiA/VContainer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="dialogue"&gt;Dialogue&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/YarnSpinnerTool/YarnSpinner-Unity"&gt;YarnSpinnerTool/YarnSpinner-Unity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="editor"&gt;Editor&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AnnulusGames/Alchemy"&gt;AnnulusGames/Alchemy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="hot-update"&gt;Hot Update&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hybridclr.doc.code-philosophy.com/"&gt;focus-creative-games/hybridclr&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="io"&gt;IO&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Cysharp/ZString"&gt;Cysharp/ZString&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jilleJr/Newtonsoft.Json-for-Unity/wiki/Install-official-via-UPM"&gt;Newtonsoft.Json&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;git - com.unity.nuget.newtonsoft-json&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="language"&gt;Language&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/phanphantz/ThaiTextCare-for-Unity"&gt;phanphantz/ThaiTextCare-for-Unity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="localization"&gt;Localization&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/tools/localization/lean-localization-28504"&gt;Lean Localization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="logging"&gt;Logging&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JoanStinson/UnityLoggerExtended"&gt;JoanStinson/UnityLoggerExtended&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="media"&gt;Media&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yasirkula/UnityNativeCamera"&gt;yasirkula/UnityNativeCamera&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="messaging"&gt;Messaging&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Cysharp/MessagePipe"&gt;Cysharp/MessagePipe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="persistence"&gt;Persistence&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sabresaurus/PlayerPrefsEditor"&gt;sabresaurus/PlayerPrefsEditor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="resource-management"&gt;Resource Management&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tuyoogame/YooAsset"&gt;tuyoogame/YooAsset&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rx-reactive-extensions"&gt;Rx (Reactive Extensions)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Cysharp/R3"&gt;Cysharp/R3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="social"&gt;Social&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yasirkula/UnityNativeShare"&gt;Unity Native Share Plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="sprite"&gt;Sprite&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/elringus/sprite-dicing"&gt;elringus/sprite-dicing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="state-machine"&gt;State Machine&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Inspiaaa/UnityHFSM"&gt;Inspiaaa/UnityHFSM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="ui"&gt;UI&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mob-sakai/UIEffect"&gt;mob-sakai/UIEffect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mob-sakai/ParticleEffectForUGUI"&gt;mob-sakai/ParticleEffectForUGUI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/qiankanglai/LoopScrollRect"&gt;qiankanglai/LoopScrollRect&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="web"&gt;Web&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/psygames/UnityWebSocket"&gt;psygames/UnityWebSocket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gree/unity-webview"&gt;gree/unity-webview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/t-34400/SimpleUnity3DWebView"&gt;t-34400/SimpleUnity3DWebView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TLabAltoh/TLabWebView"&gt;TLabAltoh/TLabWebView&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity</title><link>https://HoshikawaRyuukou.github.io/posts/unity/</link><pubDate>Thu, 15 May 2025 10:22:16 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;在Unity這幾年的發展中，無疑經歷了不少波折&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Unity Runtime Fee 事件&lt;/li&gt;
&lt;li&gt;CEO 的騷操作&lt;/li&gt;
&lt;li&gt;中國的「團結引擎」，壓縮中國 Unity 原生社群，導致部分獨立開發者出走 Godot&lt;/li&gt;
&lt;li&gt;Godot 社群越來越活躍&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;不過我關注的幾個 出走到 Unreal/Godot 的開發者最近似乎都歸隊了，畢竟短期內這塊蛋糕還是有一定份量的😏。&lt;/p&gt;
&lt;p&gt;我覺得 Unity 在 AI 方面的發展稍顯落後，但這或許與整體的開發流程有關。畢竟遊戲畫面的呈現，並不像純前端那樣能完全依靠腳本來開發。&lt;/p&gt;
&lt;h2 id="releases"&gt;Releases&lt;/h2&gt;
&lt;p&gt;Unity 版本大致分為 &lt;strong&gt;LTS&lt;/strong&gt; 與 &lt;strong&gt;Supported&lt;/strong&gt; 兩種。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LTS（Long Term Support）版本&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供 &lt;strong&gt;2 年&lt;/strong&gt; 的支援期。&lt;/li&gt;
&lt;li&gt;適合專案已進入穩定運營，或即將鎖定版本（例如長期營運的線上遊戲）。&lt;/li&gt;
&lt;li&gt;重點是穩定性，減少升級成本與風險。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Supported（Update releases）版本&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;約一年內會推出多個更新版本。&lt;/li&gt;
&lt;li&gt;適合新專案或開發中的專案，追求 &lt;strong&gt;最新功能&lt;/strong&gt;、&lt;strong&gt;平台支援&lt;/strong&gt; 與 &lt;strong&gt;效能優化&lt;/strong&gt; 的團隊。&lt;/li&gt;
&lt;li&gt;⚠️ 只會維護最新版本（例如 6.2 發布後，6.1 將停止維護）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多細節可參考 &lt;a href="https://unity.com/blog/unity-6-1-is-now-available"&gt;官方說明&lt;/a&gt;。&lt;/p&gt;</description></item><item><title>Unity - Env - Preferences</title><link>https://HoshikawaRyuukou.github.io/posts/unity---env---preferences/</link><pubDate>Sat, 29 Mar 2025 16:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---env---preferences/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;紀錄常用的配置&lt;/p&gt;
&lt;h2 id="config"&gt;Config&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/kazu0617/articles/be682e8c1a204c"&gt;services-config.json で使えるカラム情報のお話&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="configuration"&gt;Configuration&lt;/h2&gt;
&lt;h3 id="避免執行期間變動導致不可預料的問題"&gt;避免執行期間變動導致不可預料的問題&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Edit &amp;gt; Preferences &amp;gt; General &amp;gt; Script Changes While Playing (Stop Playing and Recompile)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="ide-配置出現問題可以嘗試重新生成"&gt;IDE 配置出現問題可以嘗試重新生成&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Edit &amp;gt; Preferences &amp;gt; External Tools&lt;/li&gt;
&lt;li&gt;Generate .csproj files for
&lt;ul&gt;
&lt;li&gt;Embedded packages&lt;/li&gt;
&lt;li&gt;Local packages&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>ACG - Game - Story</title><link>https://HoshikawaRyuukou.github.io/posts/acg---game---story/</link><pubDate>Sat, 29 Mar 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/acg---game---story/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;有持續關注的遊戲劇情與遊戲設定。&lt;/p&gt;
&lt;h2 id="series"&gt;Series&lt;/h2&gt;
&lt;h3 id="ブルーアーカイブ-blue-archive"&gt;ブルーアーカイブ (Blue Archive)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://space.bilibili.com/7045822"&gt;威威字幕君的个人空间-威威字幕君个人主页-哔哩哔哩视频&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="鳴潮-wuthering-waves"&gt;鳴潮 (Wuthering Waves)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PL5Nnuy0hm7ur13qjHr8cwQHoTi21cl_Wx"&gt;鸣学|鸣潮剧情深度解读&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="モンスターハンター-monster-hunter"&gt;モンスターハンター (Monster Hunter)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/@ShuShiDui/videos"&gt;艾森巴赫 - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Basic - ScriptableObject</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---scriptableobject/</link><pubDate>Fri, 28 Mar 2025 16:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---scriptableobject/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;ScriptableObjects 的主要用例是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在編輯器會話期間儲存和儲存資料。&lt;/li&gt;
&lt;li&gt;將資料保存為專案中的資產以便在運行時使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/6000.2/Documentation/Manual/class-ScriptableObject.html"&gt;Unity - Manual: ScriptableObject&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="notice"&gt;Notice&lt;/h2&gt;
&lt;h3 id="editor-play-mode-persistence"&gt;Editor Play Mode Persistence&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在編輯器中進入「播放模式」(Play Mode) 時對 ScriptableObject 實例（.asset 文件對應的記憶體物件）所做的修改，在&lt;strong&gt;退出播放模式後會被保留下來&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;如果需要在 Play Mode 中臨時修改數據進行測試，考慮使用 &lt;code&gt;Instantiate()&lt;/code&gt; 創建 ScriptableObject 的副本來操作，這樣修改就不會影響原始的 .asset 文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="runtime-changes-in-builds"&gt;Runtime Changes in Builds&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在建構出的遊戲版本 (Build) 中，於執行期間對 ScriptableObject 實例所做的修改&lt;strong&gt;不會被保存&lt;/strong&gt;回原始的資產文件。當遊戲關閉並重新啟動後，ScriptableObject 會恢復到建構時的初始狀態。&lt;/li&gt;
&lt;li&gt;對於需要持久化的數據，應使用其他儲存機制，例如 PlayerPrefs、儲存為 JSON/XML/二進位檔案，或使用資料庫。&lt;/li&gt;
&lt;li&gt;ScriptableObject 可以在執行期被修改，用作**單次遊戲會話（Session）**內的共享狀態容器，但要知道這些變更不會自動存檔。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="asset-vs-instance-confusion"&gt;Asset vs. Instance Confusion&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;多個地方直接引用同一個 ScriptableObject &lt;code&gt;.asset&lt;/code&gt;，它們實際上都指向記憶體中的同一個共享實例。&lt;/li&gt;
&lt;li&gt;對於實現全局配置或共享狀態非常有用。&lt;/li&gt;
&lt;li&gt;如果每個使用者擁有獨立的數據副本，則需要在執行期 Instantiate() 這個 ScriptableObject 來創建副本。&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Env - IDE</title><link>https://HoshikawaRyuukou.github.io/posts/unity---env---ide/</link><pubDate>Fri, 28 Mar 2025 16:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---env---ide/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;我目前在 &lt;strong&gt;Windows 環境&lt;/strong&gt;下，會依需求在 &lt;strong&gt;Visual Studio&lt;/strong&gt; 與 &lt;strong&gt;VS Code&lt;/strong&gt; 之間切換：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Visual Studio&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;專案初期建置&lt;/li&gt;
&lt;li&gt;需要進行檔案或命名重構 (renaming)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;VS Code&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要使用 &lt;strong&gt;GitHub Copilot&lt;/strong&gt; 時&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="configuration---vs-code"&gt;Configuration - VS Code&lt;/h2&gt;
&lt;h3 id="net-sdk-安裝"&gt;.NET SDK 安裝&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;前往 &lt;a href="https://dotnet.microsoft.com/en-us/download"&gt;.NET 官方下載頁面&lt;/a&gt; 下載對應版本&lt;/li&gt;
&lt;li&gt;選擇對應平台的 SDK：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Mac M 系列 (M1/M2)&lt;/strong&gt; ➔ 安裝 &lt;strong&gt;Arm64&lt;/strong&gt; 版本&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;其他 Mac 型號&lt;/strong&gt; ➔ 安裝 &lt;strong&gt;x64&lt;/strong&gt; 版本&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt; ➔ 安裝 &lt;strong&gt;x64&lt;/strong&gt; 版本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;安裝完成後 &lt;strong&gt;重新啟動電腦&lt;/strong&gt;，以讓環境變數生效&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>AI - Common</title><link>https://HoshikawaRyuukou.github.io/posts/ai---common/</link><pubDate>Wed, 26 Mar 2025 10:08:39 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---common/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;近幾年 AI 發展一日千里。😅&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;h3 id="artificial-general-intelligenceagi"&gt;Artificial General Intelligence（AGI）&lt;/h3&gt;
&lt;p&gt;AGI 就像能像人類一樣思考和學習的 AI。與目前只能處理特定任務的 AI 不同，AGI 能適應各種情境、學習新知、獨立思考並解決問題，是人工智慧的終極目標。&lt;/p&gt;
&lt;h3 id="edge-computing"&gt;Edge Computing&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;邊緣運算&lt;/strong&gt;就是讓資料在&lt;strong&gt;靠近來源端&lt;/strong&gt;的地方處理，而非全部送往遠端伺服器（雲端）計算。例如，自駕車能即時處理感測器資料，&lt;strong&gt;更快做出決策&lt;/strong&gt;，減少延遲並提升效率。此技術廣泛應用於&lt;strong&gt;自駕車、智慧工廠、AR/VR、智慧家庭&lt;/strong&gt;等需要即時反應的領域。&lt;/p&gt;
&lt;h3 id="retrieval-augmented-generationrag"&gt;Retrieval-Augmented Generation（RAG）&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;RAG 就是讓 AI「先查資料再回答」&lt;/strong&gt;，不單靠自身記憶。傳統 AI 模型可能因資訊過時而回答不準確，RAG 則會&lt;strong&gt;先查找最新資料&lt;/strong&gt;後再生成回應。這讓它特別適合&lt;strong&gt;問答系統、知識搜尋、技術支援&lt;/strong&gt;等需要&lt;strong&gt;即時可靠資訊&lt;/strong&gt;的應用。&lt;/p&gt;
&lt;h3 id="multimodal"&gt;Multimodal&lt;/h3&gt;
&lt;p&gt;多模態 AI 能同時理解和處理多種資料，如文字、圖片、聲音和影片。相較於只專注單一資料的傳統 AI，多模態 AI 能整合不同資訊，對世界的理解更全面，並執行更複雜的任務。&lt;/p&gt;
&lt;h3 id="natively-multimodal"&gt;Natively Multimodal&lt;/h3&gt;
&lt;p&gt;「原生多模態」是指模型從設計之初就支援多模態，因此能更自然、高效地跨模態理解與生成資訊。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Gemini 2.0 Flash&lt;/strong&gt;   - &lt;a href="https://www.youtube.com/watch?v=w0-L2kl_3cU"&gt;用嘴 P 圖的這一天真的來了！超強多模態 Gemini AI 讓一票設計師默默把繪圖板拿起來邊啃邊思考人生 ~&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;GPT 4o 原生多模態圖片生成&lt;/strong&gt;   - &lt;a href="https://www.bilibili.com/video/BV1yZZMYEEQ4"&gt;OpenAI重大更新，降维打击，自然语言绘图功能修改图片功能跨代提升，真正的多模态，从此人人都是设计师&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="model-context-protocolmcp"&gt;Model Context Protocol（MCP）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/BV1XFhPzoEBx"&gt;Function Calling、MCP和A2A的核心原理与区别&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;模型上下文協議（MCP）由 Anthropic 提出，是一種規範 AI 模型與外部工具、資料互動的開放標準。它像 AI 的「萬用轉接頭」，透過統一規範，讓 AI 無縫存取 API、資料庫與應用程式，大幅提升開發效率與彈性。&lt;/p&gt;
&lt;h2 id="extras"&gt;Extras&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=eraWvfD_Ihg"&gt;一小時略懂 AI｜GPT、Sora、Diffusion model、類器官智慧OI、圖靈測試、人工智慧史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jW2cmZ-9hLk"&gt;【人工智能】模型压缩四大方法概述 | 量化、剪枝、蒸馏和二值化 | 模型瘦身 | 降低精度 | 速度提升 | 知识蒸馏 | 温度参数 | XNOR | 优缺点 | 发展方向&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/BV1z8XpYKEnr"&gt;Gemini逆袭Controlnet？扩散模型和自回归模型的真正秘密&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Coding - Warnings</title><link>https://HoshikawaRyuukou.github.io/posts/unity---coding---warnings/</link><pubDate>Tue, 25 Mar 2025 16:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---coding---warnings/</guid><description>&lt;h2 id="unt0023-coalescing-assignment-on-unity-objects"&gt;UNT0023 Coalescing assignment on Unity objects&lt;/h2&gt;
&lt;p&gt;合併賦值運算子 &lt;code&gt;??=&lt;/code&gt; 是 C# 8.0 引入的運算子，其功能是：如果左側運算元為 null，則將右側運算元的值賦給左側運算元。&lt;/p&gt;
&lt;p&gt;然而，在 Unity 中直接對 Unity 物件 (如 GameObject、Component 等) 使用這個運算子可能會導致問題，因為：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Unity 物件的特殊生命週期&lt;/strong&gt;：Unity 物件即使被銷毀，在 C# 層面的變數可能不會自動設為 null，而是成為&amp;quot;偽 null&amp;quot;物件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;自訂的 null 檢查行為&lt;/strong&gt;：Unity 覆寫了 &lt;code&gt;==&lt;/code&gt; 運算子，使得對已銷毀的 Unity 物件進行 null 檢查時會返回 true，但 `?? 運算子使用的是底層的 null 檢查機制。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="使用明確的-null-檢查"&gt;使用明確的 null 檢查&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-cs" data-lang="cs"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;private&lt;/span&gt; &lt;span style="color:#111"&gt;Rigidbody&lt;/span&gt; &lt;span style="color:#111"&gt;rb&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;void&lt;/span&gt; &lt;span style="color:#111"&gt;Start&lt;/span&gt;&lt;span style="color:#111"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;if&lt;/span&gt; &lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#111"&gt;rb&lt;/span&gt; &lt;span style="color:#111"&gt;==&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;null&lt;/span&gt;&lt;span style="color:#111"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;rb&lt;/span&gt; &lt;span style="color:#111"&gt;=&lt;/span&gt; &lt;span style="color:#111"&gt;GetComponent&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#111"&gt;Rigidbody&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Unity - Package Manager</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package-manager/</link><pubDate>Wed, 19 Mar 2025 12:46:15 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package-manager/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Unity Package Manager (UPM) 的設計理念，是向現代軟體開發的 「套件管理系統」
看齊，最主要的借鏡對象就是網頁開發領域的 NPM (Node Package Manager)。&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;模組化&lt;/strong&gt;：不同功能（像是 2D 工具、Timeline、Addressables）都能獨立存在，更新或安裝時不會牽動整個專案。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可控版本&lt;/strong&gt;：可以指定版本，就像你在 npm 裡選擇某個 library 的版本，確保團隊成員與 CI 環境一致。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;遠端來源&lt;/strong&gt;：除了 Unity 官方 registry，也可以掛上私有 registry，甚至用 Git URL 或本地資料夾引入。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;幾個重要觀念：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;所有透過 UPM 安裝的套件都會被存放在 &lt;code&gt;Packages&lt;/code&gt; 資料夾。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Packages&lt;/code&gt; 是唯讀的，不過仍有方式能夠修改。&lt;/li&gt;
&lt;li&gt;UPM 的主要使用情境是管理可重用的「功能模組」，這些通常以程式碼為核心。而遊戲專案中獨特的、需頻繁修改的藝術素材 （如模型、貼圖、音效），其歸宿依然是傳統的 &lt;code&gt;Assets&lt;/code&gt; 資料夾。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.jianshu.com/p/153841d65846"&gt;开发Unity PackageManager 插件包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://neogeek.dev/creating-custom-packages-for-unity-2018.3/"&gt;Creating Custom Packages for Unity 2018.3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gametorrahod.com/how-to-asmdef-upm/?fbclid=IwAR31P12StjzcTi9IO1vDvwWJIwaKHxIEmUQLic6K1LGElmwv6OFRqe8sVig"&gt;How to remodel your project for asmdef and UPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://annulusgames-lab.blogspot.com/2023/01/unity-package-manager.html"&gt;【Unity】Package Manager活用術&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zhuanlan.zhihu.com/p/146565975"&gt;使用OpenUPM发布自己的Unity项目&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="installing-packages-using-upm"&gt;Installing Packages using UPM&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Package manager -&amp;gt; Advanced project settings&lt;/li&gt;
&lt;li&gt;Add Scoped Registries&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Name: package.openupm.com
URL: https://package.openupm.com
Scope(s): 
 com.cysharp.unitask
&lt;/code&gt;&lt;/pre&gt;&lt;ol start="3"&gt;
&lt;li&gt;Package manager -&amp;gt; Packages: My Registries -&amp;gt; Install&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="package-template"&gt;Package Template&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IvanMurzak/Unity-Package-Template"&gt;GitHub - IvanMurzak/Unity-Package-Template: Template Unity Package for OpenUPM and NPMJS. Supports UPM (Unity Package Manager) with versioning.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Project Structure</title><link>https://HoshikawaRyuukou.github.io/posts/unity---project-structure/</link><pubDate>Tue, 18 Mar 2025 12:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---project-structure/</guid><description>&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=o8HIGKObG1Q"&gt;Organizing Your Unity Project — Content vs Feature Folders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@ikonija.bogojevic/organizing-project-folder-structure-function-based-vs-feature-based-168596b6d169"&gt;Organizing Project Folder Structure: Function-Based vs Feature-Based&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="content-based依內容分類"&gt;Content-Based（依內容分類）&lt;/h2&gt;
&lt;h3 id="特點"&gt;特點&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;以「資源類型」來劃分資料夾，例如腳本、材質、模型等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="缺點"&gt;缺點&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;同一個功能可能分散在多個資料夾中。&lt;br&gt;
例如你想找「商店系統」的 prefab、script 和 UI，可能得在三、四個資料夾中翻找。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="範例"&gt;範例&lt;/h3&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Assets/
├── Materials/
├── Models/
├── Textures/
├── Scripts/
├── Animations/
├── Prefabs/
├── Audio/
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="feature-based依功能分類"&gt;Feature-Based（依功能分類）&lt;/h2&gt;
&lt;h3 id="特點-1"&gt;特點&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;以功能模組為單位集中管理相關資源。&lt;/li&gt;
&lt;li&gt;適合模組化開發，有助於封裝、重用與搬移。&lt;/li&gt;
&lt;li&gt;找特定功能時，所有相關資源都集中在一起，不需東找西找。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="缺點-1"&gt;缺點&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;相同類型的資源（例如所有動畫或音效）會分散各處，不利統一管理。&lt;br&gt;
（不過透過 Editor 的搜尋功能，其實影響不大。）&lt;/li&gt;
&lt;li&gt;若模組間耦合度高，可能導致功能邊界模糊。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="範例-1"&gt;範例&lt;/h3&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Assets/
├── Shop/
│ ├── Scripts/
│ ├── Prefabs/
│ ├── UI/
├── Player/
│ ├── Scripts/
│ ├── Animations/
│ ├── Prefabs/
├── Inventory/
│ ├── Scripts/
│ ├── UI/
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="hybrid混合式"&gt;Hybrid（混合式）&lt;/h2&gt;
&lt;h3 id="特點-2"&gt;特點&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;以 Feature-Based 為主體。&lt;/li&gt;
&lt;li&gt;共用資源集中放置於 Common 或 Shared 資料夾中，避免重複。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="範例-2"&gt;範例&lt;/h3&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;Assets/
├── Common/
│ ├── Materials/
│ ├── Fonts/
│ ├── Audio/
├── Player/
│ ├── Scripts/
│ ├── Prefabs/
├── Shop/
│ ├── Scripts/
│ ├── UI/
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="實踐建議"&gt;實踐建議&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;小型專案或原型（Prototype）建議先採用 Content-Based 結構，快速上手。&lt;/li&gt;
&lt;li&gt;專案逐漸擴大後，可以逐步轉向 Feature-Based，以利管理與維護。&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>LeetCode 85 - Maximal Rectangle</title><link>https://HoshikawaRyuukou.github.io/posts/leetcode-85---maximal-rectangle/</link><pubDate>Thu, 13 Mar 2025 15:03:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/leetcode-85---maximal-rectangle/</guid><description>&lt;h2 id="description"&gt;Description&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://leetcode.cn/problems/maximal-rectangle/description/"&gt;85. 最大矩形&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="sample"&gt;Sample&lt;/h2&gt;
&lt;h3 id="input"&gt;input&lt;/h3&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;matrix = [
 [1,0,1,0,0],
 [1,0,1,1,1],
 [1,1,1,1,1],
 [1,0,0,1,0]
]
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id="output"&gt;output&lt;/h3&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;6
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="key-points"&gt;Key points&lt;/h2&gt;
&lt;h2 id="solution-1---暴力解"&gt;Solution 1 - 暴力解&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;檢查矩陣中所有可能的矩形，並計算每個矩形是否符合條件。&lt;/li&gt;
&lt;li&gt;對每個可能的矩形進行迴圈遍歷。&lt;/li&gt;
&lt;li&gt;計算該矩形內的元素是否符合條件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="複雜度"&gt;複雜度&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;m 為 row 的長度 ，n 是 column 的長度&lt;/li&gt;
&lt;li&gt;時間複雜度：O(m^2 x n^2)&lt;/li&gt;
&lt;li&gt;空間複雜度：O(m x n)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="solution-2---單調棧"&gt;Solution 2 - 單調棧&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;將原矩陣根據各 row 提取出數個高度(連續的1)陣列。&lt;/li&gt;
&lt;li&gt;便可將問題拆解成數個 84 題。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="推導"&gt;推導&lt;/h3&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;Step&lt;/th&gt;
 &lt;th&gt;Matrix Row&lt;/th&gt;
 &lt;th&gt;heights[]&lt;/th&gt;
 &lt;th&gt;result by No.84&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;1&lt;/td&gt;
 &lt;td&gt;[1,0,1,0,0]&lt;/td&gt;
 &lt;td&gt;[1, 0, 1, 0, 0]&lt;/td&gt;
 &lt;td&gt;1&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;2&lt;/td&gt;
 &lt;td&gt;[1,0,1,1,1]&lt;/td&gt;
 &lt;td&gt;[2, 0, 2, 1, 1]&lt;/td&gt;
 &lt;td&gt;2&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;3&lt;/td&gt;
 &lt;td&gt;[1,1,1,1,1]&lt;/td&gt;
 &lt;td&gt;[3, 1, 3, 2, 2]&lt;/td&gt;
 &lt;td&gt;6&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;4&lt;/td&gt;
 &lt;td&gt;[1,0,0,1,0]&lt;/td&gt;
 &lt;td&gt;[4, 0, 0, 3, 0]&lt;/td&gt;
 &lt;td&gt;4&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
 &lt;img src="https://HoshikawaRyuukou.github.io/images/blog/Leetcode85.png" alt="Leetcode85"&gt;

&lt;/p&gt;</description></item><item><title>LeetCode 84 - Largest Rectangle in Histogram</title><link>https://HoshikawaRyuukou.github.io/posts/leetcode-84---largest-rectangle-in-histogram/</link><pubDate>Thu, 13 Mar 2025 11:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/leetcode-84---largest-rectangle-in-histogram/</guid><description>&lt;h2 id="description"&gt;Description&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://leetcode.cn/problems/largest-rectangle-in-histogram/description/"&gt;84. 柱状图中最大的矩形&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="sample"&gt;Sample&lt;/h2&gt;
&lt;h3 id="input"&gt;input&lt;/h3&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;heights = [2,1,5,6,2,3] 
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id="output"&gt;output&lt;/h3&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;10 
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="key-points"&gt;Key points&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;目標是 &lt;strong&gt;找到每個柱子能擴展的最大寬度&lt;/strong&gt;，然後計算以該柱子為高度的最大矩形面積。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="solution-1---暴力解"&gt;Solution 1 - 暴力解&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;對於每個 &lt;code&gt;heights[i]&lt;/code&gt;，向 &lt;strong&gt;左&lt;/strong&gt;、&lt;strong&gt;右&lt;/strong&gt; 擴展，直到遇到比它矮的柱子。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;左邊界 (left)&lt;/strong&gt;：找第一個小於 heights[i] 的索引&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;右邊界 (right)&lt;/strong&gt;：找第一個小於 heights[i] 的索引&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;寬度 (width)&lt;/strong&gt;：&lt;code&gt;width = right - left - 1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;面積 (area)&lt;/strong&gt;：&lt;code&gt;area = heights[i] * (right - left - 1)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="推導"&gt;推導&lt;/h3&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;i&lt;/th&gt;
 &lt;th&gt;heights[i]&lt;/th&gt;
 &lt;th&gt;left&lt;/th&gt;
 &lt;th&gt;right&lt;/th&gt;
 &lt;th&gt;width&lt;/th&gt;
 &lt;th&gt;area&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;0&lt;/td&gt;
 &lt;td&gt;2&lt;/td&gt;
 &lt;td&gt;-1&lt;/td&gt;
 &lt;td&gt;1&lt;/td&gt;
 &lt;td&gt;1&lt;/td&gt;
 &lt;td&gt;2&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;1&lt;/td&gt;
 &lt;td&gt;1&lt;/td&gt;
 &lt;td&gt;-1&lt;/td&gt;
 &lt;td&gt;6&lt;/td&gt;
 &lt;td&gt;6&lt;/td&gt;
 &lt;td&gt;6&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;2&lt;/td&gt;
 &lt;td&gt;5&lt;/td&gt;
 &lt;td&gt;1&lt;/td&gt;
 &lt;td&gt;4&lt;/td&gt;
 &lt;td&gt;2&lt;/td&gt;
 &lt;td&gt;10&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;3&lt;/td&gt;
 &lt;td&gt;6&lt;/td&gt;
 &lt;td&gt;2&lt;/td&gt;
 &lt;td&gt;4&lt;/td&gt;
 &lt;td&gt;1&lt;/td&gt;
 &lt;td&gt;6&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;4&lt;/td&gt;
 &lt;td&gt;2&lt;/td&gt;
 &lt;td&gt;1&lt;/td&gt;
 &lt;td&gt;6&lt;/td&gt;
 &lt;td&gt;4&lt;/td&gt;
 &lt;td&gt;8&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;5&lt;/td&gt;
 &lt;td&gt;3&lt;/td&gt;
 &lt;td&gt;4&lt;/td&gt;
 &lt;td&gt;6&lt;/td&gt;
 &lt;td&gt;1&lt;/td&gt;
 &lt;td&gt;3&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;最大矩形面積 = &lt;code&gt;10&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;</description></item><item><title>ACG</title><link>https://HoshikawaRyuukou.github.io/posts/acg/</link><pubDate>Thu, 06 Mar 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/acg/</guid><description>&lt;h2 id="search"&gt;Search&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gelbooru.iqdb.org/"&gt;Gelbooru image search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://danbooru.iqdb.org/"&gt;Danbooru image search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://schara.sunrockgo.com/"&gt;キャラ誕 アニメ漫画ラノベ キャラクター誕生日カレンダー&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="translation"&gt;Translation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mangaday.ai/translation"&gt;Fast manga translator &amp;amp; Translations in Multiple Languages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>AI - Art - Stable Diffusion - Quick Start</title><link>https://HoshikawaRyuukou.github.io/posts/ai---art---stable-diffusion---quick-start/</link><pubDate>Mon, 17 Feb 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---art---stable-diffusion---quick-start/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;⚠️ 這是一篇新手導引，目的不在於精準解釋。&lt;/li&gt;
&lt;li&gt;⚠️ &lt;strong&gt;Checkpoint&lt;/strong&gt; 一般會提供推薦的參數設置，建議依據模型的特性調整，以獲得最佳效果。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="resources"&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://civitai.com/"&gt;Civitai: The Home of Open-Source Generative AI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="checkpoint"&gt;Checkpoint&lt;/h2&gt;
&lt;p&gt;決定生成圖片的基礎風格。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;寫實風格 (Photorealistic)&lt;/li&gt;
&lt;li&gt;動漫風 (Anime)&lt;/li&gt;
&lt;li&gt;油畫風格 (Painting)&lt;/li&gt;
&lt;li&gt;科幻賽博龐克 (Cyberpunk)&lt;/li&gt;
&lt;li&gt;像素風格 (Pixel Art)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="lora"&gt;LoRA&lt;/h2&gt;
&lt;p&gt;輕量化微調模型可額外載入來增強特定風格或角色。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;簡單的比喻來形容 LoRA 模型，那就是「濾鏡」&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="embedding"&gt;Embedding&lt;/h2&gt;
&lt;p&gt;增強對某些 Prompt 的理解。&lt;/p&gt;
&lt;h2 id="vae"&gt;VAE&lt;/h2&gt;
&lt;p&gt;提高圖片細節與顏色準確度。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;📝 部分 Checkpoints 會內建（Baked）VAE，如使用外部 VAE，請確認是否需要覆蓋內建版本。&lt;/li&gt;
&lt;li&gt;⚠️ 如果發現圖片的型都對，但只有顏色壞掉，通常都是 VAE 的問題。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="resolutions"&gt;Resolutions&lt;/h2&gt;
&lt;p&gt;不同種類的 Checkpoints 建議的解析度會有所不同&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SD 1.5
&lt;ul&gt;
&lt;li&gt;512 x 512 : 1:1&lt;/li&gt;
&lt;li&gt;512 X 768 : 2:3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SDXL
&lt;ul&gt;
&lt;li&gt;640 x 1536 = 5:12&lt;/li&gt;
&lt;li&gt;768 x 1344 = 4:7&lt;/li&gt;
&lt;li&gt;832 x 1216 = 13:19&lt;/li&gt;
&lt;li&gt;896 x 1152 = 7:9&lt;/li&gt;
&lt;li&gt;1024 x 1024 = 1:1&lt;/li&gt;
&lt;li&gt;1024 x 1536 = 2:3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="sampler--schedule"&gt;Sampler + Schedule&lt;/h2&gt;
&lt;p&gt;Sampler 是從雜訊圖到成品的&lt;strong&gt;去噪算法&lt;/strong&gt;。&lt;/p&gt;</description></item><item><title>AI - Art - Stable Diffusion - Env</title><link>https://HoshikawaRyuukou.github.io/posts/ai---art---stable-diffusion---env/</link><pubDate>Mon, 10 Feb 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---art---stable-diffusion---env/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;⚠️ 以下皆須安裝指定版本不可貿然升級。&lt;/p&gt;
&lt;p&gt;目前產圖只使用到 Forge + SDXL 。&lt;/p&gt;
&lt;h2 id="local-deployment"&gt;Local deployment&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;nvidia 驅動更新至最新&lt;/li&gt;
&lt;li&gt;檢查顯卡支援的最高 cuda 支援: &lt;code&gt;nvidia-smi&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安裝 &lt;a href="https://developer.nvidia.com/cuda-12-1-0-download-archive"&gt;CUDA 12.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;顯示 cuda 編譯工具的版本信息: &lt;code&gt;nvcc --version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安裝 [&lt;a href="https://github.com/lllyasviel/stable-diffusion-webui-forge"&gt;stable-diffusion-webui-forge&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="google-colab"&gt;Google Colab&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gutris1/segsmaker"&gt;gutris1/segsmaker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;配置 Civitai API Key
&lt;ul&gt;
&lt;li&gt;Civitai 網站 Menu &amp;gt; Account Settings(齒輪 icon) &amp;gt; API Keys&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="extensions"&gt;Extensions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DominikDoom/a1111-sd-webui-tagcomplete"&gt;DominikDoom/a1111-sd-webui-tagcomplete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Physton/sd-webui-prompt-all-in-one"&gt;Physton/sd-webui-prompt-all-in-one&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Bing-su/adetailer"&gt;Bing-su/adetailer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yankooliveira/sd-webui-photopea-embed"&gt;yankooliveira/sd-webui-photopea-embed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>AI - Art - Stable Diffusion</title><link>https://HoshikawaRyuukou.github.io/posts/ai---art---stable-diffusion/</link><pubDate>Thu, 06 Feb 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---art---stable-diffusion/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;目前 Stable Diffusion 只拿來自娛自樂 😃。&lt;/p&gt;
&lt;h2 id="core-working-principles"&gt;Core Working Principles&lt;/h2&gt;
&lt;p&gt;Stable Diffusion 主要包含三個核心技術：&lt;/p&gt;
&lt;h3 id="前向擴散forward-diffusion"&gt;前向擴散（Forward Diffusion）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;先從大量圖片資料集中學習圖片特徵。&lt;/li&gt;
&lt;li&gt;然後，系統會逐步加入高斯雜訊（Gaussian Noise），使圖片變得模糊、無法辨識。&lt;/li&gt;
&lt;li&gt;最後，這個過程會讓圖片變成完全的純雜訊（random noise）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="反向去噪reverse-denoising--u-net"&gt;反向去噪（Reverse Denoising / U-Net）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Stable Diffusion 學習如何逆向去噪，一步步從雜訊還原出清晰的圖片。&lt;/li&gt;
&lt;li&gt;這部分的關鍵是 U-Net 神經網路架構，它可以在多層次的細節中，捕捉圖片的各種特徵。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="文本引導text-conditioning--clip"&gt;文本引導（Text Conditioning / CLIP）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Stable Diffusion 之所以能生成符合指令的圖片，是因為它使用了CLIP（Contrastive Language-Image Pretraining）。&lt;/li&gt;
&lt;li&gt;CLIP 會將文字轉換成向量表示（latent embeddings），這些向量再指導模型生成符合描述的圖像。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="diagram"&gt;Diagram&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.nvidia.com/blog/improving-diffusion-models-as-an-alternative-to-gans-part-1/"&gt;Improving Diffusion Models as an Alternative To GANs, Part 1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
 &lt;img src="https://developer-blogs.nvidia.com/wp-content/uploads/2022/04/Generation-with-Diffusion-Models.png" alt="123"&gt;

&lt;/p&gt;
&lt;h2 id="extras"&gt;Extras&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.pttweb.cc/bbs/C_Chat/M.1730732828.A.70C"&gt;Re: [問題] AI 風格怎麼了嗎？為什麼容易膩？ - 看板C_Chat - PTT網頁版&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>GitHub - SSH Key</title><link>https://HoshikawaRyuukou.github.io/posts/github---ssh-key/</link><pubDate>Sun, 02 Feb 2025 10:08:39 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/github---ssh-key/</guid><description>&lt;h2 id="configuration"&gt;Configuration&lt;/h2&gt;
&lt;p&gt;在 GitHub 上設定 SSH Key 主要有兩個情境：&lt;/p&gt;
&lt;h3 id="1-新增至個人帳戶"&gt;1. 新增至個人帳戶&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;適用情境：您需要透過 SSH &lt;strong&gt;存取您個人帳戶下所有具備權限的儲存庫 (Repository)&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;設定位置：&lt;code&gt;GitHub &amp;gt; Settings &amp;gt; SSH and GPG keys&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="2-新增至組織的-deploy-key"&gt;2. 新增至組織的 Deploy Key&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;適用情境：您的 SSH Key &lt;strong&gt;僅需存取組織下某個特定的儲存庫&lt;/strong&gt;，而非整個帳戶。&lt;/li&gt;
&lt;li&gt;設定位置：&lt;code&gt;GitHub 組織 &amp;gt; 目標 Repository &amp;gt; Settings &amp;gt; Deploy keys&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Workflow – Build and Deploy Hugo Site</title><link>https://HoshikawaRyuukou.github.io/posts/workflow--build-and-deploy-hugo-site/</link><pubDate>Thu, 30 Jan 2025 14:12:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow--build-and-deploy-hugo-site/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;當 &lt;code&gt;main&lt;/code&gt; 分支有 push，或有 pull request 時，會自動用 Hugo 生成靜態網站，並將 &lt;code&gt;public&lt;/code&gt; 目錄的內容部署到 GitHub Pages。&lt;/p&gt;
&lt;h2 id="operation"&gt;Operation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;檢出程式碼&lt;/strong&gt;（含 submodules，全歷史）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安裝 Hugo&lt;/strong&gt;（最新版、Extended 版）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;建置網站&lt;/strong&gt;（&lt;code&gt;hugo --minify&lt;/code&gt; 壓縮輸出）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;部署到 GitHub Pages&lt;/strong&gt;（僅 &lt;code&gt;main&lt;/code&gt; 分支才執行部署）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="gh-pagesyml"&gt;gh-pages.yml&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-yml" data-lang="yml"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;name&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;github pages&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;on&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;push&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;branches&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; - &lt;span style="color:#ae81ff"&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;pull_request&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;jobs&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;deploy&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;runs-on&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;ubuntu-22.04&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;steps&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; - &lt;span style="color:#f92672"&gt;uses&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;actions/checkout@v3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;with&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;submodules&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;fetch-depth&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;0&lt;/span&gt; &lt;span style="color:#75715e"&gt;# Fetch all history for .GitInfo and .Lastmod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; - &lt;span style="color:#f92672"&gt;name&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;Setup Hugo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;uses&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;peaceiris/actions-hugo@v3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;with&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;hugo-version&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#d88200"&gt;&amp;#34;latest&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;extended&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; - &lt;span style="color:#f92672"&gt;name&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;Build&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;run&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;hugo --minify&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; - &lt;span style="color:#f92672"&gt;name&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;Deploy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;uses&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;peaceiris/actions-gh-pages@v4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;if&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;github.ref == &amp;#39;refs/heads/main&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;with&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;github_token&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;publish_dir&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;./public&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Hugo</title><link>https://HoshikawaRyuukou.github.io/posts/hugo/</link><pubDate>Thu, 30 Jan 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/hugo/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Hugo&lt;/strong&gt; 是一款以 &lt;strong&gt;Go 語言&lt;/strong&gt;編寫的 &lt;strong&gt;靜態網站生成器（Static Site Generator, SSG）&lt;/strong&gt;，特色是 &lt;strong&gt;速度極快&lt;/strong&gt;、&lt;strong&gt;部署簡單&lt;/strong&gt;，且&lt;strong&gt;不依賴後端伺服器程式&lt;/strong&gt;。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;對於非前端專業的我來說，Hugo 最大的優勢在於：能專注於以 &lt;strong&gt;Markdown&lt;/strong&gt; 撰寫內容，不必過度投入在前端細節。當然，若有需要，也能自製或改造主題。&lt;/p&gt;
&lt;p&gt;建議新手可以先嘗試以下功能完整且持續維護的主題：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/adityatelange/hugo-PaperMod"&gt;adityatelange/hugo-PaperMod&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nunocoracao/blowfish"&gt;nunocoracao/blowfish&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gohugo.io/"&gt;The world’s fastest framework for building websites | Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devbricker.github.io/post/hugo/deploy/hugo_environment/"&gt;Hugo 從零開始：環境安裝（Windows）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="environment"&gt;Environment&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;從 &lt;a href="https://github.com/gohugoio/hugo/releases"&gt;Hugo GitHub Release&lt;/a&gt; 下載執行檔（建議選擇 &lt;strong&gt;hugo_extended&lt;/strong&gt; 版本）&lt;/li&gt;
&lt;li&gt;設置環境變數&lt;/li&gt;
&lt;li&gt;常用指令：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hugo version&lt;/code&gt;：檢視 Hugo 版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hugo server&lt;/code&gt;：本地預覽網站&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="theme"&gt;Theme&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;⚠️ 安裝主題前，請先閱讀該主題作者的安裝與配置文件（不同主題的流程可能略有差異）。&lt;/li&gt;
&lt;li&gt;主題資源：&lt;a href="https://themes.gohugo.io/"&gt;Hugo Themes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;本 blog 主題：&lt;a href="https://github.com/hoshikawaryuukou/hugo-theme-cactus"&gt;hoshikawaryuukou/hugo-theme-cactus&lt;/a&gt; 是基於以下 repository 修改：
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/monkeyWzr/hugo-theme-cactus"&gt;monkeyWzr/hugo-theme-cactus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OmeletWithoutEgg/hugo-theme-cactus"&gt;OmeletWithoutEgg/hugo-theme-cactus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="小幅修改主題"&gt;小幅修改主題&lt;/h3&gt;
&lt;p&gt;⚠️ &lt;strong&gt;不要直接修改主題原始檔案&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;若需要修改，請將要編輯的文件 &lt;strong&gt;依相同資料夾結構&lt;/strong&gt; 複製到專案根目錄，Hugo 會依&lt;a href="https://gohugo.io/templates/lookup-order/"&gt;模板查找優先順序&lt;/a&gt;載入你修改的版本。&lt;/p&gt;
&lt;h2 id="extras"&gt;Extras&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mikefrobbins.com/2023/02/08/rendering-images-in-markdown-preview-of-hugo-site/"&gt;Rendering Images in Markdown Preview of Hugo Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Basic - Media</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---media/</link><pubDate>Thu, 23 Jan 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---media/</guid><description>&lt;h2 id="audio"&gt;Audio&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://sharpcoderblog.com/blog/unity-3d-audio-clip-import-settings-for-the-best-performance"&gt;Unity Audio Clip Import Settings For The Best Performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.raywenderlich.com/532-audio-tutorial-for-unity-the-audio-mixer"&gt;Audio tutorial for Unity: the Audio Mixer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://johnleonardfrench.com/the-right-way-to-make-a-volume-slider-in-unity-using-logarithmic-conversion/"&gt;The right way to make a volume slider in Unity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Basic - Editor</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---editor/</link><pubDate>Wed, 22 Jan 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---editor/</guid><description>&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;h2 id="editor"&gt;Editor&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://linkliu.github.io/game-tech-post/posts/%E5%9C%A8Unity%E7%BC%96%E8%BE%91%E5%99%A8%E4%B8%8D%E5%90%8C%E4%BD%8D%E7%BD%AE%E6%B7%BB%E5%8A%A0%E8%8F%9C%E5%8D%95/"&gt;在unity编辑器不同位置添加菜单&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://light11.hatenadiary.com/entry/2021/12/13/194147"&gt;SerializeReferenceをつけている型をリネーム・削除する時の注意点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forum.unity.com/threads/what-are-editorbuildsettings-config-objects-used-for-or-how-can-i-use-them.712031/"&gt;What are EditorBuildSettings config objects used for or how can I use them?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.unity.cn/cn/current/ScriptReference/EditorBuildSettings.TryGetConfigObject.html"&gt;EditorBuildSettings Example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Basic - UI</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---ui/</link><pubDate>Mon, 20 Jan 2025 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---ui/</guid><description>&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://shibuya24.info/entry/unity-ui-anchor"&gt;【Unity】3つだけでいい!?覚えるべきUIアンカー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shibuya24.info/entry/unity-ui-layout"&gt;【Unity基礎】スマホ向けゲームUIの作り方！基本的なUI配置から複数解像度対応まで解説&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cW-E4WEogzE"&gt;Master your Unity UI Buttons! - Unity UI tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QnT-2KxVvyk"&gt;How to scale Unity UI objects for every screen - Unity UI tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="canvas"&gt;Canvas&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/Packages/com.unity.ugui@1.0/manual/HOWTO-UIMultiResolution.html"&gt;Designing UI for Multiple Resolutions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/hello_1995/article/details/122130097"&gt;Unity Canvas Scaler 组件的使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/qq_42672770/article/details/121886944"&gt;Unity分辨率适配方案设置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/BV1AFvTzFEbG"&gt;Unity教程：如何让UI自适应分辨率_哔哩哔哩_bilibili&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="material"&gt;Material&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.jianshu.com/p/3df37c726530"&gt;Unity中，UI反向Mask效果（图片挖洞）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="text"&gt;Text&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/final5788/article/details/134158552"&gt;【Unity编辑器扩展】艺术字/自定义图片字体生成工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kyoro-s.com/unity-5/#google_vignette"&gt;【Unity】自作フォントを作成してTextで表示する方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/linxinfa/article/details/116561750"&gt;Unity中自制UGUI艺术字体（位图字体）（Bitmap Font Generator）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="textmeshpro"&gt;TextMeshPro&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gametorrahod.com/textmeshpro-anatomy/"&gt;TextMeshPro Anatomy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/BV1oK411x7MG"&gt;[Unity干货]使用TextMeshPro动态字体节省时间&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nekojara.city/unity-textmesh-pro-sprite-number"&gt;【Unity】TextMesh Proで数字をスプライト表示する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Platform - Web - Issue</title><link>https://HoshikawaRyuukou.github.io/posts/unity---platform---web---issue/</link><pubDate>Sun, 19 Jan 2025 16:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---platform---web---issue/</guid><description>&lt;h2 id="error"&gt;Error&lt;/h2&gt;
&lt;h3 id="error--failed-to-parse-binary-data-file-buildxxxdatabr"&gt;Error : Failed to parse binary data file Build/xxx.data.br&amp;hellip;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Failed to parse binary data file Build/web.data.br (with &amp;ldquo;Content-Type: null&amp;rdquo;), because it is still brotli-compressed. It should have been uncompressed by the browser, but it was unable to do so since the web server provided the compressed content without specifying the HTTP Response Header &amp;ldquo;Content-Encoding: br&amp;rdquo; that would have informed the browser that decompression is needed. Please verify your web server hosting configuration to add the missing &amp;ldquo;Content-Encoding: br&amp;rdquo; HTTP Response Header.&lt;/p&gt;</description></item><item><title>Software Design - Principle - Inversion of Control (IoC)</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---principle---inversion-of-control-ioc/</link><pubDate>Thu, 16 Jan 2025 20:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---principle---inversion-of-control-ioc/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;「控制反轉（Inversion of Control, IoC）」這個詞常常讓人一頭霧水──到底反轉了什麼？&lt;/p&gt;
&lt;p&gt;更麻煩的是，它還很容易和「依賴倒置（Dependency Inversion）」混淆 😅&lt;/p&gt;
&lt;p&gt;如果你在開發時有出現以下這些疑惑，那麼你其實已經在思考 IoC 要解決的問題了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;為什麼到處都要 &lt;code&gt;new&lt;/code&gt;？&lt;/li&gt;
&lt;li&gt;建構子的參數要怎麼安排？初始化邏輯怎麼整理？&lt;/li&gt;
&lt;li&gt;物件能不能被共享？生命週期誰來管理？何時該釋放？&lt;/li&gt;
&lt;li&gt;是否需要一個「專門管理依賴」的角色？&lt;/li&gt;
&lt;li&gt;這個類別既要處理業務邏輯，又要負責 &lt;code&gt;new&lt;/code&gt; 物件，職責是不是太混亂了？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;IoC 正是為了解決這些問題而提出的，它帶來一個核心理念：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;依賴的「使用者」不再自己主動去建立和配置依賴，而是把這個「控制權」交給外部機制（通常是 IoC 容器）。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;換句話說：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;依賴的「使用者」只需要「接收」或「查詢」它所需的依賴，然後專心「使用」它們。這樣它就能專注在核心邏輯上，而不必分心處理依賴管理，進而提升模組化與可維護性。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="advantages"&gt;Advantages&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;降低耦合度：&lt;/strong&gt; 需求方與具體實現之間不再直接關聯，每個模組都可以獨立開發、測試與替換，互不影響。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;集中管理依賴：&lt;/strong&gt; 容器統一管理所有物件的建立和生命週期。當您需要替換某個服務的實作時，只需要修改容器的配置，而不需要動到多處程式碼。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;避免重複建構：&lt;/strong&gt; 容器可以管理共享的物件實例，有效避免重複建立，提高資源利用率。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;提升測試便利性：&lt;/strong&gt; 透過 IoC 容器，在進行單元測試時，可以輕鬆地將真實的服務替換為&lt;strong&gt;模擬物件（mock）&lt;/strong&gt; 或 &lt;strong&gt;測試替身（stub）&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="practice"&gt;Practice&lt;/h2&gt;
&lt;p&gt;實現 IoC 有兩種常見方式：&lt;strong&gt;依賴注入（Dependency Injection, DI）&lt;/strong&gt; 和 &lt;strong&gt;依賴尋找（Dependency Lookup）&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id="依賴注入di"&gt;依賴注入（DI）&lt;/h3&gt;
&lt;p&gt;這是目前最主流且推薦的實踐方式，核心概念是&lt;strong&gt;由容器「被動地」將依賴項傳遞給需求方&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;實作原理：&lt;/strong&gt; 容器會主動將所需的依賴（如服務物件）透過以下方式注入到您的類別中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;建構子注入（Constructor Injection）：&lt;/strong&gt; 在物件建構時，透過建構子的參數傳入依賴。這是最推薦的方式，因為它可以確保物件在建立時就擁有所有必要的依賴，讓依賴關係更清晰。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;屬性注入（Property Injection）：&lt;/strong&gt; 透過公開的屬性（Setter）來傳入依賴。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;方法注入（Method Injection）：&lt;/strong&gt; 透過特定的方法來傳入依賴。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;優點：&lt;/strong&gt; 這種方式讓您的程式碼無需知道容器的存在（理想狀態），因為依賴是「被動」傳入的，大大降低了耦合度。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="依賴尋找dependency-lookup"&gt;依賴尋找（Dependency Lookup）&lt;/h3&gt;
&lt;p&gt;這種方式的核心是&lt;strong&gt;由需求方「主動地」向容器請求所需的依賴&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;實作原理：&lt;/strong&gt; 需求方會直接呼叫容器的方法（例如 &lt;code&gt;container.resolve()&lt;/code&gt;），來取得所需的服務。&lt;/p&gt;</description></item><item><title>Software Design - Concept - Object Lifecycle Management</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---concept---object-lifecycle-management/</link><pubDate>Sat, 04 Jan 2025 21:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---concept---object-lifecycle-management/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;物件生命週期管理（Object Lifecycle Management）&lt;strong&gt;是程式設計中的一個重要概念，它指的是有效控制和管理一個物件從&lt;/strong&gt;建立&lt;/strong&gt;、&lt;strong&gt;使用&lt;/strong&gt;到&lt;strong&gt;銷毀&lt;/strong&gt;的整個過程。良好的生命週期管理不僅能提升應用程式的效能，還能提高程式碼的可維護性，並有效地利用系統資源。&lt;/p&gt;
&lt;h2 id="stage"&gt;Stage&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;建立（Creation）&lt;/p&gt;
&lt;p&gt;物件被初始化並在記憶體中生成。在這個階段，程式碼通常會執行建構函式，完成必要的設定，或注入所需的依賴項。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用（Usage）&lt;/p&gt;
&lt;p&gt;物件處於活躍狀態，執行其核心功能。這段期間，應用程式會不斷地呼叫物件的方法，讀取或修改其屬性，處理各項業務邏輯。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;銷毀（Destruction）&lt;/p&gt;
&lt;p&gt;當物件不再被需要時，系統會回收其所佔用的資源。這個過程通常涉及垃圾回收機制（Garbage Collection），並釋放如檔案連線、資料庫連線等外部資源，避免資源洩漏。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="lifetime"&gt;Lifetime&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;瞬時（Transient）&lt;/p&gt;
&lt;p&gt;這種模式下的物件是一次性的。每次需要時，系統都會建立一個全新的實例。它特別適合那些不帶有狀態（Stateless）或只在短期內使用的物件，確保每次呼叫都是一個獨立乾淨的實體。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;單例（Singleton）&lt;/p&gt;
&lt;p&gt;顧名思義，在整個應用程式的執行期間，只會建立一個單一的實例。所有對該物件的請求都會共用同一個實體。這種模式常用於管理全域性資源，例如設定檔、日誌記錄器或資料庫連線池等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;範圍（Scoped）&lt;/p&gt;
&lt;p&gt;這是一種介於瞬時和單例之間的模式。物件的生命週期被限制在一個特定的作用範圍內，例如一次 HTTP 請求或一個獨立的執行單元。在該範圍內，該物件都是唯一的；但當範圍結束時，該物件就會被銷毀。這種模式非常適合在單次請求中共享狀態，同時又確保不同請求之間不會互相干擾。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Workflow – Clean Up Old GitHub Deployments</title><link>https://HoshikawaRyuukou.github.io/posts/workflow--clean-up-old-github-deployments/</link><pubDate>Wed, 13 Nov 2024 20:31:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow--clean-up-old-github-deployments/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;透過 GitHub CLI (&lt;strong&gt;&lt;code&gt;gh&lt;/code&gt;&lt;/strong&gt;) 刪除一個儲存庫中&lt;strong&gt;最舊的部署（deployment）記錄&lt;/strong&gt;，保留最新的 10 筆。&lt;/p&gt;
&lt;h2 id="operation"&gt;Operation&lt;/h2&gt;
&lt;h3 id="登入"&gt;登入&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;gh auth login
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="clean-up-old-github-deploymentsps1"&gt;Clean-Up-Old-GitHub-Deployments.ps1&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;取得指定儲存庫的所有部署記錄 ID。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;跳過最新的 10 個 ID。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;對剩下的（最舊的）每一個 ID：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;顯示一條刪除提示訊息。&lt;/li&gt;
&lt;li&gt;發送一個 &lt;code&gt;DELETE&lt;/code&gt; API 請求，將其從 GitHub 移除。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-ps1" data-lang="ps1"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;$Owner&lt;/span&gt; &lt;span style="color:#111"&gt;=&lt;/span&gt; &lt;span style="color:#d88200"&gt;&amp;#34;Owner Name&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;$Repo&lt;/span&gt; &lt;span style="color:#111"&gt;=&lt;/span&gt; &lt;span style="color:#d88200"&gt;&amp;#34;Repo Name&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;gh&lt;/span&gt; &lt;span style="color:#111"&gt;api&lt;/span&gt; &lt;span style="color:#111"&gt;repos&lt;/span&gt;&lt;span style="color:#111"&gt;/&lt;/span&gt;&lt;span style="color:#111"&gt;$Owner&lt;/span&gt;&lt;span style="color:#111"&gt;/&lt;/span&gt;&lt;span style="color:#111"&gt;$Repo&lt;/span&gt;&lt;span style="color:#111"&gt;/&lt;/span&gt;&lt;span style="color:#111"&gt;deployments&lt;/span&gt; &lt;span style="color:#111"&gt;-&lt;/span&gt;&lt;span style="color:#111"&gt;-paginate&lt;/span&gt; &lt;span style="color:#111"&gt;-&lt;/span&gt;&lt;span style="color:#111"&gt;-jq&lt;/span&gt; &lt;span style="color:#d88200"&gt;&amp;#39;.[].id&amp;#39;&lt;/span&gt; &lt;span style="color:#111"&gt;|&lt;/span&gt; &lt;span style="color:#111"&gt;Select-Object&lt;/span&gt; &lt;span style="color:#111"&gt;-Skip&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;10&lt;/span&gt; &lt;span style="color:#111"&gt;|&lt;/span&gt; &lt;span style="color:#111"&gt;ForEach-Object&lt;/span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;Write-Host&lt;/span&gt; &lt;span style="color:#d88200"&gt;&amp;#34;Deleting deployment &lt;/span&gt;&lt;span style="color:#111"&gt;$_&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;gh&lt;/span&gt; &lt;span style="color:#111"&gt;api&lt;/span&gt; &lt;span style="color:#111"&gt;-&lt;/span&gt;&lt;span style="color:#111"&gt;-method&lt;/span&gt; &lt;span style="color:#111"&gt;DELETE&lt;/span&gt; &lt;span style="color:#111"&gt;repos&lt;/span&gt;&lt;span style="color:#111"&gt;/&lt;/span&gt;&lt;span style="color:#111"&gt;$Owner&lt;/span&gt;&lt;span style="color:#111"&gt;/&lt;/span&gt;&lt;span style="color:#111"&gt;$Repo&lt;/span&gt;&lt;span style="color:#111"&gt;/&lt;/span&gt;&lt;span style="color:#111"&gt;deployments&lt;/span&gt;&lt;span style="color:#111"&gt;/&lt;/span&gt;&lt;span style="color:#111"&gt;$_&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這段程式碼可以拆解為幾個部分來理解：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$Owner&lt;/code&gt; 和 &lt;code&gt;$Repo&lt;/code&gt; 是 PowerShell 的&lt;strong&gt;變數&lt;/strong&gt;，用來存放你的 GitHub 儲存庫的擁有者和名稱。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;gh api repos/$Owner/$Repo/deployments --paginate --jq '.[].id'&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$Owner&lt;/code&gt; 和 &lt;code&gt;$Repo&lt;/code&gt; 會被替換成你設定的值。&lt;/li&gt;
&lt;li&gt;這段指令會透過 GitHub CLI 取得你指定儲存庫的所有部署記錄，並只列出它們的 ID。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;| Select-Object -Skip 10&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;這段指令會&lt;strong&gt;跳過&lt;/strong&gt;清單中&lt;strong&gt;最前面的 10 個 ID&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;因為 GitHub API 預設是把最新的記錄放在最前面，所以這個步驟等於是保留了最新的 10 筆部署，並選取了剩下的、最舊的部署。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;| ForEach-Object { ... }&lt;/code&gt;&lt;/p&gt;</description></item><item><title>GitHub - GitHub CLI</title><link>https://HoshikawaRyuukou.github.io/posts/github---github-cli/</link><pubDate>Tue, 12 Nov 2024 13:08:39 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/github---github-cli/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;GitHub 網頁面板上沒辦法執行刪除 deployment，得用 GitHub CLI 來操作😂。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cli.github.com/"&gt;GitHub CLI | Take GitHub to the command line&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="operation"&gt;Operation&lt;/h2&gt;
&lt;h3 id="登入"&gt;登入&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;gh auth login
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Software Design - Pattern</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---pattern/</link><pubDate>Tue, 01 Oct 2024 09:56:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---pattern/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;在軟體工程中，&lt;strong&gt;設計模式&lt;/strong&gt;（Design Pattern）是解決常見問題的一套可重複使用的最佳實踐方案。它們就像是經驗豐富的工程師為特定情境寫下的「操作手冊」，能幫助我們寫出更具彈性、易於維護且可擴展的程式碼。&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;h3 id="factory"&gt;Factory&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.bilibili.com/video/BV1ZS421X74d"&gt;工厂模式？错！是工厂模式群！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="observer-vs-pub-sub-publisher-subscriber"&gt;Observer vs Pub-Sub (Publisher-Subscriber)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hackernoon.com/observer-vs-pub-sub-pattern-50d3b27f838c"&gt;Observer vs Pub-Sub pattern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.semicolonandsons.com/code_diary/architecture/pub-sub-system-pros-and-cons"&gt;Pub sub system pros and cons&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Package - UniTask</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package---unitask/</link><pubDate>Tue, 24 Sep 2024 09:45:17 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package---unitask/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;UniTask 是一個專為 Unity 設計的高效能非同步程式設計函式庫，它以 C# 的 &lt;code&gt;async/await&lt;/code&gt; 語法為基礎，旨在提供一個比 Unity 原生 Coroutine (協程) 和內建 Task 更高效能、更低記憶體消耗的非同步解決方案。&lt;/p&gt;
&lt;p&gt;雖然 Unity 2023.1 版本已正式引入 &lt;code&gt;UnityEngine.Awaitable&lt;/code&gt;，為 &lt;code&gt;async/await&lt;/code&gt; 提供了官方支援，但目前 UniTask 的生態系（例如與其他常用函式庫的整合）依然更加成熟和廣泛，因此在專案中導入 UniTask 仍是主流且可靠的選擇。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/2023.2/Documentation/Manual/AwaitSupport.html"&gt;Unity - Manual: Await support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=B2jiquau_TQ"&gt;【Unity 2023.1】 C# async/await 正式サポート？ Awaitable を使ってみよう！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;p&gt;UniTask 官方文件對其核心功能有非常清晰的說明，是最好的入門起點：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Cysharp/UniTask"&gt;Cysharp/UniTask (Official GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;若想參考更多教學資源，以下文章也提供了詳盡的介紹與範例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scenarioflow-lab.dotprologue.com/category/unitask/"&gt;UniTask | ScenarioFlow Lab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/toRisouP/items/4445b6b9bf00e49eb147"&gt;UniTask機能紹介 (Qiita)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackmd.io/@-xLrSnFfROOeIeRnENCWcQ/Bke4eFcrd"&gt;UniTaskを使おう！ (HackMD)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="vs-coroutine"&gt;vs. Coroutine&lt;/h2&gt;
&lt;p&gt;Coroutine 是 Unity 原生支援的非同步處理方式。雖然堪用，但在複雜度、性能與可讀性上，UniTask 提供了更現代且強大的解決方案。&lt;/p&gt;
&lt;p&gt;以下我們從幾個關鍵面向進行比較：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;可讀性：從非線性結構到線性邏輯&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Coroutine&lt;/strong&gt;: 透過 &lt;code&gt;yield return&lt;/code&gt; 語法來暫停與恢復。當非同步操作需要串接時（如下載完檔案再解析），程式碼的邏輯會被分割在不同的 &lt;code&gt;yield&lt;/code&gt; 點之間，導致結構上的非線性，可讀性隨複雜度下降。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UniTask&lt;/strong&gt;: &lt;code&gt;async/await&lt;/code&gt; 語法將複雜的狀態機轉換隱藏在編譯層面，讓開發者能以&lt;strong&gt;從上到下的同步風格&lt;/strong&gt;編寫非同步程式碼，邏輯始終保持清晰。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;回傳值：從迂迴的 Callback 到直接 &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;</description></item><item><title>Unity - Package - LitMotion</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package---litmotion/</link><pubDate>Fri, 23 Aug 2024 10:08:39 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package---litmotion/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;從 DOTween 轉換到 LitMotion 的過程很順利，特別是看中它「零記憶體配置」（Zero Allocation）的特性。加上它對 UniTask 和 R3 的良好支援。&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AnnulusGames/LitMotion"&gt;GitHub - annulusgames/LitMotion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://annulusgames.github.io/LitMotion/index.html"&gt;LitMotion Overview | LitMotion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://game-ui.net/?p=835"&gt;DOTweenのイージング一覧を世界一詳しく&amp;amp;分かりやすく説明する | ゲームUIネット&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="practice"&gt;Practice&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.karvan1230.com/entry/2025/07/01/200000"&gt;【Unity】2次ベジェ曲線を使ってLitMotionでジャンプ機能を実装する - 原カバンは鞄のお店ではありません。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.karvan1230.com/entry/2024/05/07/215217"&gt;【Unity】Splineを利用してLitMotionでパス移動を実現する - 原カバンは鞄のお店ではありません。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Chat - Profile - Studio</title><link>https://HoshikawaRyuukou.github.io/posts/chat---profile---studio/</link><pubDate>Tue, 13 Aug 2024 20:31:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/chat---profile---studio/</guid><description>&lt;h2 id="箱庭工作室-miniature-garden-studio"&gt;箱庭工作室 (Miniature Garden Studio)&lt;/h2&gt;
&lt;p&gt;這是我的工作室名，其核心思想是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;每個創作都是一個精心構築的 &lt;strong&gt;箱庭/微型世界&lt;/strong&gt;，在有限的環境中創造豐富且深度的體驗，讓使用者能夠沉浸其中。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id="現實中的箱庭"&gt;現實中的箱庭&lt;/h2&gt;
&lt;p&gt;箱庭（はこにわ，Hakoniwa），它是一種縮小版的庭園或景觀模型。這個概念源於日本，最早用來指代傳統日式庭園的迷你模型，但後來這個詞的應用範圍擴展到了各種縮小版的自然景觀創作。&lt;/p&gt;
&lt;h2 id="遊戲中的箱庭"&gt;遊戲中的箱庭&lt;/h2&gt;
&lt;p&gt;箱庭設計在遊戲中已成為一種經典理念。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ign.com.cn/ign-xiao-ke-tang/22014/feature/ignxiao-ke-tang-49xiang-ting"&gt;IGN小课堂#49：箱庭&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gcores.com/articles/122163"&gt;从沙盒和开放世界谈起，说说日本的箱庭设计理念&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Algorithm - Sampling - Alias Method</title><link>https://HoshikawaRyuukou.github.io/posts/algorithm---sampling---alias-method/</link><pubDate>Sun, 04 Aug 2024 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/algorithm---sampling---alias-method/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;別名方法是一種眾所周知的演算法，用於從任意離散機率分佈中進行恆定時間採樣，該演算法依賴於簡單的預先計算的查找表。&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/rover2002/article/details/106760664"&gt;Alias Method: 非均匀随机抽样算法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.keithschwarz.com/darts-dice-coins/"&gt;Darts, Dice, and Coins: Sampling from a Discrete Distribution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zliu.org/post/weighted-random/"&gt;Weighted Random: algorithms for sampling from discrete probability distributions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mackysoft/Choice?tab=readme-ov-file#speed-measurement"&gt;mackysoft/Choice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jgrapht/jgrapht/blob/master/jgrapht-core/src/main/java/org/jgrapht/alg/util/AliasMethodSampler.java"&gt;jgrapht-core/src/main/java/org/jgrapht/alg/util/AliasMethodSampler.java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;務必先觀看&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一篇文章的漸進思考與核心精神&lt;/li&gt;
&lt;li&gt;第二篇文章最後的 Vose&amp;rsquo;s Alias Method 圖解&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="example"&gt;Example&lt;/h2&gt;
&lt;p&gt;給定的權重 &lt;code&gt;[0.1, 0.2, 0.3, 0.4]&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id="按均值縮放權重"&gt;&lt;strong&gt;按均值縮放權重&lt;/strong&gt;：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;均值為 : 0.25&lt;/li&gt;
&lt;li&gt;縮放後的權重：&lt;code&gt;[0.4, 0.8, 1.2, 1.6]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="分類權重到-large-和-small-隊列"&gt;&lt;strong&gt;分類權重到 large 和 small 隊列&lt;/strong&gt;：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;初始狀態：&lt;code&gt;small = [], large = []&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;權重 &lt;code&gt;0.4&lt;/code&gt; 小於 1，放入 &lt;code&gt;small&lt;/code&gt;：&lt;code&gt;small = [0]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;權重 &lt;code&gt;0.8&lt;/code&gt; 小於 1，放入 &lt;code&gt;small&lt;/code&gt;：&lt;code&gt;small = [0, 1]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;權重 &lt;code&gt;1.2&lt;/code&gt; 大於 1，放入 &lt;code&gt;large&lt;/code&gt;：&lt;code&gt;large = [2]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;權重 &lt;code&gt;1.6&lt;/code&gt; 大於 1，放入 &lt;code&gt;large&lt;/code&gt;：&lt;code&gt;large = [2, 3]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="構建別名表"&gt;&lt;strong&gt;構建別名表&lt;/strong&gt;：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;初始狀態：&lt;/p&gt;</description></item><item><title>OS - File System - Symbolic Link</title><link>https://HoshikawaRyuukou.github.io/posts/os---file-system---symbolic-link/</link><pubDate>Wed, 10 Jul 2024 09:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/os---file-system---symbolic-link/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;符號連結本身只是一個檔案，但它的內容指向另一個檔案或資料夾的路徑。當你存取這個符號連結時，作業系統會自動將你導向到它所指向的目標。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;⚠️ 符號連結它只是一個指標，不包含實際的檔案內容。如果你刪除原始檔案，符號連結就會失效。&lt;/p&gt;
&lt;h2 id="windows"&gt;Windows&lt;/h2&gt;
&lt;p&gt;⚠️ Windows 建立符號連結需要 &lt;strong&gt;管理員權限&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用 &lt;strong&gt;cmd&lt;/strong&gt;（需管理員權限）：&lt;a href="https://learn.microsoft.com/zh-tw/windows-server/administration/windows-commands/mklink"&gt;mklink&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;使用 &lt;strong&gt;PowerShell&lt;/strong&gt;（需管理員權限）：&lt;a href="https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/new-item?view=powershell-7.5#example-7-create-a-symbolic-link-to-a-file-or-folder"&gt;Create a symbolic link to a file or folder&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Software Development - Document - README</title><link>https://HoshikawaRyuukou.github.io/posts/software-development---document---readme/</link><pubDate>Tue, 18 Jun 2024 21:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-development---document---readme/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;最近我從 Unity 轉向了 Node.js，因此花了不少時間在 npm 上尋找合適的套件。大部分的 README 寫得很清晰，但也有少數讓人摸不著頭緒。這讓我意識到，&lt;strong&gt;README 就是專案的門面&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/dean-lin/%E4%BD%A0%E7%9F%A5%E9%81%93%E5%B0%8D%E5%B0%88%E6%A1%88%E4%BE%86%E8%AA%AA-readme-md-%E6%9C%89%E5%A4%9A%E9%BA%BC%E9%87%8D%E8%A6%81%E5%97%8E-%E5%B7%A5%E7%A8%8B%E5%B8%AB%E8%A1%80%E6%B7%9A%E5%8F%B2-c0fb0908343e"&gt;你知道對專案來說，README.md 有多麼重要嗎？ ── 工程師血淚史&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hackergrrl/art-of-readme/blob/master/README-zh-TW.md"&gt;README 的藝術&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="template"&gt;Template&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/PurpleBooth/109311bb0361f32d87a2"&gt;README-Template.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.readme-templates.com/"&gt;GitHub README Templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Chat - Career - Software Engineer</title><link>https://HoshikawaRyuukou.github.io/posts/chat---career---software-engineer/</link><pubDate>Thu, 30 May 2024 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/chat---career---software-engineer/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;後端：深入且穩定&lt;/li&gt;
&lt;li&gt;前端：廣泛且彈性&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="roadmap"&gt;Roadmap&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://roadmap.sh/"&gt;Developer Roadmaps - roadmap.sh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="algorithm"&gt;Algorithm&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/labuladong/fucking-algorithm?tab=readme-ov-file"&gt;fucking-algorithm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krahets/hello-algo"&gt;hello-algo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TheAlgorithms"&gt;The Algorithms&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Coding - Renaming</title><link>https://HoshikawaRyuukou.github.io/posts/unity---coding---renaming/</link><pubDate>Wed, 27 Mar 2024 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---coding---renaming/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Rider 能更好處理 Unity 開發環境的大小事，但你知道的費用&amp;hellip; 👀&lt;/li&gt;
&lt;li&gt;處理 Renaming 事務一律切到 Visual Studio，因為 VS Code 的支援很不到位。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="field"&gt;Field&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/ScriptReference/Serialization.FormerlySerializedAsAttribute.html"&gt;Unity - Scripting API: FormerlySerializedAsAttribute&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="monobehaviour-class"&gt;MonoBehaviour Class&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;現在 Unity 裡對 Class 重新命名（這時 .cs 檔會與 class name 不一致）&lt;/li&gt;
&lt;li&gt;到 Visual Studio 裡重新命名&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;⚠️ 順序錯誤可能會導致引用噴掉
⚠️ 步驟 2 先執行會導致 Unity 的 class 檔名會一起變動（有概率會出錯）&lt;/p&gt;
&lt;h2 id="namespace"&gt;Namespace&lt;/h2&gt;
&lt;p&gt;有兩個情境&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;真的想重新命名 namespace （對著 namespace 直接右鍵重新命名即可）&lt;/li&gt;
&lt;li&gt;想把某 Type 歸屬到指定 namespace&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;情境 2 要使用 Visual Studio 的重構工具&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;對著 Type 右鍵 - &lt;strong&gt;快速動作與重構&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;選擇 &lt;strong&gt;移到命名空間&lt;/strong&gt;（這樣所有的參考都會連動修改）&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Unity - Coding - Managed code stripping</title><link>https://HoshikawaRyuukou.github.io/posts/unity---coding---managed-code-stripping/</link><pubDate>Tue, 26 Mar 2024 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---coding---managed-code-stripping/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;在構建過程中，Unity 通過稱為託管代碼剝離的過程刪除未使用或無法訪問的代碼，這可以顯著減小應用程式的最終大小。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;File -&amp;gt; Build Settings -&amp;gt; Player Settings -&amp;gt; Optimization -&amp;gt; Managed Stripping Level&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;⚠️ Managed Stripping Level 等級越高裁剪掉的代碼越多，包體也就越小，但是對應的風險也就更大。&lt;/li&gt;
&lt;li&gt;藉由屬性或特殊 XML 配置檔的形式提供註釋，以指示 Unity 連結器要保留代碼庫的哪些部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/6000.0/Documentation/Manual/managed-code-stripping.html"&gt;Unity - Manual: Managed code stripping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KuraiAndras/LinkerGenerator"&gt;KuraiAndras/LinkerGenerator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/hatopopo_0113/articles/279d3b89c791d1"&gt;IUnityLinkerProcessorでCodeStrippingからコードを守る&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="preserving"&gt;Preserving&lt;/h2&gt;
&lt;h3 id="preserve-attribute"&gt;Preserve attribute&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;⚠️ [Preserve] 屬性屬於“侵入式”的解決方案，不建議&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-cs" data-lang="cs"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;class&lt;/span&gt; &lt;span style="color:#75af00"&gt;Foo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75af00"&gt; [Preserve]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;public&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;void&lt;/span&gt; &lt;span style="color:#111"&gt;PreservedMethod&lt;/span&gt;&lt;span style="color:#111"&gt;(){}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="linkxml"&gt;link.xml&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在專案的 Assets 目錄下創建個 link.xml&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-xml" data-lang="xml"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;&amp;lt;linker&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;lt;assembly&lt;/span&gt; &lt;span style="color:#75af00"&gt;fullname=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;DOTween&amp;#34;&lt;/span&gt; &lt;span style="color:#75af00"&gt;preserve=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;all&amp;#34;&lt;/span&gt; &lt;span style="color:#f92672"&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;lt;assembly&lt;/span&gt; &lt;span style="color:#75af00"&gt;fullname=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;Newtonsoft.Json&amp;#34;&lt;/span&gt; &lt;span style="color:#75af00"&gt;preserve=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;all&amp;#34;&lt;/span&gt; &lt;span style="color:#f92672"&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;lt;assembly&lt;/span&gt; &lt;span style="color:#75af00"&gt;fullname=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;Assembly-CSharp&amp;#34;&lt;/span&gt; &lt;span style="color:#75af00"&gt;preserve=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;all&amp;#34;&lt;/span&gt; &lt;span style="color:#f92672"&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;lt;assembly&lt;/span&gt; &lt;span style="color:#75af00"&gt;fullname=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;UnityEngine&amp;#34;&lt;/span&gt;&lt;span style="color:#f92672"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;lt;type&lt;/span&gt; &lt;span style="color:#75af00"&gt;fullname=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;UnityEngine.SpriteRenderer&amp;#34;&lt;/span&gt; &lt;span style="color:#75af00"&gt;preserve=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;all&amp;#34;&lt;/span&gt;&lt;span style="color:#f92672"&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;lt;type&lt;/span&gt; &lt;span style="color:#75af00"&gt;fullname=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;UnityEngine.Rigidbody2D&amp;#34;&lt;/span&gt; &lt;span style="color:#75af00"&gt;preserve=&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;all&amp;#34;&lt;/span&gt;&lt;span style="color:#f92672"&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;&amp;lt;/assembly&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;&amp;lt;/linker&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Assets - Game</title><link>https://HoshikawaRyuukou.github.io/posts/assets---game/</link><pubDate>Sun, 11 Feb 2024 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/assets---game/</guid><description>&lt;h2 id="extracting"&gt;Extracting&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AssetRipper/AssetRipper"&gt;AssetRipper/AssetRipper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="games"&gt;Games&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/28598519a/TSK_AssetDL"&gt;28598519a/TSK_AssetDL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZM-Kimu/Blue-Archive-Asset-Downloader"&gt;ZM-Kimu/Blue-Archive-Asset-Downloader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Deathemonic/BA-AD"&gt;Deathemonic/BA-AD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Unity - Package Manager - Modify a Package</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package-manager---modify-a-package/</link><pubDate>Fri, 12 Jan 2024 12:46:15 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package-manager---modify-a-package/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;客製化 Unity 官方 / git 直接導入 的 Package&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://support.unity.com/hc/en-us/articles/9113460764052-How-can-I-modify-built-in-packages-"&gt;How can I modify built-in packages?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/linjf520/article/details/125738218"&gt;Unity - 如何修改一个 Package 或是如何将 Package Local化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="steps"&gt;Steps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;至 &lt;code&gt;ProjrctRoot\Library\PackageCache&lt;/code&gt; 找到目標的 Package&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;剪下貼上&lt;/strong&gt;至 &lt;code&gt;ProjrctRoot\Packages&lt;/code&gt; 即可&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Unity - Package - External Dependency Manager for Unity (EDM4U)</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package---external-dependency-manager-for-unity-edm4u/</link><pubDate>Wed, 08 Nov 2023 12:46:15 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package---external-dependency-manager-for-unity-edm4u/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;Google 停止維護 Game Package Registry (GPR) 導致不能直接使用 Package Manager 導入包。必須到封存檔網站下載「.tgz」手動導入。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/unity/archive?hl=zh-tw#external_dependency_manager_for_unity"&gt;Google Unity 套件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/Manual/upm-ui-tarball.html"&gt;Install a package from a local tarball file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他的相關的 Google Service 依賴(AR/Firebase/Google Play等)也可以用此方法導入。&lt;/p&gt;
&lt;h2 id="configuration"&gt;Configuration&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Assets &amp;gt; External Dependency Manager &amp;gt; Android Resolver &amp;gt; Settings&lt;/code&gt;
啟用這三個 Patch&lt;/p&gt;
&lt;p&gt;
 &lt;img src="https://HoshikawaRyuukou.github.io/images/blog/EDM4U_01.png" alt="EDM4U_01"&gt;

&lt;/p&gt;
&lt;p&gt;並至 &lt;code&gt;Player Settings &amp;gt; Publishing Settings&lt;/code&gt;
啟用以下選項&lt;/p&gt;
&lt;p&gt;
 &lt;img src="https://HoshikawaRyuukou.github.io/images/blog/EDM4U_02.png" alt="EDM4U_02"&gt;

&lt;/p&gt;
&lt;h2 id="auto-resolution"&gt;Auto Resolution&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Assets &amp;gt; External Dependency Manager &amp;gt; Android Resolver &amp;gt; Force Resolve&lt;/code&gt;
後會去收集專案&lt;strong&gt;所有 Editor 資料夾&lt;/strong&gt;下的 *&lt;strong&gt;Dependencies.xml&lt;/strong&gt; 加到 mainTemplate 中&lt;/p&gt;</description></item><item><title>Git - Rebase</title><link>https://HoshikawaRyuukou.github.io/posts/git---rebase/</link><pubDate>Sun, 16 Jul 2023 10:08:39 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/git---rebase/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;過去常以為 &lt;code&gt;rebase&lt;/code&gt; 是像「剪下貼上」的操作，但實際上更像是「複製貼上」，它會將一系列的 Commit 複製一份，並重新套用在新的基底上，因此會產生新的 SHA-1 值。&lt;/p&gt;
&lt;h3 id="主要情境與特性"&gt;&lt;strong&gt;主要情境與特性&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;歷史紀錄更簡潔&lt;/strong&gt;：&lt;code&gt;rebase&lt;/code&gt; 不會像 &lt;code&gt;merge&lt;/code&gt; 那樣產生額外的合併節點（Merge Commit），讓 Commit 歷史紀錄更為線性、乾淨。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;適用於未推送的 Commit&lt;/strong&gt;：當你想要整理、合併或修改本地端「還沒推送到遠端」的 Commit 時，&lt;code&gt;rebase&lt;/code&gt; 是非常實用的工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;避免修改已推送的歷史&lt;/strong&gt;：由於 &lt;code&gt;rebase&lt;/code&gt; 會改寫 Commit 歷史，因此 &lt;strong&gt;絕對不要&lt;/strong&gt; 對已經推送到遠端（與他人協作中）的分支進行 &lt;code&gt;rebase&lt;/code&gt; 操作，以免造成他人的困擾。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HeF7dwVyzow"&gt;另一種合併方式（使用 rebase）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jessie75919.medium.com/git-rebase-%E7%94%A8%E6%B3%95-3e1ef046e357"&gt;git rebase 用法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="extras"&gt;Extras&lt;/h2&gt;
&lt;h3 id="如何取消-rebase-操作"&gt;&lt;strong&gt;如何取消 Rebase 操作&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;如果你在進行 &lt;code&gt;rebase&lt;/code&gt; 時後悔了，可以透過以下兩種方式安全地回溯到操作之前的狀態：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;使用 &lt;code&gt;git reflog&lt;/code&gt; 尋找歷史紀錄&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;輸入 &lt;code&gt;git reflog&lt;/code&gt;，這會列出你所有的 Git 操作紀錄。&lt;/li&gt;
&lt;li&gt;找到 &lt;code&gt;rebase&lt;/code&gt; 執行前的 Commit ID。&lt;/li&gt;
&lt;li&gt;輸入 &lt;code&gt;git reset XXXXXXX --hard&lt;/code&gt; 來回溯（其中 &lt;code&gt;XXXXXXX&lt;/code&gt; 為該 Commit ID）。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;使用 &lt;code&gt;ORIG_HEAD&lt;/code&gt; 快速回溯&lt;/strong&gt; 由於 Git 在執行 &lt;code&gt;reset&lt;/code&gt; 等具風險的操作時，會額外將上一個 HEAD 的位置記錄在 &lt;code&gt;ORIG_HEAD&lt;/code&gt; 中。因此，你也可以直接執行以下指令來快速達到相同的效果：&lt;/p&gt;</description></item><item><title>GitHub - Pull Request</title><link>https://HoshikawaRyuukou.github.io/posts/github---pull-request/</link><pubDate>Fri, 14 Jul 2023 10:08:39 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/github---pull-request/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;有些環境也稱為合併請求（Merge Request）。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;產品開發中，通常會指定一個分支作為可發布的正式版本分支（例如 &lt;code&gt;master&lt;/code&gt; 或 &lt;code&gt;main&lt;/code&gt;）。在多人協作時，讓每位開發者都能直接提交（Commit）至這個正式分支並非最佳實踐。&lt;/p&gt;
&lt;p&gt;為了有效管理，可以採用 &lt;strong&gt;Pull Request (PR)&lt;/strong&gt; 的方式來控制權限。當其他開發者完成工作後，他們會發起一個 PR。專案管理者在審核並確認無誤後，即可將其合併，這能確保產品分支始終處於隨時可發布的狀態。&lt;/p&gt;
&lt;p&gt;若您參與開源專案，在建立 PR 前，建議先在本地分支上執行 &lt;code&gt;git rebase&lt;/code&gt; 指令，將您的變更建立在最新的程式碼進度之上，這有助於降低審核者的理解與合併難度。&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gitbook.tw/chapters/github/pull-request"&gt;與其它開發者的互動 - 使用 Pull Request（PR）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Git - Reapply .gitignore</title><link>https://HoshikawaRyuukou.github.io/posts/git---reapply-.gitignore/</link><pubDate>Fri, 14 Jul 2023 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/git---reapply-.gitignore/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;當你一開始沒 ignore 到某些檔案，後來補上 .gitignore，卻發現 Git 還是繼續追蹤那些檔案。&lt;/p&gt;
&lt;h2 id="solution"&gt;Solution&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 先清掉 Git 的快取（不會刪檔，只是取消追蹤）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;git rm -r --cached .
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 再重新加入所有檔案（讓 .gitignore 這次能正確發揮作用）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 然後提交變更&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;git commit -m &lt;span style="color:#d88200"&gt;&amp;#34;Reapply .gitignore rules&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Unity - Basic - Preprocessor Directives</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---preprocessor-directives/</link><pubDate>Fri, 07 Jul 2023 16:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---preprocessor-directives/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;在口語交流中，我們常用 &lt;strong&gt;&lt;code&gt;Define&lt;/code&gt;&lt;/strong&gt; 來稱呼，但正式名稱其實是 &lt;strong&gt;前置處理器指示詞（Preprocessor Directives）&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我最近接手一個舊專案時，發現裡面大量使用了 &lt;strong&gt;條件式編譯&lt;/strong&gt;。例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-csharp" data-lang="csharp"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#if&lt;/span&gt; &lt;span style="color:#111"&gt;DEBUG&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;Console&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;WriteLine&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;Debug version&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#endif&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 Unity 中，這類寫法也經常出現在處理不同平台或環境時：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-csharp" data-lang="csharp"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;public&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;class&lt;/span&gt; &lt;span style="color:#75af00"&gt;PlatformDefines&lt;/span&gt; &lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#111"&gt;MonoBehaviour&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;void&lt;/span&gt; &lt;span style="color:#111"&gt;Start&lt;/span&gt; &lt;span style="color:#111"&gt;()&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;#if&lt;/span&gt; &lt;span style="color:#111"&gt;UNITY_EDITOR&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;Debug&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;Log&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;Unity Editor&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;#endif&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;#if&lt;/span&gt; &lt;span style="color:#111"&gt;UNITY_IOS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;Debug&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;Log&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;iOS&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;#endif&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;#if&lt;/span&gt; &lt;span style="color:#111"&gt;UNITY_STANDALONE_OSX&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;Debug&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;Log&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;Standalone OSX&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;#endif&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;#if&lt;/span&gt; &lt;span style="color:#111"&gt;UNITY_STANDALONE_WIN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;Debug&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;Log&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#d88200"&gt;&amp;#34;Standalone Windows&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;#endif&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;前置處理器指示詞並非沒有代價，過度使用會帶來以下困擾：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;編譯版本數量容易爆炸（至少是 &lt;code&gt;2^(指示詞分類數)&lt;/code&gt; 種），使得除錯與測試難度上升。&lt;/li&gt;
&lt;li&gt;在 Unit Test 中幾乎無法有效使用。&lt;/li&gt;
&lt;li&gt;無法透過一般的編譯檢查來捕捉錯誤。&lt;/li&gt;
&lt;li&gt;巢狀結構一旦出現，可讀性大幅降低。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最直接的影響就是：&lt;strong&gt;問題會被延後發現！&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="quide"&gt;Quide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/zh-tw/dotnet/csharp/language-reference/preprocessor-directives"&gt;C# 前置處理器指示詞&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/mattak/articles/3ef65fd8c9db63"&gt;macroのカジュアル多用は危険&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/Manual/PlatformDependentCompilation.html"&gt;Conditional Compilation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="practice"&gt;Practice&lt;/h2&gt;
&lt;p&gt;原則上能避免就避免使用，通常可以透過 &lt;strong&gt;條件分支&lt;/strong&gt;、&lt;strong&gt;策略模式&lt;/strong&gt; 或 &lt;strong&gt;依賴注入&lt;/strong&gt; 來更清楚地表達邏輯，並提升程式的可維護性。&lt;/p&gt;
&lt;h3 id="-允許--少量使用-unity_editor-在-monobehaviour"&gt;✅ 允許 — 少量使用 &lt;code&gt;UNITY_EDITOR&lt;/code&gt; 在 MonoBehaviour&lt;/h3&gt;
&lt;p&gt;某些情境下需要針對編輯器做額外處理(客製編輯器)，這算是合理的使用方式：&lt;/p&gt;</description></item><item><title>Software Design - Pattern - Service Locator</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---service-locator/</link><pubDate>Wed, 28 Jun 2023 16:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---service-locator/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Service Locator&lt;/strong&gt; 是一種 &lt;strong&gt;依賴尋找（Dependency Lookup）&lt;/strong&gt; 的實作方式，它確實屬於控制反轉（IoC）的一種。&lt;/p&gt;
&lt;p&gt;過去我曾頻繁使用這個模式，當時對於 DI（依賴注入）與 IoC 的概念還不熟悉，只覺得它讓依賴的取用變得非常方便，因為你可以在任何地方直接這樣取得所需物件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-csharp" data-lang="csharp"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;var&lt;/span&gt; &lt;span style="color:#111"&gt;target&lt;/span&gt; &lt;span style="color:#111"&gt;=&lt;/span&gt; &lt;span style="color:#111"&gt;ServiceLocator&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;Resovle&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#111"&gt;Target&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然而，這種作法存在幾個顯著問題：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;隱性依賴&lt;/strong&gt;：由於依賴的取得過程被隱藏起來，程式碼的真實依賴關係難以被一眼識別，增加了閱讀與維護的難度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;打破分層原則&lt;/strong&gt;：任何元件都可以隨意取得服務，這可能會導致 View 層級的物件存取到不屬於其範疇的業務邏輯，破壞了應用程式的架構分層。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因此，當我對 DI 與 IoC 的概念更加熟悉，並開始使用 DI/IoC Container 後，就逐漸棄用了 Service Locator 這個模式。&lt;/p&gt;
&lt;h2 id="situation"&gt;Situation&lt;/h2&gt;
&lt;p&gt;這次的專案讓我重新思考了 Service Locator 的價值。我發現它非常適合做為從 &lt;strong&gt;Singleton 過渡到 DI/IoC Container&lt;/strong&gt; 的中間階段。&lt;/p&gt;
&lt;p&gt;我們目前專案嚴重依賴 Singleton 模式，團隊成員也已經習慣了這種寫法。若要直接切換到 DI/IoC Container，勢必會引發不小的陣痛期。&lt;/p&gt;
&lt;p&gt;在這種情況下，Service Locator 成了理想的過渡方案，理由如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;寫法近似 Singleton&lt;/strong&gt;：它的使用方式與靜態的 Singleton 模式極為相似，能讓團隊成員無痛轉換，降低學習成本。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;快速感受 IoC 好處&lt;/strong&gt;：儘管只是過渡，但它能讓團隊成員立即感受到集中管理依賴所帶來的便利性，為後續全面採用 DI/IoC Container 鋪路。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;集中管理依賴&lt;/strong&gt;：它提供一個中央註冊點，讓所有依賴關係被統一看管。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="practice"&gt;Practice&lt;/h2&gt;
&lt;p&gt;這種模式使用一個中央註冊表（&lt;strong&gt;Service Locator&lt;/strong&gt;）來根據請求返回執行特定任務所需的物件。&lt;/p&gt;
&lt;p&gt;以下是一個簡化版的實作範例，它有別於一般的 IoC Container，具有以下特色：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;不強制介面實作&lt;/strong&gt;：註冊的物件可以不必實作特定介面。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;單純的容器&lt;/strong&gt;：主要功能就是作為物件的儲存庫。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不使用反射&lt;/strong&gt;：為避免效能開銷，它搭配一個 &lt;strong&gt;Installer（組合根）&lt;/strong&gt; 來進行物件的註冊。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-csharp" data-lang="csharp"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;// 這裡透過 static 達成全域存取&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;public&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;class&lt;/span&gt; &lt;span style="color:#75af00"&gt;ServiceLocator&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;private&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;static&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;readonly&lt;/span&gt; &lt;span style="color:#111"&gt;Dictionary&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#111"&gt;Type&lt;/span&gt;&lt;span style="color:#111"&gt;,&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;object&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;gt;&lt;/span&gt; &lt;span style="color:#111"&gt;instances&lt;/span&gt; &lt;span style="color:#111"&gt;=&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;new&lt;/span&gt; &lt;span style="color:#111"&gt;Dictionary&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#111"&gt;Type&lt;/span&gt;&lt;span style="color:#111"&gt;,&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;object&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;// 註冊服務&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;public&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;static&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;void&lt;/span&gt; &lt;span style="color:#111"&gt;Register&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#111"&gt;T&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;gt;(&lt;/span&gt;&lt;span style="color:#111"&gt;T&lt;/span&gt; &lt;span style="color:#111"&gt;instance&lt;/span&gt;&lt;span style="color:#111"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;instances&lt;/span&gt;&lt;span style="color:#111"&gt;[&lt;/span&gt;&lt;span style="color:#00a8c8"&gt;typeof&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#111"&gt;T&lt;/span&gt;&lt;span style="color:#111"&gt;)]&lt;/span&gt; &lt;span style="color:#111"&gt;=&lt;/span&gt; &lt;span style="color:#111"&gt;instance&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;// 尋找服務&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;public&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;static&lt;/span&gt; &lt;span style="color:#111"&gt;T&lt;/span&gt; &lt;span style="color:#111"&gt;Resolve&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#111"&gt;T&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;if&lt;/span&gt; &lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#111"&gt;instances&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;TryGetValue&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#00a8c8"&gt;typeof&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#111"&gt;T&lt;/span&gt;&lt;span style="color:#111"&gt;),&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;out&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;var&lt;/span&gt; &lt;span style="color:#111"&gt;instance&lt;/span&gt;&lt;span style="color:#111"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;return&lt;/span&gt; &lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#111"&gt;T&lt;/span&gt;&lt;span style="color:#111"&gt;)&lt;/span&gt;&lt;span style="color:#111"&gt;instance&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;throw&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;new&lt;/span&gt; &lt;span style="color:#111"&gt;Exception&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#d88200"&gt;$&amp;#34;Service of type {typeof(T)} is not registered.&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;// 釋放服務 (可選)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;public&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;static&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;void&lt;/span&gt; &lt;span style="color:#111"&gt;Release&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#111"&gt;T&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;if&lt;/span&gt; &lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#111"&gt;instances&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;ContainsKey&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#00a8c8"&gt;typeof&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#111"&gt;T&lt;/span&gt;&lt;span style="color:#111"&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;instances&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;Remove&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#00a8c8"&gt;typeof&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#111"&gt;T&lt;/span&gt;&lt;span style="color:#111"&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-csharp" data-lang="csharp"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;// 由 Installer 集中註冊物件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;public&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;class&lt;/span&gt; &lt;span style="color:#75af00"&gt;DemoBasicServiceLocatorsInstaller&lt;/span&gt; &lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#111"&gt;MonoBehaviour&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;public&lt;/span&gt; &lt;span style="color:#111"&gt;DemoBasicMoneyUI&lt;/span&gt; &lt;span style="color:#111"&gt;moneyUI&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;public&lt;/span&gt; &lt;span style="color:#111"&gt;MoneyType&lt;/span&gt; &lt;span style="color:#111"&gt;moneyType&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;public&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;int&lt;/span&gt; &lt;span style="color:#111"&gt;moneyValue&lt;/span&gt; &lt;span style="color:#111"&gt;=&lt;/span&gt; &lt;span style="color:#ae81ff"&gt;100&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;void&lt;/span&gt; &lt;span style="color:#111"&gt;Start&lt;/span&gt;&lt;span style="color:#111"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;switch&lt;/span&gt; &lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#111"&gt;moneyType&lt;/span&gt;&lt;span style="color:#111"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;case&lt;/span&gt; &lt;span style="color:#111"&gt;MoneyType&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;Real&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#111"&gt;ServiceLocator&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;Register&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#111"&gt;IMoneyFormatConverter&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;gt;(&lt;/span&gt;&lt;span style="color:#00a8c8"&gt;new&lt;/span&gt; &lt;span style="color:#111"&gt;RealMoneyFormatConverter&lt;/span&gt;&lt;span style="color:#111"&gt;());&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;break&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;case&lt;/span&gt; &lt;span style="color:#111"&gt;MoneyType&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;Coin&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#111"&gt;ServiceLocator&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;Register&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#111"&gt;IMoneyFormatConverter&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;gt;(&lt;/span&gt;&lt;span style="color:#00a8c8"&gt;new&lt;/span&gt; &lt;span style="color:#111"&gt;CoinMoneyFormatConverter&lt;/span&gt;&lt;span style="color:#111"&gt;());&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;break&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;default&lt;/span&gt;&lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;throw&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;new&lt;/span&gt; &lt;span style="color:#111"&gt;System&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;NotImplementedException&lt;/span&gt;&lt;span style="color:#111"&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;moneyUI&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;Show&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#111"&gt;moneyValue&lt;/span&gt;&lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-csharp" data-lang="csharp"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;// 在需要的地方從容器取得服務&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;public&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;class&lt;/span&gt; &lt;span style="color:#75af00"&gt;DemoBasicMoneyUI&lt;/span&gt; &lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#111"&gt;MonoBehaviour&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75af00"&gt; [SerializeField]&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;private&lt;/span&gt; &lt;span style="color:#111"&gt;TMP_Text&lt;/span&gt; &lt;span style="color:#111"&gt;text&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;private&lt;/span&gt; &lt;span style="color:#111"&gt;IMoneyFormatConverter&lt;/span&gt; &lt;span style="color:#111"&gt;moneyFormatConverter&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;public&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;void&lt;/span&gt; &lt;span style="color:#111"&gt;Show&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#00a8c8"&gt;int&lt;/span&gt; &lt;span style="color:#111"&gt;moneyValue&lt;/span&gt;&lt;span style="color:#111"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#75715e"&gt;// 透過 ??= 確保只在第一次使用時尋找服務&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;moneyFormatConverter&lt;/span&gt; &lt;span style="color:#111"&gt;??=&lt;/span&gt; &lt;span style="color:#111"&gt;ServiceLocator&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;Resolve&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#111"&gt;IMoneyFormatConverter&lt;/span&gt;&lt;span style="color:#111"&gt;&amp;gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;text&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;text&lt;/span&gt; &lt;span style="color:#111"&gt;=&lt;/span&gt; &lt;span style="color:#111"&gt;moneyFormatConverter&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;Convert&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt;&lt;span style="color:#111"&gt;moneyValue&lt;/span&gt;&lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Unity - Basic - Assembly Definition (Asmdef)</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---assembly-definition-asmdef/</link><pubDate>Mon, 19 Jun 2023 12:46:15 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---assembly-definition-asmdef/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Assembly Definition (asmdef)&lt;/strong&gt; 檔案是 Unity 用來組織和管理專案程式碼的工具。它能將你的腳本分組，形成多個獨立的「&lt;strong&gt;程式集 (Assembly)&lt;/strong&gt;」。&lt;/p&gt;
&lt;p&gt;在沒有使用 &lt;code&gt;asmdef&lt;/code&gt; 的情況下，Unity 會將所有腳本編譯成一個單一、龐大的 &lt;strong&gt;Assembly-CSharp.dll&lt;/strong&gt; 程式集。這會導致兩個主要問題：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;編譯時間長&lt;/strong&gt;：每次修改任何一個腳本，都必須重新編譯整個巨大的程式集，拖慢開發進度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;程式碼依賴混亂&lt;/strong&gt;：所有腳本彼此間都可以任意存取，使得依賴關係變得複雜且難以管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;asmdef&lt;/code&gt; 的核心價值就是為了解決這些問題。&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/Manual/ScriptCompilationAssemblyDefinitionFiles.html"&gt;Doc - Assembly definitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zhuanlan.zhihu.com/p/139090680"&gt;Unity中 .asmdef文件的作用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;透過 &lt;code&gt;asmdef&lt;/code&gt;，你可以將專案切分成邏輯上獨立的程式碼區塊，每個區塊都有自己的 &lt;code&gt;asmdef&lt;/code&gt; 檔案，這帶來三大優勢：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;大幅縮短編譯時間&lt;/strong&gt;
這是 &lt;code&gt;asmdef&lt;/code&gt; 最重要的優點。當你只修改了某個程式集的腳本時，Unity 只會重新編譯那個程式集，以及任何依賴它的程式集。沒有被影響的部分則不會被重新編譯，能顯著加快開發迭代的速度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;改善程式碼結構&lt;/strong&gt;
&lt;code&gt;asmdef&lt;/code&gt; 強制你明確定義程式集之間的依賴關係。一個程式集只能存取它所引用的程式碼，這能避免不必要的依賴，讓專案結構更清晰、更易於維護和重用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;增強程式碼封裝性&lt;/strong&gt;
你可以更好地控制程式碼的存取權限，防止內部函式被外部不相關的程式集隨意使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="package-與-asmdef-的關係"&gt;Package 與 Asmdef 的關係&lt;/h2&gt;
&lt;p&gt;Unity 的 &lt;strong&gt;Package Manager&lt;/strong&gt; 系統正是建立在 &lt;code&gt;asmdef&lt;/code&gt; 的基礎上。每個 Unity 套件都必須使用 &lt;code&gt;asmdef&lt;/code&gt; 來定義其程式集結構，確保套件內的程式碼與專案其他部分相互獨立，只透過明確的引用進行互動。&lt;/p&gt;
&lt;p&gt;這也是為什麼你在使用或開發 Unity 套件時，會看到每個功能模組都有其對應的 &lt;code&gt;asmdef&lt;/code&gt; 檔案。&lt;/p&gt;
&lt;h2 id="常見的結構runtime-與-editor"&gt;常見的結構：Runtime 與 Editor&lt;/h2&gt;
&lt;p&gt;在許多 Unity 專案和套件中，最常見的 &lt;code&gt;asmdef&lt;/code&gt; 結構是將程式碼區分為 &lt;strong&gt;Runtime&lt;/strong&gt; 和 &lt;strong&gt;Editor&lt;/strong&gt; 兩部分：&lt;/p&gt;</description></item><item><title>Unity - Editor - Scripted Importer</title><link>https://HoshikawaRyuukou.github.io/posts/unity---editor---scripted-importer/</link><pubDate>Sat, 27 May 2023 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---editor---scripted-importer/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;為 Unity 本身不支持的文件格式編寫自定義資源導入器，從而添加支持。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;⚠️無法處理已由 Unity 本身處理的文件擴展名。&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/Manual/ScriptedImporters.html"&gt;Scripted Importers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cnblogs.com/wildmelon/p/16087056.html"&gt;[Unity] 资源工作流程 - ScriptedImporter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="example"&gt;Example&lt;/h2&gt;
&lt;p&gt;這裡將 .lua 以 TextAsset&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-csharp" data-lang="csharp"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;using&lt;/span&gt; &lt;span style="color:#111"&gt;UnityEngine&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;using&lt;/span&gt; &lt;span style="color:#111"&gt;System.IO&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;using&lt;/span&gt; &lt;span style="color:#111"&gt;UnityEditor.AssetImporters&lt;/span&gt;&lt;span style="color:#111"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75af00"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75af00"&gt;[ScriptedImporter( 1, &amp;#34;lua&amp;#34; )]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#00a8c8"&gt;public&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;class&lt;/span&gt; &lt;span style="color:#75af00"&gt;LuaImporter&lt;/span&gt; &lt;span style="color:#111"&gt;:&lt;/span&gt; &lt;span style="color:#111"&gt;ScriptedImporter&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#00a8c8"&gt;public&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;override&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;void&lt;/span&gt; &lt;span style="color:#111"&gt;OnImportAsset&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt; &lt;span style="color:#111"&gt;AssetImportContext&lt;/span&gt; &lt;span style="color:#111"&gt;ctx&lt;/span&gt; &lt;span style="color:#111"&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;TextAsset&lt;/span&gt; &lt;span style="color:#111"&gt;subAsset&lt;/span&gt; &lt;span style="color:#111"&gt;=&lt;/span&gt; &lt;span style="color:#00a8c8"&gt;new&lt;/span&gt; &lt;span style="color:#111"&gt;TextAsset&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt; &lt;span style="color:#111"&gt;File&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;ReadAllText&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt; &lt;span style="color:#111"&gt;ctx&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;assetPath&lt;/span&gt; &lt;span style="color:#111"&gt;)&lt;/span&gt; &lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;ctx&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;AddObjectToAsset&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt; &lt;span style="color:#d88200"&gt;&amp;#34;text&amp;#34;&lt;/span&gt;&lt;span style="color:#111"&gt;,&lt;/span&gt; &lt;span style="color:#111"&gt;subAsset&lt;/span&gt; &lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;ctx&lt;/span&gt;&lt;span style="color:#111"&gt;.&lt;/span&gt;&lt;span style="color:#111"&gt;SetMainObject&lt;/span&gt;&lt;span style="color:#111"&gt;(&lt;/span&gt; &lt;span style="color:#111"&gt;subAsset&lt;/span&gt; &lt;span style="color:#111"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#111"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>Unity - Basic - DontDestroyOnLoad</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---dontdestroyonload/</link><pubDate>Mon, 20 Mar 2023 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---dontdestroyonload/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;「在尚未深入依賴注入框架前，我常使用它來管理跨場景的資源。」&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;「當然，在小專案中，它仍是一個相當方便實用的工具。」&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html"&gt;Unity - Scripting API: Object.DontDestroyOnLoad&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;DontDestroyOnLoad&lt;/code&gt;&lt;/strong&gt; 標籤能確保物件在場景切換時不會被銷毀，主要應用於以下三種情境：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;全域管理器&lt;/strong&gt;：此類物件需要貫穿遊戲始終，例如&lt;strong&gt;音效管理器&lt;/strong&gt;、&lt;strong&gt;遊戲設定&lt;/strong&gt;或&lt;strong&gt;玩家數據&lt;/strong&gt;。標記為 &lt;code&gt;DontDestroyOnLoad&lt;/code&gt; 後，這些管理器便能持續發揮功能並保留數據，確保遊戲體驗不間斷。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持久性資料&lt;/strong&gt;：當有多個場景需要共享同一份資料時，例如&lt;strong&gt;玩家的遊戲進度&lt;/strong&gt;或&lt;strong&gt;全域配置設定&lt;/strong&gt;，可以將儲存這些資料的物件設為 &lt;code&gt;DontDestroyOnLoad&lt;/code&gt;，確保不同場景都能存取並更新。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;常駐物件&lt;/strong&gt;：某些物件（如&lt;strong&gt;遊戲狀態面板&lt;/strong&gt;、&lt;strong&gt;計時器&lt;/strong&gt;或&lt;strong&gt;得分顯示&lt;/strong&gt;）需要持續顯示。透過 &lt;code&gt;DontDestroyOnLoad&lt;/code&gt;，這些物件在場景切換時不會消失，能保持持續更新。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="notice"&gt;Notice&lt;/h2&gt;
&lt;p&gt;雖然 &lt;code&gt;DontDestroyOnLoad&lt;/code&gt; 很實用，但使用不當會引發以下問題：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;記憶體洩漏&lt;/strong&gt;：如果一個 &lt;code&gt;DontDestroyOnLoad&lt;/code&gt; 物件在後續場景中不再需要，但沒有手動銷毀，它會一直存在於記憶體中。這會造成&lt;strong&gt;記憶體佔用增加&lt;/strong&gt;，導致遊戲效能下降，甚至出現記憶體洩漏。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;場景耦合&lt;/strong&gt;：&lt;code&gt;DontDestroyOnLoad&lt;/code&gt; 會打破 Unity 場景應有的&lt;strong&gt;獨立性&lt;/strong&gt;。當場景之間存在大量共享物件時，會增加它們之間的依賴性（&lt;strong&gt;高耦合&lt;/strong&gt;），使得程式碼難以管理、維護和測試。&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Software Design - Architecture - Modularization</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---architecture---modularization/</link><pubDate>Wed, 22 Feb 2023 20:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---architecture---modularization/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;對於軟體模組化，我個人傾向採用漸進式的策略。不同的專案規模，從單一功能的小型專案到多功能的中型專案，各自有其適合的模組化方案。&lt;/p&gt;
&lt;p&gt;在深入探討之前，強烈建議先參考以下連結中的圖表，這對於理解 Clean Architecture 的實際應用細節至關重要：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CA 原著 Chapter 34 - The missing chapter - Actual implementation details of an architecture&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serodriguez68/clean-architecture/blob/master/part-6-details.md#chapter-34---the-missing-chapter---actual-implementation-details-of-an-architecture"&gt;連結 34章摘要心得&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;h3 id="clean-architecture-模組化"&gt;Clean Architecture 模組化&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://proandroiddev.com/multiple-ways-of-defining-clean-architecture-layers-bbb70afa5d4a"&gt;Multiple ways of defining Clean Architecture layers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.ttulka.com/package-by-component-with-clean-modules-in-java/"&gt;Package by Component with Clean Modules in Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learning-notes.mistermicheels.com/architecture-design/reference-architectures/package-by-feature-or-component/"&gt;Package by feature or component&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="垂直切片架構-vertical-slice"&gt;垂直切片架構 (Vertical Slice)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codeopinion.com/restructuring-to-a-vertical-slice-architecture/?fbclid=IwAR0Ek5KW6_MWQ9K5Rxv6P5BpqatHs5tsjfHZ_B9GZmrkd3YaBoH-HHuNZE4"&gt;Restructuring to a Vertical Slice Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=L2Wnq0ChAIA"&gt;Vertical Slice Architecture, not Layers!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="模組化單體架構-modular-monolith"&gt;模組化單體架構 (Modular Monolith)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.kamilgrzybek.com/design/modular-monolith-primer/"&gt;Modular Monolith architecture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="thinking"&gt;Thinking&lt;/h2&gt;
&lt;p&gt;以下我將以一個新的 Unity 專案為例，說明我的模組化實踐過程。&lt;/p&gt;</description></item><item><title>Unity - Basic - Misc</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---misc/</link><pubDate>Mon, 20 Feb 2023 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---misc/</guid><description>&lt;h2 id="camera"&gt;Camera&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pressstart.vip/tutorials/2018/06/6/37/understanding-orthographic-size.html"&gt;Understanding Orthographic Size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.lujun.co/2019/06/02/unity_camera_clear_flags/#"&gt;探寻 Unity Camera 属性之 Clear Flags&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://3dunity.org/game-create-lesson/clicker-game/mobile-adjustment/"&gt;Unityの画面のアスペクト比と解像度を自動変換　全スマホ・複数解像度に対応させる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="screen"&gt;Screen&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gamedevbeginner.com/how-to-capture-the-screen-in-unity-3-methods/"&gt;How to capture the screen in Unity (3 methods)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>Software Design - Architecture - Clean Architecture</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---architecture---clean-architecture/</link><pubDate>Sat, 04 Feb 2023 20:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---architecture---clean-architecture/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;談到 Clean Architecture (CA)，我們總會先看到 Uncle Bob 的這張經典分層圖：&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html"&gt;
 &lt;img src="https://blog.cleancoder.com/uncle-bob/images/2012-08-13-the-clean-architecture/CleanArchitecture.jpg" alt="CA Layers"&gt;

&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文不會逐一詳解 CA 的所有規則與細節，而是更側重於分享它如何改變了我的設計思維，以及在實際開發中的一些經驗與權衡。畢竟，對於追求可擴展性的專案來說，系統架構是確保應用程式能夠持續健康演化的關鍵。&lt;/p&gt;
&lt;p&gt;如果想深入了解 CA 的完整概念，文末的參考資料整理了相當豐富的連結。&lt;/p&gt;
&lt;p&gt;Clean Architecture 並非銀彈，導入它需要付出額外的設計與分層成本。但它所倡導的&lt;strong&gt;關注點分離&lt;/strong&gt;、&lt;strong&gt;單向依賴&lt;/strong&gt;和&lt;strong&gt;以業務為核心&lt;/strong&gt;的理念，即使不完全照搬，也能為我們在設計任何規模的系統時，提供一個清晰且強大的思考框架。&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;p&gt;「這份清單是我從數百篇文章中精選而來，每一篇都相當有價值，建議深入閱讀。」&lt;/p&gt;
&lt;h3 id="basic"&gt;Basic&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://atomiv.org/knowledgebase/software-architecture/clean-architecture"&gt;Software Architecture - Clean Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://learning-notes.mistermicheels.com/architecture-design/reference-architectures/clean-architecture/"&gt;Clean Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pusher.com/tutorials/clean-architecture-introduction/#adapters"&gt;Clean architecture for the rest of us&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serodriguez68/clean-architecture"&gt;GitHub - serodriguez68/clean-architecture: A detailed summary of Clean Architecture by Robert C Martin (Uncle Bob)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/t2-kob/items/02a76572693130c9a66e"&gt;Clean Architecture の勘所は『鎖国』だ。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teddy-chen-tw.blogspot.com/2019/12/blog-post_10.html"&gt;搞笑談軟工: 領域邏輯與應用邏輯&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="practice"&gt;Practice&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.wonderpla.net/entry/2021/02/18/121932"&gt;Unityを利用した大規模なゲーム開発にクリーンアーキテクチャを採用した話&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cobeisfresh.com/blog/getting-started-with-clean-architecture-for-android-part-1"&gt;Getting Started With Clean Architecture for Android [Part 1]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/bespoyasov/clean-architecture-on-frontend-4311"&gt;Clean Architecture on Frontend&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="discussion"&gt;Discussion&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;以下參考資料著重於觀念釐清（可能會帶有較重的教條色彩），以及初期探索時容易踩坑的地方與相關討論串。&lt;/em&gt;&lt;/p&gt;</description></item><item><title>Software Design - Pattern - Guard Clauses</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---guard-clauses/</link><pubDate>Tue, 10 Jan 2023 21:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---guard-clauses/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;符合 Fail Fast 原則，驗證條件並在不滿足條件時立即停止執行。&lt;/li&gt;
&lt;li&gt;增加可讀性(更扁平)，減少了巢狀判斷。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://deviq.com/design-patterns/guard-clause"&gt;Guard Clause | DevIQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://teddy-chen-tw.blogspot.com/2012/05/implementation-patterns-guard-clause.html"&gt;Implementation Patterns: Guard Clause&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codeopinion.com/stop-using-trivial-guard-clauses-try-this-instead/"&gt;Stop using trivial Guard Clauses! Try this instead&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="example"&gt;Example&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://deviq.com/design-patterns/guard-clause"&gt;Guard Clause | DevIQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="extras"&gt;Extras&lt;/h2&gt;
&lt;h3 id="guard-class"&gt;Guard Class&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ardalis/GuardClauses"&gt;GitHub - ardalis/GuardClauses&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;將通用的保護子句封裝在一個專門的類是一種很好的做法，可重用邏輯並編寫更具可讀性的保護子句。&lt;/p&gt;
&lt;h3 id="value-object"&gt;Value Object&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codeopinion.com/stop-using-trivial-guard-clauses-try-this-instead/"&gt;Stop using trivial Guard Clauses! Try this instead&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文章作者避免瑣碎 Guard 的方式，是使用 Value Object，來避免域接受到無效參數。(YT評論區也建議閱讀，有許多不錯的討論)&lt;/p&gt;
&lt;p&gt;但不可否認的 Guard Clause 作法在大多情況下是有益的。&lt;/p&gt;</description></item><item><title>Software Design - Pattern - Data Transfer Object (DTO)</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---data-transfer-object-dto/</link><pubDate>Sun, 11 Dec 2022 21:56:18 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---data-transfer-object-dto/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;DTO，即數據傳輸物件，是在系統各層（如 API 層與業務邏輯層）或不同服務之間傳遞資料的專用物件。它像一個純粹的「數據包裹」，只負責承載數據，不包含任何業務邏輯。&lt;/p&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/en-us/archive/msdn-magazine/2009/august/pros-and-cons-of-data-transfer-objects"&gt;Cutting Edge - Pros and Cons of Data Transfer Objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://examples.javacodegeeks.com/the-dto-data-transfer-object/"&gt;The DTO (Data Transfer Object)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aspnetboilerplate.com/Pages/Documents/Data-Transfer-Objects"&gt;Data Transfer Objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/52812337/clean-architecture-why-not-using-the-entity-as-request-model-of-the-use-case"&gt;Clean Architecture : why not using the entity as request model of the use case (interactor)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/39397147/difference-between-entity-and-dto"&gt;Difference between Entity and DTO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="advantages"&gt;Advantages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;建立清晰邊界，降低耦合&lt;/strong&gt;：DTO 作為公開的數據契約，讓內部資料庫結構 (Entity) 可以自由修改，而不直接影響外部的客戶端或服務。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;精準控制數據，提升安全性與&lt;/strong&gt;：只暴露客戶端真正需要的欄位，避免洩漏如密碼雜湊、內部 ID 等敏感或不相關的實作細節。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;優化傳輸效率&lt;/strong&gt;：可以匯集多個來源的資料於一身，或只傳送部分欄位，以此減少網路請求次數與數據傳輸量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;簡化序列化&lt;/strong&gt;：因為 DTO 是單純的數據容器，不含複雜的業務邏輯或循環引用，所以能輕易地被序列化為 JSON 或 XML 等格式，在網路上順利傳輸。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="trade-off"&gt;Trade-off&lt;/h2&gt;
&lt;p&gt;需要額外定義 DTO 類別與轉換邏輯，增加了程式碼量。在極簡單的應用中可能顯得過度設計。&lt;/p&gt;</description></item><item><title>Software Design - Pattern - Model View Presenter (MVP)</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---model-view-presenter-mvp/</link><pubDate>Sat, 10 Dec 2022 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---model-view-presenter-mvp/</guid><description>&lt;h2 id="quick-chat"&gt;Quick Chat&lt;/h2&gt;
&lt;p&gt;在 Unity 開發中，MVP（Model-View-Presenter）是我最常用的架構模式。相比之下，MVC（Model-View-Controller）在實作上常有模糊地帶，Controller 容易與 View 過度耦合；而 MVVM（Model-View-ViewModel）則仰賴 Data Binding 機制的支援，會限制 View 的寫法與彈性。&lt;/p&gt;
&lt;p&gt;MVP 的概念相對純粹，能清楚劃分各層的責任。在「關注點分離」（Separation of Concerns）的原則下，MVP 的構成如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Model&lt;/strong&gt;：負責資料處理與業務邏輯，不涉及畫面呈現，專注於商業規則。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;View&lt;/strong&gt;：負責 UI 與使用者互動。在理想情況下，View 是「被動的」，只根據 Presenter 指令更新畫面，並將使用者操作回報給 Presenter。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Presenter&lt;/strong&gt;：作為 View 與 Model 的中介者，從 Model 取得資料並整理後交給 View 顯示；同時處理來自 View 的事件並驅動 Model。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="guide"&gt;Guide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/livoras/blog/issues/11"&gt;界面之下：还原真实的MV*模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://juejin.cn/post/6901200799242649607"&gt;正确认识 MVC/MVP/MVVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://juejin.cn/post/6998093259893407757#comment"&gt;站在思想层面看MVX架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pragmaticcoding.ca/javafx/Frameworks/"&gt;Unravelling MVC, MVP and MVVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://annulusgames-lab.blogspot.com/2022/12/unity-ui-mvrp.html"&gt;【Unity】MV(R)Pパターンのすすめ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="dependency"&gt;Dependency&lt;/h2&gt;
&lt;p&gt;在 MVP 模式中，Presenter 與 View 的互動方式主要有兩種，其核心差異在於「依賴方向」。&lt;/p&gt;
&lt;h3 id="1-view-依賴-presenter-supervising-controller"&gt;1. View 依賴 Presenter (Supervising Controller)&lt;/h3&gt;
&lt;p&gt;在這種做法中，View 會持有 Presenter 的引用。當發生使用者操作（如按鈕點擊），View 直接呼叫 Presenter 的方法處理。&lt;/p&gt;</description></item><item><title>Assets</title><link>https://HoshikawaRyuukou.github.io/posts/assets/</link><pubDate>Tue, 22 Nov 2022 10:00:00 +0800</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/assets/</guid><description>&lt;h2 id="audio"&gt;Audio&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://maou.audio/"&gt;魔王魂&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://soundeffect-lab.info/"&gt;効果音ラボ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dova-s.jp/"&gt;フリーBGM（音楽素材）無料ダウンロード｜DOVA-SYNDROME&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://taira-komori.jpn.org/freesound.html"&gt;フリー効果音素材・無料効果音&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="color"&gt;Color&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://coolors.co/413b5e-fcaa67-b0413e"&gt;Coolors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.palettable.io/516ABE-FFFFFF-FFD600-413B5E"&gt;Palettable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="feature-graphics"&gt;Feature Graphics&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hotpot.ai/templates/google-play-feature-graphic"&gt;Google Play Feature Graphics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="font"&gt;Font&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mrmad.com.tw/tag/%E4%B8%AD%E6%96%87%E5%85%8D%E8%B2%BB%E5%AD%97%E9%AB%94"&gt;中文免費字體&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fonts.google.com/"&gt;Google Fonts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forum.gamer.com.tw/C.php?bsn=60076&amp;amp;snA=3906436"&gt;2022/0113更新# 36個合法免費高品質字體&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fontget.com/"&gt;fontget&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://seed.line.me/index_tw.html"&gt;LINE Seed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="icon"&gt;Icon&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://icooon-mono.com/"&gt;ICOOON MONO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://iconmonstr.com/"&gt;iconmonstr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.flaticon.com/"&gt;Flaticon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://icon.kitchen"&gt;IconKitchen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://game-icons.net/"&gt;Game-icons.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="image"&gt;Image&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.irasutoya.com/"&gt;かわいいフリー素材集 いらすとや&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://unsplash.com/developers"&gt;Unsplash Image API | Free HD Photo API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://picsum.photos/"&gt;Lorem Picsum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://photosku.com/"&gt;Photosku&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://techmoon.xyz/free-img/"&gt;2023 熱門 47 個可商用無版權免費圖庫懶人包（圖片、圖示、圖標、素材、背景）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sozaino.site/"&gt;OKUMONO | フリーイラスト素材サイト。VTuber・配信のサムネイルや画面に。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="textures"&gt;Textures&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://polyhaven.com/"&gt;Poly Haven&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="misc"&gt;Misc&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://itch.io/game-assets"&gt;itch.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kenney.nl/assets"&gt;Kenney&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opengameart.org/"&gt;Opengameart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item></channel></rss>