<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 識之箱庭</title><link>https://HoshikawaRyuukou.github.io/posts/</link><description>Recent content in Posts on 識之箱庭</description><generator>Hugo</generator><language>zh-tw</language><copyright>HoshikawaRyuukou</copyright><lastBuildDate>Mon, 30 Jun 2025 21:05:00 +0000</lastBuildDate><atom:link href="https://HoshikawaRyuukou.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Software Design - Architecture - Slot Game Client</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---architecture---slot-game-client/</link><pubDate>Mon, 30 Jun 2025 21:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---architecture---slot-game-client/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;blockquote>
&lt;p>前端開發時，「狀態管理」一直是個大哉問。&lt;/p>&lt;/blockquote>
&lt;p>本次的應用是 &lt;strong>Slot Game&lt;/strong>，這類應用強調「表現層細節」，所以對於狀態的控制不像一般資料應用一樣單純，需要處理許多細部和即時的變化。&lt;/p>
&lt;h3 id="狀態管理挑戰">狀態管理挑戰&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>響應式 data-binding 限制 :&lt;/p>
&lt;ul>
&lt;li>若完全依賴響應式 data-binding，容易產生太多「中間態」(例如動畫進行中、結果待顯示、部分組件已經觸發&amp;hellip;等)。&lt;/li>
&lt;li>這樣會造成 state 爆炸、難以追蹤維護。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>命令式流程控制的必要性 :&lt;/p>
&lt;ul>
&lt;li>部分場景下，直接用命令式（imperative）流程更有效率。&lt;/li>
&lt;li>多組件聯動時的「動畫序列控制」。&lt;/li>
&lt;li>一連串的 user action/遊戲事件，需明確依序觸發。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="-技術棧一覽">⚙️ 技術棧一覽&lt;/h3>
&lt;ul>
&lt;li>UniTask (異步)&lt;/li>
&lt;li>R3 (Rx，UniRx 後繼者)&lt;/li>
&lt;li>VContainer (依賴注入)&lt;/li>
&lt;li>LitMotion (Tween)&lt;/li>
&lt;li>YooAsset (資源管理)&lt;/li>
&lt;li>Newtonsoft Json (Json 解析)&lt;/li>
&lt;li>Alchemy (編輯器擴充)&lt;/li>
&lt;/ul>
&lt;h2 id="專案結構">專案結構&lt;/h2>
&lt;h3 id="modules-主架構">Modules 主架構&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>project-root/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── _Debug/ &lt;span style="color:#75715e"># 測試或實驗用模組&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── App/ &lt;span style="color:#75715e"># 啟動點與業務邏輯總控&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── GameAPI/ &lt;span style="color:#75715e"># 遊戲 API 定義&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── GameRunner/ &lt;span style="color:#75715e"># 遊戲平台通用組件 (純 UIComponent)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── GameStage/ &lt;span style="color:#75715e"># 遊戲表演組件 (純 UIComponent)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── Shared/ &lt;span style="color:#75715e"># 共用模組&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>App：負責組合、調度各個模組，等於是專案的大腦。&lt;/li>
&lt;li>GameAPI：只放介面定義，跨模組通訊與擴充。&lt;/li>
&lt;li>GameRunner / GameStage：都是純 UIComponent (基本都是 Mono)。&lt;/li>
&lt;li>Shared：共用邏輯、工具類、資料結構都放這裡。&lt;/li>
&lt;li>_Debug：僅用於測試、debug，正式版本不打包。&lt;/li>
&lt;/ul>
&lt;h3 id="module-模組以單一模組為例">Module 模組（以單一模組為例）&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>module-root/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── Res/ &lt;span style="color:#75715e"># 模組獨立資源&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── Scripts/ &lt;span style="color:#75715e"># 腳本程式碼&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── Editor/ &lt;span style="color:#75715e"># 編輯器相關&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── Runtime/ &lt;span style="color:#75715e"># 執行時相關&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Res：模組內專屬資源包。&lt;/li>
&lt;li>Scripts/Editor：編輯器工具。&lt;/li>
&lt;li>Scripts/Runtime：模組實際邏輯，遊戲執行時會用到的部分。&lt;/li>
&lt;/ul>
&lt;h3 id="app-runtime運行時架構">App-Runtime（運行時架構）&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>App-Runtime-root/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── Configs/ &lt;span style="color:#75715e"># 配置與定義&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── Services/ &lt;span style="color:#75715e"># 封裝各種業務操作&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── Presenters/ &lt;span style="color:#75715e"># 控制流程、狀態綁定&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── Stores/ &lt;span style="color:#75715e"># 狀態管理&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Configs：所有定義類、配置文件，便於集中管理。&lt;/li>
&lt;li>Services：將業務操作進行封裝，利於重用及維護。&lt;/li>
&lt;li>Presenters：類似 MVP Pattern 的 Presenter，專注於流程控制和資料流。&lt;/li>
&lt;li>Stores：專責狀態儲存和監聽，確保資料一致性。&lt;/li>
&lt;/ul>
&lt;h2 id="實作體悟-1響應式與命令式">實作體悟 1：響應式與命令式&lt;/h2>
&lt;h3 id="響應式的場合--當操作與狀態變化是多對多關係">響應式的場合 : 當操作與狀態變化是多對多關係&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>一個操作觸發多處改變（One-to-Many updates）&lt;br>
例如：用戶點擊「開始」後，同時啟動動畫、鎖定按鈕、重置分數、播放音效。&lt;/p></description></item><item><title>AI - Stable diffusion - Favorite Prompts</title><link>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---favorite-prompts/</link><pubDate>Fri, 13 Jun 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---favorite-prompts/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;ul>
&lt;li>⚠️ 不同的模型對提示詞的理解會有所不同，選對模型才能產生最好的效果。&lt;/li>
&lt;li>⚠️ 有時提示詞衝突會導致畫面崩壞無法收斂。&lt;/li>
&lt;li>⚠️ 盡量不讓權重過 1.5。&lt;/li>
&lt;/ul>
&lt;h2 id="prompts---artists">Prompts - Artists&lt;/h2>
&lt;ul>
&lt;li>權重超過 0.6 比較穩定(但有些太高會有點 overfitting)&lt;/li>
&lt;li>增加一些插畫風格 : rella&lt;/li>
&lt;/ul>
&lt;h2 id="prompts---positive">Prompts - Positive&lt;/h2>
&lt;h3 id="body">Body&lt;/h3>
&lt;ul>
&lt;li>年齡向上調整 : aged up&lt;/li>
&lt;li>高頭身 : long legs, tall female&lt;/li>
&lt;li>臉完全朝上 : face up&lt;/li>
&lt;li>往上看而臉被順勢帶起 : looking up&lt;/li>
&lt;/ul>
&lt;h2 id="prompts---negative">Prompts - Negative&lt;/h2>
&lt;h3 id="accessories">Accessories&lt;/h3>
&lt;ul>
&lt;li>用於移除一切頭部裝飾 : headwear&lt;/li>
&lt;/ul></description></item><item><title>AI - Stable diffusion - Inpainting</title><link>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---inpainting/</link><pubDate>Thu, 12 Jun 2025 20:13:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---inpainting/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>目前並未特別使用進階修圖技巧。若圖片瑕疵可透過簡單塗色與描邊處理，即會嘗試修復。&lt;/p>
&lt;p>若瑕疵較嚴重，則多半直接放棄並重新生成 —— 通常下一張會更好。&lt;/p>
&lt;h2 id="modification">Modification&lt;/h2>
&lt;ul>
&lt;li>圖片先送入 &lt;code>img2img&lt;/code>。&lt;/li>
&lt;li>簡單處理：使用 &lt;code>Inpaint sketch&lt;/code>（注意不要在 sketch 模式下直接生成）。&lt;/li>
&lt;li>複雜處理：使用 &lt;code>photopea-embed&lt;/code> 進行手動遮罩或編輯。&lt;/li>
&lt;li>完成後再送回 &lt;code>Inpaint&lt;/code> 重新生成。&lt;/li>
&lt;/ul>
&lt;h2 id="generation">Generation&lt;/h2>
&lt;ul>
&lt;li>採樣方法（Sampling method）：&lt;code>DPM++ 2M&lt;/code>&lt;/li>
&lt;li>時間表類型（Schedule type）：&lt;code>Karras&lt;/code>&lt;/li>
&lt;li>去雜強度（Denoising strength）建議範圍：
&lt;ul>
&lt;li>&lt;code>0.2 ~ 0.3&lt;/code>：保留原圖整體色彩結構，僅微調瑕疵與過渡區域。&lt;/li>
&lt;li>&lt;code>0.3 ~ 0.5&lt;/code>：適度改變結構與細節，適合嘗試新的構圖或調整 seed 取得更好結果。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Art - Design - Note</title><link>https://HoshikawaRyuukou.github.io/posts/art---design---note/</link><pubDate>Wed, 04 Jun 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/art---design---note/</guid><description>&lt;h2 id="aesthetic">Aesthetic&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://space.bilibili.com/4971601/lists?sid=5379154">合集·基础审美三部曲&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="conceptual-design">Conceptual Design&lt;/h2>
&lt;p>概念設計是用來探索、表達和傳達創作初期核心想法的視覺化過程。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1aVECzMEqS">概念设计师Leo Li：概念设计最大误区：刚入门就一味追求风格 | 齿轮视界&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Unity - Practice - Effects</title><link>https://HoshikawaRyuukou.github.io/posts/unity---practice---effects/</link><pubDate>Wed, 28 May 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---practice---effects/</guid><description>&lt;h2 id="碎屏">碎屏&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1534y167yG">【unity教程】如何制作屏幕破碎效果&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1yg411A7uX">【Unity】碎屏过场动画&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/opus/668685275140980753">[笔记]屏幕破碎特效&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Database - Note</title><link>https://HoshikawaRyuukou.github.io/posts/database---note/</link><pubDate>Fri, 23 May 2025 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/database---note/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=IUUpxfa1SSw">为什么关系数据库的挑战者都没有好下场【让编程再次伟大#25】&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Network - Note</title><link>https://HoshikawaRyuukou.github.io/posts/network---note/</link><pubDate>Sat, 17 May 2025 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/network---note/</guid><description>&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=1NqBQwF4BYM">【白话科普】域名？网址？原来域名是这么个玩意啊！&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=ZqWb5nNzTf8">DNS工作原理 | 什么是DNS 它如何工作&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=m73oA0_ptxc">CDN是什么 | CDN的工作机制&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1mj421d7VE">数字签名和CA数字证书的核心原理和作用&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1KY411t75D">VPN概念，技术原理和误区&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1SZ4y1z7wT">哈希究竟代表什么？哈希表和哈希函数的核心原理&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1Yx4y147tg">交换机的核心工作原理 | 集线器、2层交换机和3层交换机的主要区别&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=tVLIRCJuFW8">你管这破玩意叫网络？ 从设计者的思考角度出发理解网络，合理、靠谱！&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=kjfPAC16k18">【API技术核心原理】REST | GraphQL | gRPC | tRPC&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>AI - Stable diffusion - Favorite Models</title><link>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---favorite-models/</link><pubDate>Fri, 16 May 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---favorite-models/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;ul>
&lt;li>sd 1.5 系列基本上不使用了&lt;/li>
&lt;li>Illustrious 是目前的使用主力&lt;/li>
&lt;/ul>
&lt;h2 id="checkpoints">Checkpoints&lt;/h2>
&lt;p>底模基本分成兩種&lt;/p>
&lt;ul>
&lt;li>無風格模型 : lora 會很大程度影響出圖風格&lt;/li>
&lt;li>風格模型 : 模型本身有一定程度的風格，常用於抵消一些有瑕疵的 lora&lt;/li>
&lt;/ul>
&lt;h3 id="wai-nsfw-illustrious-sdxl">WAI-NSFW-illustrious-SDXL&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://civitai.com/models/827184?modelVersionId=1490781">link&lt;/a>&lt;/li>
&lt;li>無風格模型&lt;/li>
&lt;li>目前使用版本 14&lt;/li>
&lt;li>出圖速度較快，適合搭配優良 lora 使用&lt;/li>
&lt;/ul>
&lt;h3 id="steincustom">SteinCustom&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://civitai.com/models/1245022?modelVersionId=1669006">link&lt;/a>&lt;/li>
&lt;li>無風格模型，但能一定程度約束 lora 風格&lt;/li>
&lt;li>目前使用版本 6&lt;/li>
&lt;li>實測版本 7 風格有變得偏 pony 不太喜歡&lt;/li>
&lt;li>實測版本 8 光影效果表現不好&lt;/li>
&lt;li>&lt;strong>年齡&lt;/strong> 控制相對有效 prompts (&lt;code>age up, meature female&lt;/code>)&lt;/li>
&lt;/ul>
&lt;h2 id="lora---styles">Lora - Styles&lt;/h2>
&lt;ul>
&lt;li>大部分的底模都有人物偏萌系/幼態的問題&lt;/li>
&lt;/ul>
&lt;h3 id="solo-leveling-anime-style">Solo Leveling Anime Style&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://civitai.com/models/1137411/solo-leveling-anime-style">link&lt;/a>&lt;/li>
&lt;li>增強 臉部銳利度&lt;/li>
&lt;li>增強 較長的體態&lt;/li>
&lt;li>增強 平塗效果&lt;/li>
&lt;li>⚠️頸部附近的 hard shadow 有時會過於明顯，需調控 prompts (&lt;code>anime coloring&lt;/code>) 權重&lt;/li>
&lt;/ul>
&lt;h3 id="violet-evergarden-anime-style">Violet Evergarden Anime Style&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://civitai.com/models/1334756/violet-evergarden-anime-style">link&lt;/a>&lt;/li>
&lt;li>增強 較小的眼睛&lt;/li>
&lt;li>增強 平塗效果&lt;/li>
&lt;/ul>
&lt;h2 id="prompts---artists">Prompts - Artists&lt;/h2>
&lt;ul>
&lt;li>權重超過 0.6 比較穩定(但有些太高會有點 overfitting)&lt;/li>
&lt;li>rella : 增加一些插畫風格&lt;/li>
&lt;/ul>
&lt;h2 id="prompts---positive">Prompts - Positive&lt;/h2>
&lt;ul>
&lt;li>looking up : 往上看而臉被順勢帶起&lt;/li>
&lt;li>face up : 用於臉完全朝上&lt;/li>
&lt;/ul>
&lt;h2 id="prompts---negative">Prompts - Negative&lt;/h2>
&lt;ul>
&lt;li>headwear : 用於移除一切頭部裝飾&lt;/li>
&lt;/ul></description></item><item><title>Documents - Markdown</title><link>https://HoshikawaRyuukou.github.io/posts/documents---markdown/</link><pubDate>Fri, 16 May 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/documents---markdown/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>Markdown 的優勢主要在於它的簡單易學和易於閱讀。&lt;/p>
&lt;p>使用 Markdown 寫作，你可以用幾個簡單的符號來標記文字格式，不用像使用傳統文書軟體那樣需要點擊許多按鈕或選單。即使是原始碼狀態的 Markdown 文件，也非常清晰易讀。&lt;/p>
&lt;p>此外，Markdown 檔案是純文字格式，這讓它具有極佳的可攜性和兼容性，可以在幾乎所有裝置和作業系統上開啟和編輯，而且不容易因為軟體版本不同而產生格式跑掉的問題。&lt;/p>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one">Markdown All in One&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=bierner.markdown-preview-github-styles">Markdown Preview Github Styling&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="playground">Playground&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://dillinger.io/">Online Markdown Editor - Dillinger, the Last Markdown Editor ever.&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="extras">Extras&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/microsoft/markitdown">microsoft/markitdown&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Unity - Package - Spine SDK</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package---spine-sdk/</link><pubDate>Tue, 13 May 2025 22:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package---spine-sdk/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://zh.esotericsoftware.com/spine-unity-download#spine-unity">spine-unity 下载&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zh.esotericsoftware.com/spine-unity">spine-unity 运行时文档&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zh.esotericsoftware.com/spine-unity-assets">spine-unity 资产&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zh.esotericsoftware.com/spine-unity-faq">spine-unity 常见问题(FAQ)&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="notices">Notices&lt;/h2>
&lt;h3 id="version">Version&lt;/h3>
&lt;ul>
&lt;li>Spine 3.8 並未提供 github url，需用 .unitypackage / 自行準備 git url&lt;/li>
&lt;li>運行時只能載入與 Spine 編輯器版本一致的二進位匯出檔案(新舊版本應執行重導出)&lt;/li>
&lt;/ul>
&lt;h3 id="asset">Asset&lt;/h3>
&lt;ul>
&lt;li>unity 無法載入部分副檔名需修改
&lt;ul>
&lt;li>.skel -&amp;gt; .skel.bytes&lt;/li>
&lt;li>.atlas -&amp;gt; .atlas.txt&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>json 匯出檔案更穩定，有更大可能與未來版本相容&lt;/li>
&lt;/ul>
&lt;h3 id="performance">Performance&lt;/h3>
&lt;ul>
&lt;li>Unity 在多 material /多子網格、排序和動態合批(batching)方面有個老毛病，如果使用多 materials 的 skeleton 有多個副本，Unity 的動態合批系統會嘗試將相似的 materials 合批， 但它在有多個相似 materials 的子網格的合批過程，Objectske 中加入一個 Sorting Group 元件。&lt;/li>
&lt;li>不過若你的 skeleton 只使用一種 texture 和 material，Unity 原生的合批系統性能仍是更好的。&lt;/li>
&lt;/ul></description></item><item><title>AI - LLM - Gemini</title><link>https://HoshikawaRyuukou.github.io/posts/ai---llm---gemini/</link><pubDate>Thu, 08 May 2025 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---llm---gemini/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>😊 免費方案對於輕度開發綽綽有餘&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=3jdhFHgvxpg">Gemini新手教学&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ai.google.dev/gemini-api/docs?hl=zh-tw">Gemini API  |  Google AI for Developers&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ai.google.dev/gemini-api/docs/pricing?hl=zh-tw&amp;amp;_gl=1*1bgoxhp*_up*MQ..&amp;amp;gclid=CjwKCAiAopuvBhBCEiwAm8jaMRbEEnIJr7BCEthg7psSBoIKbpA9CmArCYnFF-oHxtxYB-4PtmvykRoC120QAvD_BwE">定價  |  Gemini API  |  Google AI for Developers&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ai.google.dev/gemini-api/docs/rate-limits?hl=zh-tw&amp;amp;_gl=1*hth47i*_up*MQ..&amp;amp;gclid=CjwKCAiAopuvBhBCEiwAm8jaMRbEEnIJr7BCEthg7psSBoIKbpA9CmArCYnFF-oHxtxYB-4PtmvykRoC120QAvD_BwE">頻率限制  |  Gemini API  |  Google AI for Developers&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="api">API&lt;/h2>
&lt;ul>
&lt;li>透過 Google AI Studio &lt;a href="https://aistudio.google.com/apikey">申請&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="hello-world">Hello World&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">import&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75af00">GoogleGenAI&lt;/span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#75af00">from&lt;/span> &lt;span style="color:#d88200">&amp;#34;@google/genai&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">ai&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">GoogleGenAI&lt;/span>&lt;span style="color:#111">({&lt;/span> &lt;span style="color:#75af00">apiKey&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;YOUR_API_KEY&amp;#34;&lt;/span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">async&lt;/span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">response&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">ai&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">models&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">generateContent&lt;/span>&lt;span style="color:#111">({&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">model&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;gemini-2.0-flash&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">contents&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;Explain how AI works in a few words&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">response&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">text&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">await&lt;/span> &lt;span style="color:#75af00">main&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>AI - Audio</title><link>https://HoshikawaRyuukou.github.io/posts/ai---audio/</link><pubDate>Wed, 07 May 2025 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---audio/</guid><description>&lt;h2 id="quick">Quick&lt;/h2>
&lt;p>這篇是不錯的導讀&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV17SVUznEGw">AI声音建模：MiniMax Audio 一键声音克隆&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Scriptwriter - Note</title><link>https://HoshikawaRyuukou.github.io/posts/scriptwriter---note/</link><pubDate>Wed, 23 Apr 2025 21:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/scriptwriter---note/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1R2LizDEof">为什么故事一定要有反派？&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>AI - Firebase Studio</title><link>https://HoshikawaRyuukou.github.io/posts/ai---firebase-studio/</link><pubDate>Fri, 11 Apr 2025 08:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---firebase-studio/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>Firebase Studio 的前身是 Project IDX。&lt;/p>
&lt;p>Firebase Studio 是一個由 Google 提供的基於雲端的開發環境，旨在幫助開發者快速構建和發布全棧 AI 應用。這個平台結合了 AI 助手 Gemini 的功能，提供了一個集成的開發體驗，讓開發者能夠在一個地方完成應用的設計、開發和部署。&lt;/p>
&lt;p>目前，Firebase Studio 在預覽階段提供三個免費工作區，開發者可以在此期間無需付費使用該平台的功能。&lt;/p>
&lt;p>總的來說，看起來還輸 Cursor 一段距離，但追上應該是早晚的事。&lt;/p>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1K2d2YWEpW">💥谷歌免费发布Firebase Studio：AI应用开发神器，不试不行!&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Economics - Foreign Exchange</title><link>https://HoshikawaRyuukou.github.io/posts/economics---foreign-exchange/</link><pubDate>Thu, 10 Apr 2025 21:13:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/economics---foreign-exchange/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>外匯（Foreign Exchange）在一個國家的經濟中扮演著非常關鍵的角色，簡單來說，它代表的是一個國家所擁有的外國貨幣資源，像是美元、歐元、日圓等。&lt;/p>
&lt;p>這些外幣資源不只是用來進出口貿易，更是整個經濟穩定與國際信用的重要支柱。&lt;/p>
&lt;h2 id="支持國際貿易">支持國際貿易&lt;/h2>
&lt;p>外匯是進出口交易的必要條件。進口商品需要用外國貨幣支付，因此外匯儲備越充足，越能順利進口資源、原料與商品；同時也可以促進出口收入的穩定。&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>「進口商品需要用外幣支付」不是硬性規定，但在全球絕大多數的貿易中，使用美元等國際貨幣是標準做法。&lt;/strong>&lt;/p>&lt;/blockquote>
&lt;ul>
&lt;li>國際市場上有幾種貨幣被普遍接受作為交易媒介，像是&lt;strong>美元、歐元、人民幣、日圓&lt;/strong>等。這些被稱為&lt;strong>國際主要貨幣&lt;/strong>。&lt;/li>
&lt;li>Case 01：即使台灣跟巴西做貿易，雙方不見得會用台幣或巴幣，而很可能直接用美元來結算，因為&lt;strong>大家都接受美元，方便又穩定&lt;/strong>。&lt;/li>
&lt;li>Case 02：假如你是美國供應商，會願意收台幣或印尼盾嗎？大多數情況下不會，因為要再把台幣換成美元還得承擔匯率風險與兌換麻煩。&lt;/li>
&lt;li>❗️例外：有些國家之間會簽署&lt;strong>本幣結算協議&lt;/strong>，同意用彼此的貨幣來貿易，避免依賴美元。&lt;/li>
&lt;/ul>
&lt;h2 id="穩定匯率與金融市場">穩定匯率與金融市場&lt;/h2>
&lt;p>中央銀行可以透過買賣外匯來調節匯率，防止本國貨幣過度貶值或升值。&lt;/p>
&lt;p>例如當本幣貶值太快，中央銀行可釋出外匯穩定市場，避免通貨膨脹惡化。&lt;/p>
&lt;h2 id="建立國際信用">建立國際信用&lt;/h2>
&lt;p>豐富的外匯儲備代表一國有能力償還外債與應對國際金融風險，有助於提高國際投資者對該國的信心，吸引外資流入。&lt;/p>
&lt;h2 id="應對危機與緊急狀況">應對危機與緊急狀況&lt;/h2>
&lt;p>在金融危機或出口受挫的情況下，外匯儲備可作為應急資金，支撐國內經濟穩定，避免經濟出現斷崖式下滑。&lt;/p>
&lt;h2 id="反映經濟體質">反映經濟體質&lt;/h2>
&lt;p>一個國家的外匯儲備與其經濟結構、出口能力、投資吸引力等息息相關，也是一種衡量國家經濟體質的指標。&lt;/p></description></item><item><title>Investment - Crypto - USDT</title><link>https://HoshikawaRyuukou.github.io/posts/investment---crypto---usdt/</link><pubDate>Fri, 04 Apr 2025 21:13:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/investment---crypto---usdt/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>USDT（Tether USD）是一種&lt;strong>穩定幣（Stablecoin）&lt;/strong>。&lt;/p>
&lt;p>它的主要目的是讓使用者能夠在區塊鏈上交易時，享有類似法定貨幣（如美元）的穩定性，同時擁有加密貨幣的快速轉帳與去中心化特性。&lt;/p>
&lt;h2 id="-基本資訊">🔍 基本資訊&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>全名&lt;/strong>：Tether USD&lt;/li>
&lt;li>&lt;strong>代幣符號&lt;/strong>：USDT&lt;/li>
&lt;li>&lt;strong>發行公司&lt;/strong>：Tether Limited&lt;/li>
&lt;li>&lt;strong>鏈上運行平台&lt;/strong>：
&lt;ul>
&lt;li>最早是在 &lt;strong>Omni Layer（比特幣網路）&lt;/strong> 上運行&lt;/li>
&lt;li>現已支援 &lt;strong>以太坊（ERC-20）&lt;/strong>、&lt;strong>Tron（TRC-20）&lt;/strong>、&lt;strong>Solana&lt;/strong>、&lt;strong>BNB Chain&lt;/strong> 等多條鏈&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>對應價值&lt;/strong>：1 USDT ≈ 1 美元&lt;/li>
&lt;/ul>
&lt;h2 id="-特點與用途">💡 特點與用途&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>穩定性&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>每一個 USDT 理論上都由 Tether 公司持有的「等值美元或等值資產」作為儲備。&lt;/li>
&lt;li>適合用於對抗加密貨幣市場的高波動性。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>轉帳方便&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>跨境轉帳快速、手續費低，不需銀行系統。&lt;/li>
&lt;li>可用於支付、借貸、合約交易、資金避險等場景。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>加密交易中常見的穩定資產&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>多數交易所都提供 USDT 交易對（如 BTC/USDT、ETH/USDT 等）。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="-爭議與風險">🔐 爭議與風險&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>資產儲備透明性問題&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>Tether 曾被質疑是否真的有 100% 的資產儲備來支撐流通中的 USDT。&lt;/li>
&lt;li>雖然 Tether 有定期公開儲備報告，但仍常被外界質疑其準確性與審核標準。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>中心化問題&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>Tether 是由單一公司控制，並非完全去中心化。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="-美元脫鉤的歷史紀錄">🔄 美元脫鉤的歷史紀錄&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>2025年2月19日&lt;/strong>：​USDT 價格短暫下跌至 0.9993 美元，隨後迅速回升至 1 美元。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>2024年12月&lt;/strong>：​歐盟實施《MiCA》法案，導致多家交易所下架 USDT 交易對，市場出現波動。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>2022年5月&lt;/strong>：​在 Terra（LUNA）和 UST 崩盤期間，USDT 價格曾跌至約 0.95 美元，引發市場恐慌。&lt;/p></description></item><item><title>Unity - Basic - Shortcuts</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---shortcuts/</link><pubDate>Wed, 02 Apr 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---shortcuts/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>快捷鍵&lt;/th>
 &lt;th>功能&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Alt + 箭頭&lt;/strong>&lt;/td>
 &lt;td>遞迴展開/摺疊資料夾或物件&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>F&lt;/strong>&lt;/td>
 &lt;td>聚焦選取物件（Scene 視窗）&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Visual Studio - Note</title><link>https://HoshikawaRyuukou.github.io/posts/visual-studio---code-style/</link><pubDate>Tue, 01 Apr 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/visual-studio---code-style/</guid><description>&lt;h2 id="editorconfig">EditorConfig&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/visualstudio/ide/code-styles-and-code-cleanup?view=vs-2022#code-styles-in-editorconfig-files">程式碼樣式選項和程式碼清理 - Visual Studio (Windows) | Microsoft Learn&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="生成-editorconfig-檔案">生成 .editorconfig 檔案&lt;/h3>
&lt;blockquote>
&lt;p>Tools &amp;gt; Options &amp;gt; Text Editor &amp;gt; C# &amp;gt; Code Style &amp;gt; General&lt;/p>&lt;/blockquote></description></item><item><title>ACG - Game - Story</title><link>https://HoshikawaRyuukou.github.io/posts/acg---game---story/</link><pubDate>Sat, 29 Mar 2025 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/acg---game---story/</guid><description>&lt;h2 id="ブルーアーカイブ-blue-archive">ブルーアーカイブ (Blue Archive)&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://space.bilibili.com/7045822">威威字幕君的个人空间-威威字幕君个人主页-哔哩哔哩视频&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="鳴潮-wuthering-waves">鳴潮 (Wuthering Waves)&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=Md2NdlgPI3g">文明的漂泊者，解剖鳴潮最深的秘密，《鳴潮》究竟講了一個什麽故事？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=-2wxVPfm0Lo">鳴學02|信仰寄生，聖女已死，黎那汐塔隱藏的真正秘密，《鳴潮》劇情深度解讀&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=MfSEi0N45_k">鳴學03|坎特蕾拉你無愧於聖女的名號《鳴潮》劇情深度解讀&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="モンスターハンター-monster-hunter">モンスターハンター (Monster Hunter)&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/@ShuShiDui/videos">艾森巴赫 - YouTube&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Unity - Basic - ScriptableObject</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---scriptableobject/</link><pubDate>Fri, 28 Mar 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---scriptableobject/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>ScriptableObject 是 Unity 中一個非常強大且有用的功能，主要用於儲存共享數據、配置或建立數據驅動的系統。&lt;/p>
&lt;h2 id="cautions">Cautions&lt;/h2>
&lt;h3 id="editor-play-mode-persistence">Editor Play Mode Persistence&lt;/h3>
&lt;ul>
&lt;li>在編輯器中進入「播放模式」(Play Mode) 時對 ScriptableObject 實例（.asset 文件對應的記憶體物件）所做的修改，在&lt;strong>退出播放模式後會被保留下來&lt;/strong>。&lt;/li>
&lt;li>如果需要在 Play Mode 中臨時修改數據進行測試，考慮使用 &lt;code>Instantiate()&lt;/code> 創建 ScriptableObject 的副本來操作，這樣修改就不會影響原始的 .asset 文件。&lt;/li>
&lt;/ul>
&lt;h3 id="runtime-changes-in-builds">Runtime Changes in Builds&lt;/h3>
&lt;ul>
&lt;li>在建構出的遊戲版本 (Build) 中，於執行期間對 ScriptableObject 實例所做的修改&lt;strong>不會被保存&lt;/strong>回原始的資產文件。當遊戲關閉並重新啟動後，ScriptableObject 會恢復到建構時的初始狀態。&lt;/li>
&lt;li>對於需要持久化的數據，應使用其他儲存機制，例如 PlayerPrefs、儲存為 JSON/XML/二進位檔案，或使用資料庫。&lt;/li>
&lt;li>ScriptableObject 可以在執行期被修改，用作**單次遊戲會話 (Session)**內的共享狀態容器，但要知道這些變更不會自動存檔。&lt;/li>
&lt;/ul>
&lt;h3 id="asset-vs-instance-confusion">Asset vs. Instance Confusion&lt;/h3>
&lt;ul>
&lt;li>多個地方直接引用同一個 ScriptableObject &lt;code>.asset&lt;/code>，它們實際上都指向記憶體中的同一個共享實例。&lt;/li>
&lt;li>對於實現全局配置或共享狀態非常有用。&lt;/li>
&lt;li>如果每個使用者擁有獨立的數據副本，則需要在執行期 Instantiate() 這個 ScriptableObject 來創建副本。&lt;/li>
&lt;/ul></description></item><item><title>Unity - Basic - Sprite Atlas</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---sprite-atlas/</link><pubDate>Fri, 28 Mar 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---sprite-atlas/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.unity3d.com/6000.0/Documentation/Manual/sprite/atlas/atlas-landing.html">Unity - Manual: Sprite atlas&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cnblogs.com/chenxiayun/p/18780078">Unity —— SpriteAtlas + Include in Build - 陈侠云 - 博客园&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Art - Photopea - Note</title><link>https://HoshikawaRyuukou.github.io/posts/art---photopea---note/</link><pubDate>Thu, 27 Mar 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/art---photopea---note/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>Photopea 是一款免費線上圖像編輯工具，介面與 Photoshop 相似，支援 PSD、XD、Sketch 等多種檔案格式。使用者無需安裝軟體，即可在瀏覽器中進行圖層編輯、濾鏡處理與設計排版，非常適合快速修圖與設計需求。&lt;/p>
&lt;h2 id="cases">Cases&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://ushiro-mae.com/photopea-replace-color/">【Photopea】色を置き換える方法&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>AI - Common - Note</title><link>https://HoshikawaRyuukou.github.io/posts/ai---common---note/</link><pubDate>Wed, 26 Mar 2025 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---common---note/</guid><description>&lt;h2 id="artificial-general-intelligenceagi">Artificial General Intelligence（AGI）&lt;/h2>
&lt;p>簡單來說，AGI（通用人工智慧）就像是一個能夠像人類一樣思考和學習的 AI。現在的 AI 通常只能做特定的事情，比如語音助理能聽懂指令、圖像辨識能認臉，但它們無法舉一反三或解決各種不同的問題。&lt;/p>
&lt;p>AGI 則不同，它能夠適應各種情境、學習新知識、自己思考並解決問題，就像一個真正有智慧的人。這也是人工智慧發展的終極目標——打造一個可以自由學習、理解世界的「超級 AI」。&lt;/p>
&lt;h2 id="edge-computing">Edge Computing&lt;/h2>
&lt;p>簡單來說，&lt;strong>邊緣運算&lt;/strong>就是讓資料的處理工作&lt;strong>盡量靠近資料來源&lt;/strong>，而不是全部送到遠端的伺服器（雲端）去計算。&lt;/p>
&lt;p>舉個例子，如果你在用自駕車，車子上的感測器會即時收集路況資訊。如果這些資料都要先傳到雲端再回來，可能會有延遲，影響安全。但如果車子本身就能&lt;strong>即時處理&lt;/strong>這些資料，那麼它可以&lt;strong>更快做出決策&lt;/strong>，避免危險。&lt;/p>
&lt;p>這種技術不只適合自駕車，也廣泛應用在&lt;strong>智慧工廠、AR/VR、智慧家庭&lt;/strong>等需要即時反應的領域，因為它可以&lt;strong>減少延遲、降低網路負擔，並提升運算效率&lt;/strong>。&lt;/p>
&lt;h2 id="retrieval-augmented-generationrag">Retrieval-Augmented Generation（RAG）&lt;/h2>
&lt;p>簡單來說，&lt;strong>RAG 就是讓 AI 會「先查資料再回答」&lt;/strong>，而不是單靠自己記住的知識來作答。&lt;/p>
&lt;p>一般的 AI 模型只能根據訓練時學到的內容回答問題，這可能會導致資訊過時或不夠準確。但 RAG 的特點是，它會&lt;strong>先去找最新或相關的資料&lt;/strong>，然後再根據這些資訊來產生回應。&lt;/p>
&lt;p>想像一下，你問 AI：「最近的 AI 技術發展如何？」一般的 AI 可能只會回答它訓練時學到的內容，但 RAG 會&lt;strong>先查找最新的研究或新聞&lt;/strong>，再提供更準確的答案。這讓它特別適合&lt;strong>問答系統、企業內部知識搜尋、技術支援&lt;/strong>等需要&lt;strong>即時、可靠資訊&lt;/strong>的應用。&lt;/p>
&lt;h2 id="multimodal">Multimodal&lt;/h2>
&lt;p>簡單來說，多模態 AI 就是讓人工智慧能夠同時理解和處理多種形式的資料，例如文字、圖片、聲音和影片等。​&lt;/p>
&lt;p>傳統的 AI 模型通常只專注於單一類型的資料，例如僅處理文字或圖像。​但多模態 AI 能夠整合不同形式的資訊，使其對世界的理解更加全面，並能執行更複雜的任務。&lt;/p>
&lt;h3 id="natively-multimodal原生多模態">Natively Multimodal（原生多模態）&lt;/h3>
&lt;p>所謂「原生」是指模型從一開始就是為多模態設計，並非後期再整合進去，因此能更自然、有效率地跨模態理解與生成資訊。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Gemini 2.0 Flash&lt;/strong>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=w0-L2kl_3cU">用嘴 P 圖的這一天真的來了！超強多模態 Gemini AI 讓一票設計師默默把繪圖板拿起來邊啃邊思考人生 ~&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>GPT 4o 原生多模態圖片生成&lt;/strong>
&lt;ul>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1yZZMYEEQ4">OpenAI重大更新，降维打击，自然语言绘图功能修改图片功能跨代提升，真正的多模态，从此人人都是设计师&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="為圖像生成帶來更穩定可控的輸出">為圖像生成帶來更穩定/可控的輸出&lt;/h3>
&lt;ul>
&lt;li>角色一致性&lt;/li>
&lt;li>文字渲染能力&lt;/li>
&lt;li>支援多輪對話調整迭代創作(明確指示修改)&lt;/li>
&lt;li>基於參考圖二次創作(風格遷移)&lt;/li>
&lt;/ul>
&lt;h2 id="model-context-protocolmcp">Model Context Protocol（MCP）&lt;/h2>
&lt;p>模型上下文協議（Model Context Protocol，MCP）由 Anthropic 提出，是一種開放標準，用來規範 AI 模型與外部工具、資料來源的互動方式。&lt;/p></description></item><item><title>Unity - Coding - Warnings</title><link>https://HoshikawaRyuukou.github.io/posts/unity---coding---warnings/</link><pubDate>Tue, 25 Mar 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---coding---warnings/</guid><description>&lt;h2 id="unt0023-coalescing-assignment-on-unity-objects">UNT0023 Coalescing assignment on Unity objects&lt;/h2>
&lt;p>合併賦值運算子 &lt;code>??=&lt;/code> 是 C# 8.0 引入的運算子，其功能是：如果左側運算元為 null，則將右側運算元的值賦給左側運算元。&lt;/p>
&lt;p>然而，在 Unity 中直接對 Unity 物件 (如 GameObject、Component 等) 使用這個運算子可能會導致問題，因為：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Unity 物件的特殊生命週期&lt;/strong>：Unity 物件即使被銷毀，在 C# 層面的變數可能不會自動設為 null，而是成為&amp;quot;偽 null&amp;quot;物件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>自訂的 null 檢查行為&lt;/strong>：Unity 覆寫了 &lt;code>==&lt;/code> 運算子，使得對已銷毀的 Unity 物件進行 null 檢查時會返回 true，但 `?? 運算子使用的是底層的 null 檢查機制。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="使用明確的-null-檢查">使用明確的 null 檢查&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">private&lt;/span> &lt;span style="color:#111">Rigidbody&lt;/span> &lt;span style="color:#111">rb&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#111">Start&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">rb&lt;/span> &lt;span style="color:#111">==&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">rb&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">GetComponent&lt;/span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#111">Rigidbody&lt;/span>&lt;span style="color:#111">&amp;gt;();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span> 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Economics - Events - Plaza Accord</title><link>https://HoshikawaRyuukou.github.io/posts/economics---events---plaza-accord/</link><pubDate>Fri, 21 Mar 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/economics---events---plaza-accord/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>廣場協議（Plaza Accord）短期內成功讓美元貶值，減緩美國貿易逆差問題，但對日本造成嚴重衝擊，間接導致日本的泡沫經濟與經濟停滯。&lt;/p>
&lt;h2 id="背景">背景&lt;/h2>
&lt;ul>
&lt;li>美國為了抗通膨升息，外資湧入導致美元升值。&lt;/li>
&lt;li>里根經濟學擴大財政赤字，外國購買美國國債進一步推高美元。&lt;/li>
&lt;li>美國當時對日本和西德的貿易逆差特別嚴重。&lt;/li>
&lt;/ul>
&lt;h2 id="目的">目的&lt;/h2>
&lt;ul>
&lt;li>讓&lt;strong>美元貶值&lt;/strong>，降低美國貿易逆差，提高美國出口競爭力。&lt;/li>
&lt;li>讓日圓、德國馬克升值，減少日本與西德的出口優勢，平衡國際貿易。&lt;/li>
&lt;/ul>
&lt;h2 id="操作">操作&lt;/h2>
&lt;ul>
&lt;li>1985年9月，美國、日本、西德、法國、英國（G5）在紐約廣場飯店簽訂Plaza Accord。&lt;/li>
&lt;li>G5 協同干預外匯市場，透過拋售美元、購買日圓與德國馬克來改變匯率。&lt;/li>
&lt;/ul>
&lt;h2 id="後果">後果&lt;/h2>
&lt;h3 id="美國">美國&lt;/h3>
&lt;ul>
&lt;li>出口競爭力回升。&lt;/li>
&lt;/ul>
&lt;h3 id="日本">日本&lt;/h3>
&lt;ul>
&lt;li>日圓升值 → 日本企業競爭力下降，出口受創。&lt;/li>
&lt;li>日本央行採取低利率與寬鬆貨幣政策來刺激經濟，結果導致資產泡沫（房地產 &amp;amp; 股票暴漲）。&lt;/li>
&lt;li>1990年代泡沫破裂，進入「失落的十年」。&lt;/li>
&lt;/ul>
&lt;h3 id="西德德國">西德（德國）&lt;/h3>
&lt;ul>
&lt;li>馬克升值，影響出口，但影響較日本小。&lt;/li>
&lt;/ul>
&lt;h3 id="全球">全球&lt;/h3>
&lt;ul>
&lt;li>G5後來在1987年簽訂 &lt;strong>「羅浮宮協議」&lt;/strong>（Louvre Accord）來穩定匯率。&lt;/li>
&lt;/ul></description></item><item><title>Life - Note</title><link>https://HoshikawaRyuukou.github.io/posts/life---note/</link><pubDate>Thu, 20 Mar 2025 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/life---note/</guid><description>&lt;h2 id="health">Health&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1XTXsYfE8A">【花小烙】不小心食物中毒，身体里会发生什么？&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="sleep">Sleep&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=5qHI6y4Qisc">睡眠專家：休息的關鍵不在晚上，而是白天｜【初日會客室】哇賽心理學 蔡宇哲&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=NC7rXTxfZmY">腎臟科名醫：這些人第一次看診，就被我宣布要終身洗腎｜【初日會客室】洪永祥 醫師&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="sport">Sport&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=B1OgDDb_lTs">善於長跑的原始部落:現代人忘了跑步的正確方式(跑鞋的誤區) | 暢銷書解讀《天生就會跑》&lt;/a>
&lt;ul>
&lt;li>挺直背部、彎曲膝蓋、前腳掌先著地，以及抬腳時足跟接近臀部&lt;/li>
&lt;li>落地的重心跟身體的重心在一條線上&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="cooking">Cooking&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1R3odYwEbG">烹饪基础问题：大火与小火。都是100度了，那不都一样吗？&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Unity - Packages</title><link>https://HoshikawaRyuukou.github.io/posts/unity---packages/</link><pubDate>Wed, 19 Mar 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---packages/</guid><description>&lt;h2 id="package-manager">Package Manager&lt;/h2>
&lt;h3 id="installing-packages-using-upm">Installing Packages using UPM&lt;/h3>
&lt;ol>
&lt;li>Package manager -&amp;gt; Advanced project settings&lt;/li>
&lt;li>Add Scoped Registries&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>Name: package.openupm.com
URL: https://package.openupm.com
Scope(s): 
 com.cysharp.unitask
&lt;/code>&lt;/pre>&lt;ol start="3">
&lt;li>Package manager -&amp;gt; Packages: My Registries -&amp;gt; Install&lt;/li>
&lt;/ol>
&lt;h3 id="guide">Guide&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/139090680">Unity中 .asmdef文件的作用&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/146565975">使用OpenUPM发布自己的Unity项目&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.jianshu.com/p/153841d65846">开发Unity PackageManager 插件包&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://neogeek.dev/creating-custom-packages-for-unity-2018.3/">Creating Custom Packages for Unity 2018.3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gametorrahod.com/how-to-asmdef-upm/?fbclid=IwAR31P12StjzcTi9IO1vDvwWJIwaKHxIEmUQLic6K1LGElmwv6OFRqe8sVig">How to remodel your project for asmdef and UPM&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://annulusgames-lab.blogspot.com/2023/01/unity-package-manager.html">【Unity】Package Manager活用術&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="package-collection">Package Collection&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/killop/anything_about_game/tree/b5c3b2e573d0970b318fd75b1449dbd9fdaa0ee9">killop/anything_about_game&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/baba-s/awesome-unity-open-source-on-github/tree/master?tab=readme-ov-file">baba-s/awesome-unity-open-source-on-github&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="animation">Animation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/AnnulusGames/LitMotion">AnnulusGames/LitMotion&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="async">Async&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Cysharp/UniTask">Cysharp/UniTask&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="debug">Debug&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/yasirkula/UnityIngameDebugConsole">yasirkula/UnityIngameDebugConsole&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="dependency-injection">Dependency Injection&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/hadashiA/VContainer">hadashiA/VContainer&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="dialogue">Dialogue&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/YarnSpinnerTool/YarnSpinner-Unity">YarnSpinnerTool/YarnSpinner-Unity&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="editor">Editor&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/AnnulusGames/Alchemy">AnnulusGames/Alchemy&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="hotfix">HotFix&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://hybridclr.doc.code-philosophy.com/">focus-creative-games/hybridclr&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="io">IO&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Cysharp/ZString">Cysharp/ZString&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/jilleJr/Newtonsoft.Json-for-Unity/wiki/Install-official-via-UPM">Newtonsoft.Json&lt;/a>
&lt;ul>
&lt;li>git - com.unity.nuget.newtonsoft-json&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="language">Language&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/phanphantz/ThaiTextCare-for-Unity">phanphantz/ThaiTextCare-for-Unity&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="localization">Localization&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://assetstore.unity.com/packages/tools/localization/lean-localization-28504">Lean Localization&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="media">Media&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/yasirkula/UnityNativeCamera">yasirkula/UnityNativeCamera&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="messaging">Messaging&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Cysharp/MessagePipe">Cysharp/MessagePipe&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="particle-effect">Particle Effect&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/mob-sakai/ParticleEffectForUGUI">mob-sakai/ParticleEffectForUGUI&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="persistence">Persistence&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/sabresaurus/PlayerPrefsEditor">sabresaurus/PlayerPrefsEditor&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="resource-management">Resource Management&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/tuyoogame/YooAsset">tuyoogame/YooAsset&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="rx-reactive-extensions">Rx (Reactive Extensions)&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Cysharp/R3">Cysharp/R3&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="social">Social&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/yasirkula/UnityNativeShare">Unity Native Share Plugin&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="sprite">Sprite&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/elringus/sprite-dicing">elringus/sprite-dicing&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="state-machine">State Machine&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Inspiaaa/UnityHFSM">Inspiaaa/UnityHFSM&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ui">UI&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/qiankanglai/LoopScrollRect">qiankanglai/LoopScrollRect&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="web">Web&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/psygames/UnityWebSocket">psygames/UnityWebSocket&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gree/unity-webview">gree/unity-webview&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Unity - Project Structure</title><link>https://HoshikawaRyuukou.github.io/posts/unity---project-structure/</link><pubDate>Tue, 18 Mar 2025 20:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---project-structure/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=o8HIGKObG1Q">Organizing Your Unity Project — Content vs Feature Folders&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://medium.com/@ikonija.bogojevic/organizing-project-folder-structure-function-based-vs-feature-based-168596b6d169">Organizing Project Folder Structure: Function-Based vs Feature-Based&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="content-based依內容分類">Content-Based（依內容分類）&lt;/h2>
&lt;h3 id="特點">特點&lt;/h3>
&lt;ul>
&lt;li>以「資源類型」來劃分資料夾，例如腳本、材質、模型等。&lt;/li>
&lt;/ul>
&lt;h3 id="缺點">缺點&lt;/h3>
&lt;ul>
&lt;li>同一個功能可能分散在多個資料夾中。&lt;br>
例如你想找「商店系統」的 prefab、script 和 UI，可能得在三、四個資料夾中翻找。&lt;/li>
&lt;/ul>
&lt;h3 id="範例">範例&lt;/h3>
&lt;pre tabindex="0">&lt;code>Assets/
├── Materials/
├── Models/
├── Textures/
├── Scripts/
├── Animations/
├── Prefabs/
├── Audio/
&lt;/code>&lt;/pre>&lt;h2 id="feature-based依功能分類">Feature-Based（依功能分類）&lt;/h2>
&lt;h3 id="特點-1">特點&lt;/h3>
&lt;ul>
&lt;li>以功能模組為單位集中管理相關資源。&lt;/li>
&lt;li>適合模組化開發，有助於封裝、重用與搬移。&lt;/li>
&lt;li>找特定功能時，所有相關資源都集中在一起，不需東找西找。&lt;/li>
&lt;/ul>
&lt;h3 id="缺點-1">缺點&lt;/h3>
&lt;ul>
&lt;li>相同類型的資源（例如所有動畫或音效）會分散各處，不利統一管理。&lt;br>
（不過透過 Editor 的搜尋功能，其實影響不大。）&lt;/li>
&lt;li>若模組間耦合度高，可能導致功能邊界模糊。&lt;/li>
&lt;/ul>
&lt;h3 id="範例-1">範例&lt;/h3>
&lt;pre tabindex="0">&lt;code>Assets/
├── Shop/
│ ├── Scripts/
│ ├── Prefabs/
│ ├── UI/
├── Player/
│ ├── Scripts/
│ ├── Animations/
│ ├── Prefabs/
├── Inventory/
│ ├── Scripts/
│ ├── UI/
&lt;/code>&lt;/pre>&lt;h2 id="hybrid混合式">Hybrid（混合式）&lt;/h2>
&lt;h3 id="特點-2">特點&lt;/h3>
&lt;ul>
&lt;li>以 Feature-Based 為主體。&lt;/li>
&lt;li>共用資源集中放置於 Common 或 Shared 資料夾中，避免重複。&lt;/li>
&lt;/ul>
&lt;h3 id="範例-2">範例&lt;/h3>
&lt;pre tabindex="0">&lt;code>Assets/
├── Common/
│ ├── Materials/
│ ├── Fonts/
│ ├── Audio/
├── Player/
│ ├── Scripts/
│ ├── Prefabs/
├── Shop/
│ ├── Scripts/
│ ├── UI/
&lt;/code>&lt;/pre>&lt;h2 id="實踐建議">實踐建議&lt;/h2>
&lt;ul>
&lt;li>小型專案或原型（Prototype）建議先採用 Content-Based 結構，快速上手。&lt;/li>
&lt;li>專案逐漸擴大後，可以逐步轉向 Feature-Based，以利管理與維護。&lt;/li>
&lt;/ul></description></item><item><title>Unity - Frameworks</title><link>https://HoshikawaRyuukou.github.io/posts/unity---frameworks/</link><pubDate>Sun, 16 Mar 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---frameworks/</guid><description>&lt;h2 id="repository">Repository&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/michael811125/OxGFrame">michael811125/OxGFrame&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gmhevinci/UniFramework">gmhevinci/UniFramework&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>OS - Mac - Note</title><link>https://HoshikawaRyuukou.github.io/posts/os---mac---note/</link><pubDate>Sat, 15 Mar 2025 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/os---mac---note/</guid><description>&lt;h2 id="shotcut">Shotcut&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>功能&lt;/th>
 &lt;th>快捷鍵&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>顯示/隱藏 檔案或資料夾&lt;/td>
 &lt;td>Shift + Command + .&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Algorithm - LeetCode 85 - Maximal Rectangle</title><link>https://HoshikawaRyuukou.github.io/posts/algorithm---leetcode-85---maximal-rectangle/</link><pubDate>Thu, 13 Mar 2025 13:13:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/algorithm---leetcode-85---maximal-rectangle/</guid><description>&lt;h2 id="description">Description&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.cn/problems/maximal-rectangle/description/">85. 最大矩形&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="sample">Sample&lt;/h2>
&lt;h3 id="input">input&lt;/h3>
&lt;pre tabindex="0">&lt;code>matrix = [
 [1,0,1,0,0],
 [1,0,1,1,1],
 [1,1,1,1,1],
 [1,0,0,1,0]
]
&lt;/code>&lt;/pre>&lt;h3 id="output">output&lt;/h3>
&lt;pre tabindex="0">&lt;code>6
&lt;/code>&lt;/pre>&lt;h2 id="key-points">Key points&lt;/h2>
&lt;h2 id="solution-1---暴力解">Solution 1 - 暴力解&lt;/h2>
&lt;ul>
&lt;li>檢查矩陣中所有可能的矩形，並計算每個矩形是否符合條件。&lt;/li>
&lt;li>對每個可能的矩形進行迴圈遍歷。&lt;/li>
&lt;li>計算該矩形內的元素是否符合條件。&lt;/li>
&lt;/ul>
&lt;h3 id="複雜度">複雜度&lt;/h3>
&lt;ul>
&lt;li>m 為 row 的長度 ，n 是 column 的長度&lt;/li>
&lt;li>時間複雜度：O(m^2 x n^2)&lt;/li>
&lt;li>空間複雜度：O(m x n)&lt;/li>
&lt;/ul>
&lt;h2 id="solution-2---單調棧">Solution 2 - 單調棧&lt;/h2>
&lt;ul>
&lt;li>將原矩陣根據各 row 提取出數個高度(連續的1)陣列。&lt;/li>
&lt;li>便可將問題拆解成數個 84 題。&lt;/li>
&lt;/ul>
&lt;h3 id="推導">推導&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Step&lt;/th>
 &lt;th>Matrix Row&lt;/th>
 &lt;th>heights[]&lt;/th>
 &lt;th>result by No.84&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>1&lt;/td>
 &lt;td>[1,0,1,0,0]&lt;/td>
 &lt;td>[1, 0, 1, 0, 0]&lt;/td>
 &lt;td>1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>2&lt;/td>
 &lt;td>[1,0,1,1,1]&lt;/td>
 &lt;td>[2, 0, 2, 1, 1]&lt;/td>
 &lt;td>2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>3&lt;/td>
 &lt;td>[1,1,1,1,1]&lt;/td>
 &lt;td>[3, 1, 3, 2, 2]&lt;/td>
 &lt;td>6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>4&lt;/td>
 &lt;td>[1,0,0,1,0]&lt;/td>
 &lt;td>[4, 0, 0, 3, 0]&lt;/td>
 &lt;td>4&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>
 &lt;img src="https://HoshikawaRyuukou.github.io/images/Leetcode85.png" alt="Leetcode85">

&lt;/p></description></item><item><title>Algorithm - LeetCode 84 - Largest Rectangle in Histogram</title><link>https://HoshikawaRyuukou.github.io/posts/algorithm---leetcode-84---largest-rectangle-in-histogram/</link><pubDate>Thu, 13 Mar 2025 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/algorithm---leetcode-84---largest-rectangle-in-histogram/</guid><description>&lt;h2 id="description">Description&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.cn/problems/largest-rectangle-in-histogram/description/">84. 柱状图中最大的矩形&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="sample">Sample&lt;/h2>
&lt;h3 id="input">input&lt;/h3>
&lt;pre tabindex="0">&lt;code>heights = [2,1,5,6,2,3] 
&lt;/code>&lt;/pre>&lt;h3 id="output">output&lt;/h3>
&lt;pre tabindex="0">&lt;code>10 
&lt;/code>&lt;/pre>&lt;h2 id="key-points">Key points&lt;/h2>
&lt;ul>
&lt;li>目標是 &lt;strong>找到每個柱子能擴展的最大寬度&lt;/strong>，然後計算以該柱子為高度的最大矩形面積。&lt;/li>
&lt;/ul>
&lt;h2 id="solution-1---暴力解">Solution 1 - 暴力解&lt;/h2>
&lt;ul>
&lt;li>對於每個 &lt;code>heights[i]&lt;/code>，向 &lt;strong>左&lt;/strong>、&lt;strong>右&lt;/strong> 擴展，直到遇到比它矮的柱子。&lt;/li>
&lt;li>&lt;strong>左邊界 (left)&lt;/strong>：找第一個小於 heights[i] 的索引&lt;/li>
&lt;li>&lt;strong>右邊界 (right)&lt;/strong>：找第一個小於 heights[i] 的索引&lt;/li>
&lt;li>&lt;strong>寬度 (width)&lt;/strong>：&lt;code>width = right - left - 1&lt;/code>&lt;/li>
&lt;li>&lt;strong>面積 (area)&lt;/strong>：&lt;code>area = heights[i] * (right - left - 1)&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="推導">推導&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>i&lt;/th>
 &lt;th>heights[i]&lt;/th>
 &lt;th>left&lt;/th>
 &lt;th>right&lt;/th>
 &lt;th>width&lt;/th>
 &lt;th>area&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>0&lt;/td>
 &lt;td>2&lt;/td>
 &lt;td>-1&lt;/td>
 &lt;td>1&lt;/td>
 &lt;td>1&lt;/td>
 &lt;td>2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>1&lt;/td>
 &lt;td>1&lt;/td>
 &lt;td>-1&lt;/td>
 &lt;td>6&lt;/td>
 &lt;td>6&lt;/td>
 &lt;td>6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>2&lt;/td>
 &lt;td>5&lt;/td>
 &lt;td>1&lt;/td>
 &lt;td>4&lt;/td>
 &lt;td>2&lt;/td>
 &lt;td>10&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>3&lt;/td>
 &lt;td>6&lt;/td>
 &lt;td>2&lt;/td>
 &lt;td>4&lt;/td>
 &lt;td>1&lt;/td>
 &lt;td>6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>4&lt;/td>
 &lt;td>2&lt;/td>
 &lt;td>1&lt;/td>
 &lt;td>6&lt;/td>
 &lt;td>4&lt;/td>
 &lt;td>8&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>5&lt;/td>
 &lt;td>3&lt;/td>
 &lt;td>4&lt;/td>
 &lt;td>6&lt;/td>
 &lt;td>1&lt;/td>
 &lt;td>3&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>最大矩形面積 = &lt;code>10&lt;/code>&lt;/strong>&lt;/p></description></item><item><title>ACG - Note</title><link>https://HoshikawaRyuukou.github.io/posts/acg---note/</link><pubDate>Thu, 06 Mar 2025 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/acg---note/</guid><description>&lt;h2 id="search">Search&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://gelbooru.iqdb.org/">Gelbooru image search&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://danbooru.iqdb.org/">Danbooru image search&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://schara.sunrockgo.com/">キャラ誕 アニメ漫画ラノベ キャラクター誕生日カレンダー&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="translation">Translation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://mangaday.ai/translation">Fast manga translator &amp;amp; Translations in Multiple Languages&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Unity - Environment</title><link>https://HoshikawaRyuukou.github.io/posts/unity---environment/</link><pubDate>Mon, 03 Mar 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---environment/</guid><description>&lt;blockquote>
&lt;p>⚠️ 以下使用 unity 6&lt;/p>&lt;/blockquote>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://ithelp.ithome.com.tw/articles/10346751">Day10 / Unity 跟上時代！如何設定 Visual Studio Code 編輯器環境 - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="vscode">VSCode&lt;/h2>
&lt;h3 id="extensions">Extensions&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=visualstudiotoolsforunity.vstuc">Extension - Unity&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="net-sdk">.NET SDK&lt;/h3>
&lt;ul>
&lt;li>安裝 &lt;a href="https://dotnet.microsoft.com/en-us/download">.NET Core&lt;/a>
&lt;ul>
&lt;li>Mac M 系列 ( M1 M2 ) ➔ .NET SDK Arm64 版本&lt;/li>
&lt;li>Mac 其餘型號 ➔ .NET SDK x64 版本&lt;/li>
&lt;li>Windows ➔ .NET SDK x64 版本&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>重新開機使環境變數被應用&lt;/li>
&lt;/ul>
&lt;h3 id="unity-package-manager">Unity Package Manager&lt;/h3>
&lt;ul>
&lt;li>移除 Visual Studio Code Editor 已經停止維護 (比較舊的版本可能要裝)&lt;/li>
&lt;li>安裝 Visual Studio Editor&lt;/li>
&lt;/ul>
&lt;h3 id="preferences">Preferences&lt;/h3>
&lt;ul>
&lt;li>Edit &amp;gt; Preferences &amp;gt; External Tools
&lt;ul>
&lt;li>External Script Editor &amp;gt; Visual Studio Code&lt;/li>
&lt;li>Generate .csproj files for
&lt;ul>
&lt;li>Embedded packages&lt;/li>
&lt;li>Local packages&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="common">Common&lt;/h2>
&lt;h3 id="preferences-1">Preferences&lt;/h3>
&lt;ul>
&lt;li>Edit &amp;gt; Preferences &amp;gt; General &amp;gt; Script Changes While Playing (Stop Playing and Recompile)&lt;/li>
&lt;/ul></description></item><item><title>Tools</title><link>https://HoshikawaRyuukou.github.io/posts/tools/</link><pubDate>Sat, 01 Mar 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/tools/</guid><description>&lt;h2 id="analyzer">Analyzer&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://diskanalyzer.com/">WizTree - The Fastest Disk Space Analyzer&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="antivirus">Antivirus&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.defenderui.com/">DefenderUI&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="automation">Automation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/taojy123/KeymouseGo?tab=readme-ov-file">taojy123/KeymouseGo&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="batch">Batch&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://chromewebstore.google.com/detail/save-all-resources/abpdnfjocnmdomablahdcfnoggeeiedb">Save All Resources&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="context">Context&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/BluePointLilac/ContextMenuManager">BluePointLilac/ContextMenuManager&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="diagram">Diagram&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=CU0ZhMoXz7k">只會用 Office 畫流程圖？許多人試用過這個後直呼回不去了 👍 | Draw.io 教學&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://postspark.app/">postspark&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="document">Document&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://hackmd.io/zh">HackMD：協作 Markdown 文件，分享知識的平台&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="media---image">Media - Image&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yeoji.github.io/spritesheet-cutter/">Spritesheet Cutter&lt;/a>&lt;/li>
&lt;li>&lt;a href="free-tex-packer.com/">texture packer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://witnessmonolith.itch.io/atlased">Atlased&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="media---speech">Media - Speech&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/jianchang512/stt">jianchang512/stt&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="media---video">Media - Video&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=ERee4DY2LQ8">如何安裝FFmpeg&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.screentogif.com/">ScreenToGif&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://videodler.com/zh-Hant/">Twitter 影片下載器&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.videolan.org/vlc/index.zh_TW.html">VLC media player&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/Tyrrrz/YoutubeDownloader">Tyrrrz/YoutubeDownloader&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/mifi/lossless-cut">mifi/lossless-cut&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.capcut.com/zh-tw/">CapCut&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/Andrews54757/FastStream">Andrews54757/FastStream&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="message">Message&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://emojipedia.org/">Emojipedia&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="network">Network&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/rejetto/hfs">rejetto/hfs&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/terreng/simple-web-server">terreng/simple-web-server&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/emanuele-f/PCAPdroid">emanuele-f/PCAPdroid&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="package-manager">Package Manager&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/marticliment/UniGetUI">marticliment/UniGetUI&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="translation">Translation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://chromewebstore.google.com/detail/%E6%B2%99%E6%8B%89%E7%BF%BB%E8%AD%AF%EF%BC%9A%E8%81%9A%E5%90%88%E5%AD%97%E5%85%B8%20%E3%80%81%E5%8A%83%E8%A9%9E%E7%BF%BB%E8%AD%AF%20%26%20%E6%9F%A5%E8%A9%9E/kmmcnncdadfmbjkoloakclhfllocaeap">沙拉翻譯：聚合字典 、劃詞翻譯 &amp;amp; 查詞 - Chrome 線上應用程式商店&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/dmMaze/BallonsTranslator">dmMaze/BallonsTranslator&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="search">Search&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://felo.ai/zh-Hant/search">Felo - 您的免費 AI 搜尋引擎&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="site">Site&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=NrpnYQDQ5s4">史上最簡單「一頁式網站」建置工具！ | Google Sites 協作平台快速上手&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>AI - Stable diffusion - Quick Start</title><link>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---quick-start/</link><pubDate>Mon, 17 Feb 2025 20:40:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---quick-start/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;ul>
&lt;li>⚠️ 這是一篇新手導向的筆記，目的不在於精準解釋。&lt;/li>
&lt;li>⚠️ 環境配置請參考 &lt;code>AI - Stable diffusion - Environment&lt;/code>&lt;/li>
&lt;li>⚠️ &lt;strong>Checkpoint&lt;/strong> 一般會提供推薦的參數設置，建議依據模型的特性調整，以獲得最佳效果。&lt;/li>
&lt;/ul>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://civitai.com/">Civitai: The Home of Open-Source Generative AI&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="checkpoint">Checkpoint&lt;/h2>
&lt;p>決定生成圖片的基礎風格。&lt;/p>
&lt;ul>
&lt;li>寫實風格 (Photorealistic)&lt;/li>
&lt;li>動漫風 (Anime)&lt;/li>
&lt;li>油畫風格 (Painting)&lt;/li>
&lt;li>科幻賽博龐克 (Cyberpunk)&lt;/li>
&lt;li>像素風格 (Pixel Art)&lt;/li>
&lt;/ul>
&lt;h2 id="lora">LoRA&lt;/h2>
&lt;p>輕量化微調模型可額外載入來增強特定風格或角色。&lt;/p>
&lt;ul>
&lt;li>簡單的比喻來形容 LoRA 模型，那就是「濾鏡」&lt;/li>
&lt;/ul>
&lt;h2 id="embedding">Embedding&lt;/h2>
&lt;p>增強對某些 Prompt 的理解。&lt;/p>
&lt;h2 id="vae">VAE&lt;/h2>
&lt;p>提高圖片細節與顏色準確度。&lt;/p>
&lt;ul>
&lt;li>📝 部分 Checkpoints 會內建（Baked）VAE，如使用外部 VAE，請確認是否需要覆蓋內建版本。&lt;/li>
&lt;li>⚠️ 如果發現圖片的型都對，但只有顏色壞掉，通常都是 VAE 的問題。&lt;/li>
&lt;/ul>
&lt;h2 id="sampler--schedule">Sampler + Schedule&lt;/h2>
&lt;p>Sampler 是從雜訊圖到成品的&lt;strong>去噪算法&lt;/strong>。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>快速收斂&lt;/strong> – 能迅速找到解答，適合驗證創意和想法。&lt;/li>
&lt;li>&lt;strong>高品質收斂&lt;/strong> – 需較長時間，但能提供更精確結果。&lt;/li>
&lt;li>&lt;strong>無固定收斂&lt;/strong> – 無明確收斂條件，為創新提供更大空間。&lt;/li>
&lt;/ul>
&lt;p>Schedule 是從雜訊圖到成品的&lt;strong>去噪程度&lt;/strong>。&lt;/p></description></item><item><title>AI - Stable diffusion - Extensions</title><link>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---extensions/</link><pubDate>Mon, 10 Feb 2025 22:16:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---extensions/</guid><description>&lt;h2 id="a1111-sd-webui-tagcomplete">a1111-sd-webui-tagcomplete&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/DominikDoom/a1111-sd-webui-tagcomplete">DominikDoom/a1111-sd-webui-tagcomplete&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="sd-webui-prompt-all-in-one">sd-webui-prompt-all-in-one&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Physton/sd-webui-prompt-all-in-one">Physton/sd-webui-prompt-all-in-one&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="adetailer">adetailer&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Bing-su/adetailer">Bing-su/adetailer&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="sd-webui-photopea-embed">sd-webui-photopea-embed&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/yankooliveira/sd-webui-photopea-embed">yankooliveira/sd-webui-photopea-embed&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>AI - Stable diffusion - GUI</title><link>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---gui/</link><pubDate>Mon, 10 Feb 2025 21:16:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---gui/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>建議新手直接從 Forge 入門即可&lt;/p>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1HDBZYBEjK">Comfyui官方客户端 desktop桌面版来了&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=bbuspQWHt9w">AI 繪圖的終極沙盒 ComfyUI 快速上手 #1 無視一切規則，AI 神級繪圖工具還給你全方位掌控權！&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=g3COb2joy1A">AI 繪圖的終極沙盒 ComfyUI 快速上手 #2 - LoRA 微調模型 &amp;amp; AI 影像畫質提升&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=rMlZ2Yaw3Ko">AI 繪圖的終極沙盒 ComfyUI 快速上手 #3 - ControlNet 精確構圖技巧&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="automatic1111">&lt;a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui">Automatic1111&lt;/a>&lt;/h2>
&lt;p>是最早推出的圖形使用者介面之一，為使用者提供了直觀且功能豐富的操作平台。由於其開源性質和強大的社群支持，許多初學者和開發者選擇從 Automatic1111 入手，逐步熟悉 Stable Diffusion 的各項功能和應用。&lt;/p>
&lt;p>
 &lt;img src="https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/refs/heads/master/screenshot.png" alt="Automatic1111 Screenshot">

&lt;/p>
&lt;h2 id="forge">&lt;a href="https://github.com/lllyasviel/stable-diffusion-webui-forge">Forge&lt;/a>&lt;/h2>
&lt;p>基於 Automatic1111 進行了多項優化&lt;/p>
&lt;ul>
&lt;li>記憶體控制優化且推理速度提升&lt;/li>
&lt;li>算法優化&lt;/li>
&lt;li>新增取樣器&lt;/li>
&lt;li>簡化的命令標誌&lt;/li>
&lt;/ul>
&lt;p>介面與 Automatic1111 高度相似，基本能無痛從 Automatic1111 轉移。&lt;/p>
&lt;pre tabindex="0">&lt;code>set COMMANDLINE_ARGS=--xformers --no-half-vae --medvram
&lt;/code>&lt;/pre>&lt;h2 id="comfyui">&lt;a href="https://github.com/comfyanonymous/ComfyUI">ComfyUI&lt;/a>&lt;/h2>
&lt;p>是一個開源的節點式圖形介面，允許使用者通過直觀的節點系統設計和執行複雜的工作流程。&lt;/p>
&lt;p>
 &lt;img src="https://github.com/user-attachments/assets/7ccaf2c1-9b72-41ae-9a89-5688c94b7abe" alt="ComfyUI Screenshot">

&lt;/p></description></item><item><title>AI - Stable diffusion - Environment</title><link>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---environment/</link><pubDate>Mon, 10 Feb 2025 20:13:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---environment/</guid><description>&lt;h2 id="local-deployment">Local deployment&lt;/h2>
&lt;p>⚠️ 以下皆須安裝指定版本不可貿然升級&lt;/p>
&lt;ul>
&lt;li>nvidia 驅動更新至最新&lt;/li>
&lt;li>cuda: &lt;a href="https://developer.nvidia.com/cuda-12-1-0-download-archive">CUDA 12.1&lt;/a>
&lt;ul>
&lt;li>檢查顯卡支援的最高 cuda 支援: &lt;code>nvidia-smi&lt;/code>&lt;/li>
&lt;li>顯示CUDA編譯工具的版本信息: &lt;code>nvcc --version&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Python: &lt;a href="https://www.python.org/ftp/python/3.10.11/python-3.10.11-amd64.exe">Python 3.10.11&lt;/a>
&lt;ul>
&lt;li>&lt;code>python --version&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Git: &lt;a href="https://git-fork.com/">Fork&lt;/a>&lt;/li>
&lt;li>GUI: &lt;a href="https://github.com/lllyasviel/stable-diffusion-webui-forge">lllyasviel/stable-diffusion-webui-forge&lt;/a>&lt;/li>
&lt;li>clone 上述專案，執行 &lt;code>webui.bat&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="google-colab">Google Colab&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/gutris1/segsmaker">gutris1/segsmaker&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/cagliostrolab/forge-colab">cagliostrolab/forge-colab&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="civitai-api-key">Civitai API Key&lt;/h2>
&lt;blockquote>
&lt;p>Menu &amp;gt; Account Settings(齒輪 icon) &amp;gt; API Keys&lt;/p>&lt;/blockquote></description></item><item><title>Game Development - Web Game - Device Evaluation</title><link>https://HoshikawaRyuukou.github.io/posts/game-development---web-game---device-evaluation/</link><pubDate>Sun, 09 Feb 2025 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/game-development---web-game---device-evaluation/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>Web 遊戲的測試免不了要在實機上觀測 FPS 數據。&lt;/p>
&lt;h2 id="device">Device&lt;/h2>
&lt;ol>
&lt;li>開啟開發者選項&lt;/li>
&lt;li>USB 為資料傳輸模式&lt;/li>
&lt;/ol>
&lt;h2 id="browser---firefox">Browser - Firefox&lt;/h2>
&lt;ol>
&lt;li>手機 Firefox 瀏覽器開啟 USB 偵錯&lt;/li>
&lt;li>網址列輸入 &lt;code>about:debugging#/setup&lt;/code>&lt;/li>
&lt;li>連接 USB 裝置&lt;/li>
&lt;li>選擇分頁&lt;/li>
&lt;/ol>
&lt;h2 id="console">Console&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">lastTime&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">performance&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">now&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">frame&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">loop&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">now&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">performance&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">now&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">frame&lt;/span>&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">now&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#75af00">lastTime&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1000&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">`FPS: &lt;/span>&lt;span style="color:#d88200">${&lt;/span>&lt;span style="color:#75af00">frame&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">`&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">lastTime&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">now&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">frame&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">requestAnimationFrame&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">loop&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">loop&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">})();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>AI - Stable diffusion - Overview</title><link>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---overview/</link><pubDate>Thu, 06 Feb 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---overview/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>建議閱讀順序&lt;/p>
&lt;ul>
&lt;li>AI - Stable diffusion - Environment&lt;/li>
&lt;li>AI - Stable diffusion - GUI&lt;/li>
&lt;li>AI - Stable diffusion - Quick Start&lt;/li>
&lt;li>AI - Stable diffusion - Extensions&lt;/li>
&lt;li>AI - Stable diffusion - CheckPoints&lt;/li>
&lt;li>AI - Stable diffusion - Resources&lt;/li>
&lt;/ul>
&lt;h2 id="core-working-principles">Core Working Principles&lt;/h2>
&lt;p>Stable Diffusion 主要包含三個核心技術：&lt;/p>
&lt;h3 id="前向擴散forward-diffusion">前向擴散（Forward Diffusion）&lt;/h3>
&lt;ul>
&lt;li>先從大量圖片資料集中學習圖片特徵。&lt;/li>
&lt;li>然後，系統會逐步加入高斯雜訊（Gaussian Noise），使圖片變得模糊、無法辨識。&lt;/li>
&lt;li>最後，這個過程會讓圖片變成完全的純雜訊（random noise）。&lt;/li>
&lt;/ul>
&lt;h3 id="反向去噪reverse-denoising--u-net">反向去噪（Reverse Denoising / U-Net）&lt;/h3>
&lt;ul>
&lt;li>Stable Diffusion 學習如何逆向去噪，一步步從雜訊還原出清晰的圖片。&lt;/li>
&lt;li>這部分的關鍵是 U-Net 神經網路架構，它可以在多層次的細節中，捕捉圖片的各種特徵。&lt;/li>
&lt;/ul>
&lt;h3 id="文本引導text-conditioning--clip">文本引導（Text Conditioning / CLIP）&lt;/h3>
&lt;ul>
&lt;li>Stable Diffusion 之所以能生成符合指令的圖片，是因為它使用了CLIP（Contrastive Language-Image Pretraining）。&lt;/li>
&lt;li>CLIP 會將文字轉換成向量表示（latent embeddings），這些向量再指導模型生成符合描述的圖像。&lt;/li>
&lt;/ul>
&lt;h3 id="diagram">Diagram&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://developer.nvidia.com/blog/improving-diffusion-models-as-an-alternative-to-gans-part-1/">Improving Diffusion Models as an Alternative To GANs, Part 1&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>
 &lt;img src="https://developer-blogs.nvidia.com/wp-content/uploads/2022/04/Generation-with-Diffusion-Models.png" alt="123">

&lt;/p></description></item><item><title>Unity - Performance - Render - Overdraw</title><link>https://HoshikawaRyuukou.github.io/posts/unity---performance---render---overdraw/</link><pubDate>Wed, 05 Feb 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---performance---render---overdraw/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>Overdraw 就是 &lt;strong>「同一個像素點被繪製多次」&lt;/strong>，當 Unity 把一個畫面繪製出來時，所有 Sprite 都是 &lt;strong>從後到前（Back to Front）&lt;/strong> 疊加上去。如果某個像素被重複繪製了很多次，GPU 的工作量就會變大，導致 &lt;strong>效能下降&lt;/strong>。&lt;/p>
&lt;h2 id="cases">Cases&lt;/h2>
&lt;h3 id="大量重疊的透明-sprite">大量重疊的透明 Sprite&lt;/h3>
&lt;ul>
&lt;li>2D 遊戲裡很多元素是有 &lt;strong>透明區域（Alpha 通道）&lt;/strong> 的，例如 UI、特效、光影效果。&lt;/li>
&lt;li>GPU 必須計算這些透明度，並且疊加不同圖層的顏色，這個過程很吃資源。&lt;/li>
&lt;/ul>
&lt;h3 id="過多的粒子--特效">過多的粒子 &amp;amp; 特效&lt;/h3>
&lt;ul>
&lt;li>如果妳的遊戲有超多粒子特效，特別是 &lt;strong>煙霧、火焰、閃光&lt;/strong> 這種會有大量透明像素的元素。&lt;/li>
&lt;/ul>
&lt;h3 id="大範圍透明圖">大範圍透明圖&lt;/h3>
&lt;ul>
&lt;li>例如 UI 設計時，一個按鈕可能只是中間一小塊有圖案，但它的整張貼圖是 512 x 512 的 PNG，外圍全是透明的區域，這樣就會讓 GPU 花額外的時間去計算透明像素，而不是有效渲染有內容的部分。&lt;/li>
&lt;/ul>
&lt;h3 id="畫面排序導致重複繪製">畫面排序導致重複繪製&lt;/h3>
&lt;ul>
&lt;li>Unity 會根據 &lt;code>Sorting Layer&lt;/code> 和 &lt;code>Order in Layer&lt;/code> 來決定渲染順序。&lt;/li>
&lt;li>如果物件排序不合理，可能會讓後面的 Sprite 被前面的遮住，但 GPU 還是得先畫出來，結果白白浪費效能。&lt;/li>
&lt;/ul>
&lt;h2 id="debug">Debug&lt;/h2>
&lt;h3 id="unity-內建了檢測工具">Unity 內建了檢測工具&lt;/h3>
&lt;ol>
&lt;li>打開 &lt;strong>Scene 視圖&lt;/strong>&lt;/li>
&lt;li>點擊 &lt;strong>Shading Mode&lt;/strong>&lt;/li>
&lt;li>選擇 &lt;strong>Overdraw Mode&lt;/strong>&lt;/li>
&lt;/ol>
&lt;h3 id="overdraw-視覺化顯示方式">Overdraw 視覺化顯示方式&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>藍色 / 黑色&lt;/strong> → 幾乎沒問題&lt;/li>
&lt;li>&lt;strong>綠色 / 黃色&lt;/strong> → 有點 Overdraw，但還能接受&lt;/li>
&lt;li>&lt;strong>紅色 / 白色&lt;/strong> → 🚨 過度繪製嚴重，GPU 負擔大，要優化了！&lt;/li>
&lt;/ul>
&lt;h2 id="optimization">Optimization&lt;/h2>
&lt;h3 id="減少透明區域">減少透明區域&lt;/h3>
&lt;ul>
&lt;li>盡量 &lt;strong>縮小 Sprite 的實際範圍&lt;/strong>，不要讓透明區域過大。&lt;/li>
&lt;li>例如 UI 按鈕的 Sprite，最好裁剪成 &lt;strong>剛好包住可見部分&lt;/strong>，而不是整張 512x512 貼圖全都透明。&lt;/li>
&lt;/ul>
&lt;h3 id="善用-sprite-packing圖集">善用 Sprite Packing（圖集）&lt;/h3>
&lt;ul>
&lt;li>把小圖合併成 &lt;strong>Sprite Atlas&lt;/strong>，讓 GPU 少做一些不必要的切換，提高效率。&lt;/li>
&lt;/ul>
&lt;h3 id="減少畫面重疊的透明圖層">減少畫面重疊的透明圖層&lt;/h3>
&lt;ul>
&lt;li>UI 設計時，盡量讓按鈕、圖示等 &lt;strong>不要有過多重疊&lt;/strong>。&lt;/li>
&lt;li>如果 UI 有半透明背景，可以嘗試改用 &lt;strong>單一大圖片代替多個小圖片疊加&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;h3 id="控制粒子數量">控制粒子數量&lt;/h3>
&lt;ul>
&lt;li>降低粒子數量&lt;/li>
&lt;li>縮小粒子範圍&lt;/li>
&lt;li>減少透明度計算（調整 Shader）&lt;/li>
&lt;/ul>
&lt;h3 id="改善-sorting-order">改善 Sorting Order&lt;/h3>
&lt;ul>
&lt;li>避免&lt;strong>不必要的遮擋運算&lt;/strong>，如果一個物件永遠會被其他東西蓋住，考慮 &lt;strong>改變它的 Sorting Layer&lt;/strong>，甚至在不必要時直接&lt;strong>不渲染它&lt;/strong>（SetActive(false)）。&lt;/li>
&lt;/ul>
&lt;h3 id="使用-shader-優化透明渲染">使用 Shader 優化透明渲染&lt;/h3>
&lt;ul>
&lt;li>如果 Sprite &lt;strong>不需要半透明效果&lt;/strong>，可以換成 &lt;strong>Opaque Shader（不透明著色器）&lt;/strong>，這樣 GPU 就不會計算透明度疊加。&lt;/li>
&lt;/ul>
&lt;h3 id="改用-tilemap">改用 Tilemap&lt;/h3>
&lt;ul>
&lt;li>如果遊戲是 2D 地圖類型（像素風格、平面地圖等），可以用 Unity &lt;strong>Tilemap&lt;/strong> 來減少 Overdraw，因為 Tilemap 會幫妳合併小區塊來優化繪製。&lt;/li>
&lt;/ul></description></item><item><title>AI - Stable diffusion - Resources</title><link>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---resources/</link><pubDate>Wed, 05 Feb 2025 20:13:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---resources/</guid><description>&lt;h2 id="community">Community&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://civitai.com/">Civitai&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.qpipi.com/">Qpipi_AI绘画社区和SD模型&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="channel">Channel&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.hoshikou-ailabo.net/">星光のAIラボ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sorenuts.jp/">SoreNuts&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="prompts">Prompts&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://blog.256pages.com/sdxl-prompts-advanced-guide-1/">SDXL Prompts 進階指南 (1) - 鏡頭視角距離&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.256pages.com/stable-diffusion-prompt-distance/">Stable Diffusion 用 prompt 控制鏡頭距離及角度&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://civitai.com/articles/8804/illustrious-xl-noobai-xl-hairstyles">Illustrious XL / NoobAI XL Hairstyles&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="gallery">Gallery&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://pixai.art/">PixAI.Art&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://aibooru.online/">AIBooru&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://civitai.com/user/Lizardon1025/images">Lizardon1025&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://civitai.com/user/pepegles/images">pepegles&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="artists">Artists&lt;/h2>
&lt;ul>
&lt;li>rella&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>&lt;a href="https://arca.live/b/aiart/73560719">artist list&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://danbooru.donmai.us/artists">Artists | Danbooru&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://danbooru.donmai.us/posts?tags=akitetsu">Akitetsu | Danbooru&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://danbooru.donmai.us/posts?tags=sakamoto_masaru">Sakamoto Masaru | Danbooru&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://danbooru.donmai.us/posts?tags=fight_yoghurt">Fight Yoghurt | Danbooru&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://danbooru.donmai.us/posts?tags=reia_76">Reia 76 | Danbooru&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://danbooru.donmai.us/posts?page=1&amp;amp;tags=kagto_%28alterna%29">Kagto (Alterna) | Danbooru&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gelbooru.com/index.php?page=post&amp;amp;s=list&amp;amp;tags=mo_%28kireinamo%29">mo (kireinamo) | Gelbooru&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://danbooru.donmai.us/posts?page=4&amp;amp;tags=happoubi_jin">Happoubi Jin | Danbooru&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://danbooru.donmai.us/posts?page=3&amp;amp;tags=ohisashiburi">Ohisashiburi | Danbooru&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://danbooru.donmai.us/posts?tags=shirotaka_%285choume%29">Shirotaka (5Choume) | Danbooru&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://danbooru.donmai.us/posts?tags=rokuwata_tomoe">Rokuwata Tomoe | Danbooru&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://danbooru.donmai.us/posts?tags=fight_yoghurt">Fight Yoghurt | Danbooru&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://danbooru.donmai.us/posts?tags=hidis0086">Hidis0086 | Danbooru&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://danbooru.donmai.us/posts?page=2&amp;amp;tags=ulrich_%28tagaragakuin%29">Ulrich (Tagaragakuin) | Danbooru&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://danbooru.donmai.us/posts?tags=haimura_kiyotaka">Haimura Kiyotaka | Danbooru&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>&lt;a href="https://danbooru.donmai.us/posts?tags=qtian">Qtian | Danbooru&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://danbooru.donmai.us/posts?tags=zanya_000">Zanya 000 | Danbooru&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>AI - Stable diffusion - CheckPoints</title><link>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---checkpoints/</link><pubDate>Tue, 04 Feb 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---stable-diffusion---checkpoints/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;ul>
&lt;li>⚠️ 以下主題專注於二次元/動漫風格圖像生成&lt;/li>
&lt;/ul>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.pttweb.cc/bbs/C_Chat/M.1730732828.A.70C">Re: [問題] AI 風格怎麼了嗎？為什麼容易膩？ - 看板C_Chat - PTT網頁版&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="sd15">SD1.5&lt;/h2>
&lt;p>在性能和穩定性上提升很多，社群迎來爆發式成長。&lt;/p>
&lt;h3 id="milestoneevents">Milestone/Events&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Waifu Diffusion&lt;/strong>：這是一個基於 Stable Diffusion 的模型，專注於生成二次元風格的圖像。該模型使用 Danbooru 資料集進行訓練，適合生成各類動漫風格的圖像。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>NovelAI 模型外洩（NAI）&lt;/strong>：NovelAI 是一個提供 AI 輔助創作的服務平台，其專注於二次元圖像生成的模型曾發生外洩事件。該模型同樣使用 Danbooru 資料集進行訓練。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Anything 系列模型&lt;/strong>：Anything V3 和 V4 是專注於二次元圖像生成的模型，具有較高的生成質量和風格多樣性。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>ChilloutMix&lt;/strong>：這是一個專注於生成寫實風格圖像的模型，能夠生成高品質的寫實人物圖像。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="resolutions">Resolutions&lt;/h3>
&lt;ul>
&lt;li>512 x 512 : 1:1&lt;/li>
&lt;li>512 X 768 : 2:3&lt;/li>
&lt;/ul>
&lt;h2 id="sdxl">SDXL&lt;/h2>
&lt;p>相比於 SD1.5 在多方面有顯著的提升&lt;/p>
&lt;ul>
&lt;li>&lt;strong>更大的模型規模&lt;/strong>：SDXL 的參數量遠超 SD1.5，這使其能夠捕捉更複雜的圖像特徵。&lt;/li>
&lt;li>&lt;strong>更高分辨率&lt;/strong>：SDXL 支持更高分辨率的圖像生成。&lt;/li>
&lt;li>&lt;strong>雙模型架構&lt;/strong>：SDXL 採用雙模型架構，包含一個基礎模型和一個精煉模型。基礎模型生成初步圖像，精煉模型進一步提升細節和質量，這種分工協作顯著提升了生成效果。&lt;/li>
&lt;li>&lt;strong>更強的文本理解能力&lt;/strong>：SDXL 在理解複雜提示詞方面表現更好，能更準確地將文本描述轉化為圖像內容，減少誤解和偏差。&lt;/li>
&lt;/ul>
&lt;h3 id="milestoneevents-1">Milestone/Events&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Pony Diffusion&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>訓練流程有使用審美分級標籤。&lt;/li>
&lt;li>原版 Pony 生成的結果接近歐美審美。&lt;/li>
&lt;li>Pony 系明顯缺點用色偏暗偏髒。&lt;/li>
&lt;li>Pony 在「多人互動」方面與 nsfw 表現很好。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>NovelAI 3 (NAI3)&lt;/strong>：&lt;/p></description></item><item><title>Network - Protocol - SSH</title><link>https://HoshikawaRyuukou.github.io/posts/network---protocol---ssh/</link><pubDate>Sun, 02 Feb 2025 20:20:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/network---protocol---ssh/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>SSH（Secure Shell）是一種加密的網路協議，允許你安全地連接到遠端伺服器。對 Git 來說，使用 SSH 主要有這些優勢：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>免密碼認證&lt;/strong>：使用 SSH 金鑰（SSH Keys）後，不需要每次都輸入帳號密碼。&lt;/li>
&lt;li>&lt;strong>更安全&lt;/strong>：SSH 使用非對稱加密，比 HTTPS（帳號 + 密碼）更安全。&lt;/li>
&lt;li>&lt;strong>更適合自動化&lt;/strong>：如果你要寫腳本來自動處理 Git 操作，SSH 會比 HTTPS 更方便。&lt;/li>
&lt;/ul>
&lt;h2 id="env---windows">Env - Windows&lt;/h2>
&lt;p>⚠️ 以下皆使用 PowerShell 操作&lt;/p>
&lt;h3 id="step-1-檢查-windows-是否已安裝-openssh">Step 1: 檢查 Windows 是否已安裝 OpenSSH&lt;/h3>
&lt;p>Windows 10 以上的系統已經內建 OpenSSH&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh -V
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果有顯示類似這樣的版本資訊，代表 OpenSSH 已經安裝：&lt;/p>
&lt;pre tabindex="0">&lt;code>OpenSSH_for_Windows_8.1p1, LibreSSL 3.0.2
&lt;/code>&lt;/pre>&lt;h3 id="step-2-產生-ssh-金鑰">Step 2: 產生 SSH 金鑰&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ps1" data-lang="ps1">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ssh-keygen&lt;/span> &lt;span style="color:#111">-t&lt;/span> &lt;span style="color:#111">rsa&lt;/span> &lt;span style="color:#111">-b&lt;/span> &lt;span style="color:#ae81ff">4096&lt;/span> &lt;span style="color:#111">-C&lt;/span> &lt;span style="color:#d88200">&amp;#34;your-email@example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>t rsa&lt;/code>：使用 RSA 演算法（GitHub 推薦）&lt;/li>
&lt;li>&lt;code>b 4096&lt;/code>：密鑰長度 4096 bits（更安全）&lt;/li>
&lt;li>&lt;code>C &amp;quot;your-email@example.com&amp;quot;&lt;/code>：加上你的 Email 作為標註&lt;/li>
&lt;/ul>
&lt;h3 id="step-3-儲存金鑰">Step 3: 儲存金鑰&lt;/h3>
&lt;p>執行指令後，系統會詢問你要存在哪裡：&lt;/p></description></item><item><title>Github - SSH Key</title><link>https://HoshikawaRyuukou.github.io/posts/github---ssh-key/</link><pubDate>Sun, 02 Feb 2025 13:17:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/github---ssh-key/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>在 GitHub 上，SSH Key 有兩種加法：&lt;/p>
&lt;h3 id="1-加到個人帳戶">1. 加到個人帳戶&lt;/h3>
&lt;ul>
&lt;li>適用於：你要用 SSH 可以 &lt;strong>&lt;code>存取你有權限的所有 Repo&lt;/code>&lt;/strong>&lt;/li>
&lt;li>位置：GitHub &amp;gt; Settings &amp;gt; SSH and GPG keys&lt;/li>
&lt;/ul>
&lt;h3 id="2-加到-github-組織的-deploy-key組織的特定倉庫">2. 加到 GitHub 組織的 Deploy Key（組織的特定倉庫）&lt;/h3>
&lt;ul>
&lt;li>適用於：你的 SSH Key 只 &lt;strong>&lt;code>存取某個特定的組織 Repo&lt;/code>&lt;/strong>，而不是整個帳號&lt;/li>
&lt;li>位置：GitHub 組織 &amp;gt; 目標 Repository &amp;gt; Settings &amp;gt; Deploy keys&lt;/li>
&lt;/ul>
&lt;p>📝 如果你是組織的開發者，通常是第一種（加到個人帳戶），因為組織管理員不一定會讓你直接加 Deploy Key。&lt;/p></description></item><item><title>Unity - Package Manager - Import a private package from GitHub repository</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package-manager---import-a-private-package-from-github-repository/</link><pubDate>Sat, 01 Feb 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package-manager---import-a-private-package-from-github-repository/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>Unity Package Manager (UPM) 支援從 Git repository 直接安裝與管理 package，這對於團隊開發和共享自定義 package 非常有用。&lt;/p>
&lt;ul>
&lt;li>⚠️ 如果是 organization 協同，需開啟相關的成員權限。&lt;/li>
&lt;li>⚠️ &lt;a href="https://docs.unity3d.com/Manual/upm-config-https-git.html">Using private repositories with HTTPS Git URLs&lt;/a>，提到的 Git Credential Manager 似乎不起作用。&lt;/li>
&lt;/ul>
&lt;h2 id="solution-1---ssh-建議">Solution 1 - SSH (建議)&lt;/h2>
&lt;ul>
&lt;li>⚠️ 需確保 SSH Key 已添加到 GitHub。&lt;/li>
&lt;/ul>
&lt;h2 id="solution-2---personal-access-token">Solution 2 - Personal Access Token&lt;/h2>
&lt;ul>
&lt;li>⚠️ 建議使用較客製化的 Fine-Grained Token&lt;/li>
&lt;li>⚠️ Resource owner 要注意(如果有多個身分)&lt;/li>
&lt;/ul>
&lt;h3 id="guide">Guide&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://medium.com/@dasannikov/install-unity-package-from-a-private-github-repository-9a40066b335f">Install Unity Package from a private GitHub repository&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="steps">Steps&lt;/h3>
&lt;ol>
&lt;li>至 GitHub &amp;laquo;&lt;strong>帳戶設定&lt;/strong>&amp;raquo;（非儲存庫設定）&lt;/li>
&lt;li>Developer Settings -&amp;gt; Personal Access Tokens -&amp;gt; Fine-Grained Tokens&lt;/li>
&lt;li>生成 Token (&lt;strong>Read-Only Permission&lt;/strong> for the repo &lt;strong>Content&lt;/strong>).&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>&amp;#34;com.yourusername.yourpackage&amp;#34;: &amp;#34;git+https://x-oauth-basic:&amp;lt;token&amp;gt;@&amp;lt;repo&amp;gt;?path=&amp;lt;folder&amp;gt;&amp;#34;
&lt;/code>&lt;/pre></description></item><item><title>Hugo - Github Actions + Github Pages</title><link>https://HoshikawaRyuukou.github.io/posts/hugo---github-actions-+-github-pages/</link><pubDate>Thu, 30 Jan 2025 14:12:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/hugo---github-actions-+-github-pages/</guid><description>&lt;h2 id="github-actions">GitHub Actions&lt;/h2>
&lt;h3 id="gh-pagesyml">gh-pages.yml&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">github pages&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">on&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">push&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">branches&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">pull_request&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">jobs&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">deploy&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">runs-on&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">ubuntu-22.04&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">steps&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">uses&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">actions/checkout@v3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">submodules&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">fetch-depth&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#75715e"># Fetch all history for .GitInfo and .Lastmod&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Setup Hugo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">uses&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">peaceiris/actions-hugo@v3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hugo-version&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;latest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extended&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Build&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">run&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">hugo --minify&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Deploy&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">uses&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">peaceiris/actions-gh-pages@v4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">if&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">github.ref == &amp;#39;refs/heads/main&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">github_token&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">${{ secrets.GITHUB_TOKEN }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">publish_dir&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">./public&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Hugo - Image Reference</title><link>https://HoshikawaRyuukou.github.io/posts/hugo---image-reference/</link><pubDate>Thu, 30 Jan 2025 14:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/hugo---image-reference/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>使用 Hugo 建立網站時，Markdown 編輯器預覽圖片時可能遇到的問題。&lt;/p>
&lt;p>原因是相對路徑&lt;/p>
&lt;ul>
&lt;li>文章位於 &lt;code>/content/posts&lt;/code> 目錄&lt;/li>
&lt;li>圖片位於 &lt;code>/static/images&lt;/code> 目錄&lt;/li>
&lt;/ul>
&lt;p>Hugo 能夠正確渲染圖片，因為它知道 /images 是相對於 static 目錄的路徑。然而，許多 Markdown 編輯器在預覽時，無法識別這種相對路徑，導致圖片無法顯示。&lt;/p>
&lt;h2 id="solutions">Solutions&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://mikefrobbins.com/2023/02/08/rendering-images-in-markdown-preview-of-hugo-site/">Rendering Images in Markdown Preview of Hugo Site&lt;/a>
&lt;ul>
&lt;li>在 Hugo 項目的根目錄創建一個指向 static/images 目錄的符號連結（symlink）。&lt;/li>
&lt;li>以管理員權限開啟 cmd&lt;/li>
&lt;li>mklink /D images .\static\images&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Hugo - Note</title><link>https://HoshikawaRyuukou.github.io/posts/hugo---note/</link><pubDate>Thu, 30 Jan 2025 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/hugo---note/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>Blog/筆記軟體 平台玲瑯滿目，但依賴於平台的風險難以忽視(倒站/政策改變)，網站搬家也讓人很頭疼。此 Blog 採方案是 &lt;code>Github Pages + Hugo&lt;/code>。&lt;/p>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://gohugo.io/">The world’s fastest framework for building websites | Hugo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/gohugoio/hugo">gohugoio/hugo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://devbricker.github.io/post/hugo/deploy/hugo_environment/">Hugo 從零開始 環境安裝(Windows)&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="environment">Environment&lt;/h2>
&lt;ul>
&lt;li>至 &lt;a href="https://github.com/gohugoio/hugo/releases">Hugo github release&lt;/a> 下載執行檔 (hugo_extended)&lt;/li>
&lt;li>設置環境變數&lt;/li>
&lt;li>&lt;code>hugo version&lt;/code> : 檢視 hugo 版本&lt;/li>
&lt;/ul>
&lt;h2 id="quick-chat-1">Quick Chat&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/adityatelange/hugo-PaperMod">adityatelange/hugo-PaperMod&lt;/a>
&lt;ul>
&lt;li>建議新手使用該主題練習&lt;/li>
&lt;li>社群較活躍&lt;/li>
&lt;li>教學較完善&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="themes">Themes&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://themes.gohugo.io/">Hugo Themes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/hoshikawaryuukou/hugo-theme-cactus">hoshikawaryuukou/hugo-theme-cactus&lt;/a>
&lt;ul>
&lt;li>本 Blog Theme 基於以下 repository 修改&lt;/li>
&lt;li>&lt;a href="https://github.com/monkeyWzr/hugo-theme-cactus">monkeyWzr/hugo-theme-cactus&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/OmeletWithoutEgg/hugo-theme-cactus">OmeletWithoutEgg/hugo-theme-cactus&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="custom">Custom&lt;/h2>
&lt;ul>
&lt;li>使用 git submodule 導入主題。&lt;/li>
&lt;li>不要直接修改主題範本文件。&lt;/li>
&lt;li>要修改的文件從主題範本 &lt;strong>複製(文件夾結構要相同)&lt;/strong> 出來到根目錄，&lt;a href="https://gohugo.io/templates/lookup-order/">Hugo 會照優先度來處理&lt;/a>。&lt;/li>
&lt;li>多數主題都有配置 Google Analytics，只需填入 id 到 config 即可。&lt;/li>
&lt;/ul></description></item><item><title>Github - GitHub CLI</title><link>https://HoshikawaRyuukou.github.io/posts/github---github-cli/</link><pubDate>Wed, 29 Jan 2025 13:16:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/github---github-cli/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>發現 GitHub 網頁面板上好像沒辦法直接刪除 deployment，得用 GitHub CLI 來操作。&lt;/p>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://cli.github.com/">GitHub CLI | Take GitHub to the command line&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="memo">Memo&lt;/h2>
&lt;h3 id="登入">登入&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>gh auth login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="僅保留最近-200-個部屬其餘的刪除">僅保留最近 200 個部屬，其餘的刪除&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ps1" data-lang="ps1">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">gh&lt;/span> &lt;span style="color:#111">api&lt;/span> &lt;span style="color:#111">repos&lt;/span>&lt;span style="color:#111">/{&lt;/span>&lt;span style="color:#111">owner&lt;/span>&lt;span style="color:#111">}/{&lt;/span>&lt;span style="color:#111">repo&lt;/span>&lt;span style="color:#111">}/&lt;/span>&lt;span style="color:#111">deployments&lt;/span> &lt;span style="color:#111">-&lt;/span>&lt;span style="color:#111">-paginate&lt;/span> &lt;span style="color:#111">-&lt;/span>&lt;span style="color:#111">-jq&lt;/span> &lt;span style="color:#d88200">&amp;#39;.[].id&amp;#39;&lt;/span> &lt;span style="color:#111">|&lt;/span> &lt;span style="color:#111">Select-Object&lt;/span> &lt;span style="color:#111">-Skip&lt;/span> &lt;span style="color:#ae81ff">200&lt;/span>&lt;span style="color:#111">|&lt;/span> &lt;span style="color:#111">ForEach-Object&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Write-Host&lt;/span> &lt;span style="color:#d88200">&amp;#34;Deleting deployment &lt;/span>&lt;span style="color:#111">$_&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">gh&lt;/span> &lt;span style="color:#111">api&lt;/span> &lt;span style="color:#111">-&lt;/span>&lt;span style="color:#111">-method&lt;/span> &lt;span style="color:#111">DELETE&lt;/span> &lt;span style="color:#111">repos&lt;/span>&lt;span style="color:#111">/{&lt;/span>&lt;span style="color:#111">owner&lt;/span>&lt;span style="color:#111">}/{&lt;/span>&lt;span style="color:#111">repo&lt;/span>&lt;span style="color:#111">}/&lt;/span>&lt;span style="color:#111">deployments&lt;/span>&lt;span style="color:#111">/&lt;/span>&lt;span style="color:#111">$_&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>gh api&lt;/code>：用 GitHub CLI 發送 API 請求。&lt;/li>
&lt;li>&lt;code>repos/{owner}/{repo}/deployments&lt;/code>：指定查詢的 GitHub Repository 和其部署。&lt;/li>
&lt;li>&lt;code>--paginate&lt;/code>：表示如果結果有很多頁，會自動翻頁取得所有部署資訊。&lt;/li>
&lt;li>&lt;code>--jq '.[].id'&lt;/code>：這部分是使用 &lt;code>jq&lt;/code> 來過濾和格式化結果，提取所有部署的 ID。&lt;/li>
&lt;li>&lt;code>Select-Object -Skip 200&lt;/code>：這行會將返回的部署 ID 進行處理，並跳過前 200 個部署。&lt;/li>
&lt;li>&lt;code>ForEach-Object { ... }&lt;/code>：對每一個 ID 執行大括號 &lt;code>{}&lt;/code> 中的命令。&lt;/li>
&lt;li>&lt;code>--method DELETE&lt;/code>：指定 HTTP 請求方法為 DELETE，用來刪除資源。&lt;/li>
&lt;li>&lt;code>repos/{owner}/{repo}/deployments/$_&lt;/code>：指定要刪除的部署，&lt;code>$_&lt;/code> 是當前處理的 deployment ID。&lt;/li>
&lt;/ul></description></item><item><title>Unity - Package - YooAsset</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package---yooasset/</link><pubDate>Wed, 22 Jan 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package---yooasset/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>Addressables 是在 AssetBundle 的基礎上對操作進行更友善的封裝，AssetBundle 有很多要小心的地方&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://juejin.cn/post/7066814466167422989">AssetBundle 卸載&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Addressable System 主要改善幾點&lt;/p>
&lt;ul>
&lt;li>透過 name/label，而是不與資源直接連結，減少因移動或重命名資產而出錯的機會。&lt;/li>
&lt;li>本地或是異地都可以追踪。&lt;/li>
&lt;li>簡化打包和依賴管理(name/label/group/catalog)。&lt;/li>
&lt;li>較好的記憶體管理機制(引用計數)與性能分析系統。&lt;/li>
&lt;/ul>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/tuyoogame/YooAsset">tuyoogame/YooAsset&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="assetbundle">AssetBundle&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://learn.unity.com/tutorial/assets-resources-and-assetbundles#">Assets, Resources and AssetBundles&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.en.uwa4d.com/2022/02/26/case-studies-of-unity-assetbundle-efficient-encryption/">Case Studies of Unity AssetBundle Efficient Encryption&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="addressable-frameworks">Addressable Frameworks&lt;/h3>
&lt;p>不同 Framework 在常規操作上大同小異，可以從資源最多的 Addressables 做觀念入門&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.csdn.net/linxinfa/article/details/122390621">Unity Addressables资源管理方式用起来太爽了，资源打包、加载、热更变得如此轻松（Addressable Asset System | 简称AA）&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/588120058">Unity - Addressables项目总结（一）：基础工作流&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/592124758">Unity - Addressables项目总结（二）：业务需求&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/read/cv11642315/">静态包、动态包有什么区别？何时使用增量更新？Addressables 更新流程大梳理&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="issue">Issue&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://support.unity.com/hc/en-us/articles/208380753-Shaders-are-pink-when-loaded-from-an-AssetBundle">Shaders are pink when loaded from an AssetBundle&lt;/a>
&lt;ul>
&lt;li>大部分時候是 Editor 的問題，關注真機運作如何即可(因為 AssetBundle 是根據指定平台生成的)。&lt;/li>
&lt;li>⚠️ Unity 6 之後似乎無法透過取消 Auto Graphics API 來調整 Graphics API&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="extra">Extra&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.liuocean.com/archives/wei-shi-me-pao-qi-liao-addressable">为什么抛弃了 Addressable&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Unity - Platform - Web</title><link>https://HoshikawaRyuukou.github.io/posts/unity---platform---web/</link><pubDate>Sun, 19 Jan 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---platform---web/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;ul>
&lt;li>⚠️ 使用 &lt;strong>Unity 6&lt;/strong> 開發&lt;/li>
&lt;/ul>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.unity3d.com/6000.0/Documentation/Manual/webgl.html">Unity - Manual: Web&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.unity.com/tutorial/getting-started-with-unity-web">Getting started with Unity Web&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/kazuki_kuriyama/items/3155606bb6cb5861ce68">【Unity】WebGL開発時の注意事項&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/GoodCooking/article/details/136307133">Unity发布webgl获取浏览器的URL&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tech.framesynthesis.co.jp/unity/webgl/">Unity WebGLビルドメモ - フレームシンセシス&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zenn.dev/happy_elements/articles/hekk_ac_20231215">Unity 製 WebGL ゲームを AWS でお手軽公開&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="template">Template&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://seansleblanc.itch.io/better-minimal-webgl-template">(Unity) Better Minimal WebGL Template&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="performance">Performance&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://learn.unity.com/tutorial/getting-started-with-unity-web#670ea950edbc2a2240868db0">Using the Unity Profiler&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.unity.com/tutorial/getting-started-with-unity-web#670ea9d0edbc2a2240868dc1">Using the web platform Diagnostics Overlay tool&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/JohannesDeml/UnityWebGL-LoadingTest?tab=readme-ov-file">Unity WebGL Loading Test&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="host">Host&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/terreng/simple-web-server">terreng/simple-web-server&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/terreng/sws-unity-plugin">terreng/sws-unity-plugin&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="issue">Issue&lt;/h2>
&lt;h3 id="error--failed-to-parse-binary-data-file-buildxxxdatabr">Error : Failed to parse binary data file Build/xxx.data.br&amp;hellip;&lt;/h3>
&lt;blockquote>
&lt;p>Failed to parse binary data file Build/web.data.br (with &amp;ldquo;Content-Type: null&amp;rdquo;), because it is still brotli-compressed. It should have been uncompressed by the browser, but it was unable to do so since the web server provided the compressed content without specifying the HTTP Response Header &amp;ldquo;Content-Encoding: br&amp;rdquo; that would have informed the browser that decompression is needed. Please verify your web server hosting configuration to add the missing &amp;ldquo;Content-Encoding: br&amp;rdquo; HTTP Response Header.&lt;/p></description></item><item><title>AI - Ollama - Google Colab + ngrok</title><link>https://HoshikawaRyuukou.github.io/posts/ai---ollama---google-colab-+-ngrok/</link><pubDate>Thu, 16 Jan 2025 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---ollama---google-colab-+-ngrok/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>參考以下教學&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=ZOCY61424JI">十分钟部署本地离线免费大模型！&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=JfI3K3HwQuI">Ngrok + Ollama | 在世界任何地方与localhost开源大模型聊天&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.gopenai.com/free-inference-is-all-i-need-how-to-run-large-language-models-for-free-using-google-colab-fe961e86503b">Free Inference Is All I Need: How to Run Large Language Models for Free Using Google Colab&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="requirements">Requirements&lt;/h2>
&lt;ul>
&lt;li>註冊 &lt;a href="https://ngrok.com/">ngrok&lt;/a> 帳號，取得 token ( ngrok &amp;gt; Your Authtoken )&lt;/li>
&lt;li>將 token 填至 colab &amp;gt; Secret
&lt;ul>
&lt;li>name : NGROK_AUTH&lt;/li>
&lt;li>value : token&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>本機端使用 &lt;a href="https://chromewebstore.google.com/detail/page-assist-a-web-ui-for/jfgfiigpkhlkbnfnbobbkinehhfdhndo">Page Assist - A Web UI for Local AI Models&lt;/a> 與 Ollama 互動&lt;/li>
&lt;/ul>
&lt;h2 id="steps">Steps&lt;/h2>
&lt;h3 id="安裝必要工具">安裝必要工具&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>!sudo apt-get install -y pciutils
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>!curl https://ollama.ai/install.sh &lt;span style="color:#111">|&lt;/span> sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>!pip install pyngrok
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>安裝 pciutils&lt;/strong>: 提供硬件檢測和配置工具，用於檢查和診斷 GPU 設置。&lt;/li>
&lt;li>&lt;strong>安裝 Ollama&lt;/strong>: 下載並執行 Ollama 的安裝腳本。&lt;/li>
&lt;li>&lt;strong>安裝 pyngrok&lt;/strong>: 用於創建到本地服務的反向代理，從而將本地服務器公開到互聯網。&lt;/li>
&lt;/ul>
&lt;h3 id="啟動-ollama-服務器">啟動 Ollama 服務器&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-py" data-lang="py">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">os&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">threading&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">subprocess&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">requests&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">pyngrok&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">ngrok&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">conf&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> &lt;span style="color:#111">google.colab&lt;/span> &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#111">userdata&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">def&lt;/span> &lt;span style="color:#75af00">ollama&lt;/span>&lt;span style="color:#111">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">environ&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;OLLAMA_HOST&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;0.0.0.0:11434&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">environ&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;OLLAMA_ORIGINS&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;*&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">os&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">environ&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;OLLAMA_KEEP_ALIVE&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#d88200">&amp;#39;-1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">subprocess&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Popen&lt;/span>&lt;span style="color:#111">([&lt;/span>&lt;span style="color:#d88200">&amp;#34;ollama&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;serve&amp;#34;&lt;/span>&lt;span style="color:#111">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ollama_thread&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">threading&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">Thread&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#111">ollama&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ollama_thread&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">start&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>配置環境變量&lt;/strong>：
&lt;ul>
&lt;li>OLLAMA_HOST: 指定服務器的主機和端口，這裡為 0.0.0.0:11434，表示本地所有網絡接口。&lt;/li>
&lt;li>OLLAMA_ORIGINS: 設置跨域資源共享 (CORS) 的允許範圍。&lt;/li>
&lt;li>OLLAMA_KEEP_ALIVE: 保持服務器活躍的時長（-1 表示無限）。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>啟動 Ollama 服務器&lt;/strong>：使用 subprocess 啟動 Ollama 的服務模式。&lt;/li>
&lt;li>&lt;strong>使用執行緒運行服務器&lt;/strong>：確保主程序不被阻塞，允許服務器在後台運行。&lt;/li>
&lt;/ul>
&lt;h3 id="下載模型">下載模型&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://ollama.com/search">Ollama search&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>!ollama pull &lt;span style="color:#f92672">{&lt;/span>model_name&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="公開服務">公開服務&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-py" data-lang="py">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">conf&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get_default&lt;/span>&lt;span style="color:#111">()&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">auth_token&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">userdata&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">get&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;NGROK_AUTH&amp;#39;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">ollama_tunnel&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ngrok&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">connect&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;11434&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;http&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">public_url&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">ollama_tunnel&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#111">public_url&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">print&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">f&lt;/span>&lt;span style="color:#d88200">&amp;#34;Public URL: &lt;/span>&lt;span style="color:#d88200">{&lt;/span>&lt;span style="color:#111">public_url&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>配置 ngrok 驗證令牌&lt;/strong>：使用用戶提供的 NGROK_AUTH 確保 Tunnel 服務的授權。&lt;/li>
&lt;li>&lt;strong>創建 ngrok Tunnel&lt;/strong>： 將本地服務器（11434 端口）通過 HTTP 隧道公開到互聯網。&lt;/li>
&lt;li>&lt;strong>獲取公開 URL&lt;/strong>： 輸出 Tunnel 的公開 URL，便於遠程訪問 Ollama 服務。&lt;/li>
&lt;/ul>
&lt;h3 id="列出可用模型">列出可用模型&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>!ollama list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="執行模型">執行模型&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>!ollama run &lt;span style="color:#f92672">{&lt;/span>model_name&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="透過-page-assist-訪問">透過 Page Assist 訪問&lt;/h3>
&lt;ul>
&lt;li>於 Page Assist 設置 public_url&lt;/li>
&lt;li>訪問 public_url 並點擊 visit site，否則 Page Assist 偵測不到遠端 ollama&lt;/li>
&lt;/ul></description></item><item><title>Software Design - Principle - Inversion of Control (IoC)</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---principle---inversion-of-control-ioc/</link><pubDate>Thu, 16 Jan 2025 20:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---principle---inversion-of-control-ioc/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;h3 id="1-如果你的程式中有一個物件需要另一個物件應該怎麼做">1. 如果你的程式中，有一個物件需要另一個物件，應該怎麼做？&lt;/h3>
&lt;ul>
&lt;li>直接由需求方 new 一個實例嗎？&lt;/li>
&lt;/ul>
&lt;h3 id="2-如果那個物件的建構方式很複雜呢">2. 如果那個物件的建構方式很複雜呢？&lt;/h3>
&lt;ul>
&lt;li>例如，它可能需要多個參數，還需要一些初始化邏輯。&lt;/li>
&lt;li>如果每次都在需求方進行這些操作，會不會重複又繁瑣？&lt;/li>
&lt;/ul>
&lt;h3 id="3-如果有多個需求方重複依賴這個物件呢">3. 如果有多個需求方重複依賴這個物件呢？&lt;/h3>
&lt;ul>
&lt;li>這些需求方能共享同一個物件嗎？&lt;/li>
&lt;li>如果共享，如何管理這個共用的實例？誰來負責它的生命週期？&lt;/li>
&lt;/ul>
&lt;h3 id="4-依賴管理是誰的責任">4. 依賴管理是誰的責任？&lt;/h3>
&lt;ul>
&lt;li>需求方是否應該負責處理自己所有的依賴？&lt;/li>
&lt;li>還是應該有一個「專門負責管理依賴」的角色？&lt;/li>
&lt;li>如果有一個「外部機制」來幫你管理這些依賴，需求方只需要專注於自己的邏輯，不需要擔心如何建構物件，這樣會不會更簡單？&lt;/li>
&lt;/ul>
&lt;h2 id="控制反轉---什麼反轉了">控制反轉 - 什麼反轉了？&lt;/h2>
&lt;p>控制反轉（Inversion of Control, IoC）就是為了解決這些問題而生的。它帶來了一個核心理念：&lt;/p>
&lt;blockquote>
&lt;p>需求方不再自己去「控制」依賴的構建和配置，而是把這部分的「控制權」交給「外部機制」（通常是 IoC 容器）。&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>需求方只需專注於「接收」或「查詢」依賴，並專心「使用」它們。簡化需求方的職責，使其僅專注於處理業務邏輯，從而提升模組化與可維護性。&lt;/p>&lt;/blockquote>
&lt;h2 id="好處">好處&lt;/h2>
&lt;h3 id="依賴管理">&lt;strong>依賴管理&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>通過外部機制統一管理依賴，開發者不需要在各處手動管理物件實例的生命週期與建構邏輯。&lt;/li>
&lt;li>容器能管理共享的物件實例，有效避免重複建構，提高資源利用率。&lt;/li>
&lt;li>將依賴配置集中於容器，能輕鬆應對需求變更。例如，替換某個服務的具體實現時，只需要調整配置，而非修改多處程式碼。&lt;/li>
&lt;/ul>
&lt;h3 id="提升模組化與可維護性">&lt;strong>提升模組化與可維護性&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>需求方與具體實現之間的耦合度降低，使得每個模組能更容易地獨立開發、測試與替換。&lt;/li>
&lt;/ul>
&lt;h3 id="提升測試便利性">&lt;strong>提升測試便利性&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>透過依賴注入，需求方可以接收模擬物件（mock）或測試替身（stub），從而更輕鬆地撰寫單元測試。&lt;/li>
&lt;li>sample - c#
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#111">mockStorageService&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Mock&lt;/span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#111">IStorageService&lt;/span>&lt;span style="color:#111">&amp;gt;();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">mockStorageService&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">Setup&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">service&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">service&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">SaveOrder&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">It&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">IsAny&lt;/span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#111">Order&lt;/span>&lt;span style="color:#111">&amp;gt;())).&lt;/span>&lt;span style="color:#111">Verifiable&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#111">orderService&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">OrderService&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">mockStorageService&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">Object&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>sample - js
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">mockStorageService&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">saveOrder&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">order&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">`Mock saving order &lt;/span>&lt;span style="color:#d88200">${&lt;/span>&lt;span style="color:#75af00">order&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">id&lt;/span>&lt;span style="color:#d88200">}&lt;/span>&lt;span style="color:#d88200">`&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">orderService&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">OrderService&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">mockStorageService&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="技術實現">技術實現&lt;/h2>
&lt;h3 id="組合根composition-root">&lt;strong>組合根（Composition Root）&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>集中管理所有依賴的構建與組合，通常位於應用程式的進入點。&lt;/li>
&lt;/ul>
&lt;h3 id="依賴尋找dependency-lookup">&lt;strong>依賴尋找（Dependency Lookup）&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>需求方主動向容器請求所需的依賴。&lt;/li>
&lt;/ul>
&lt;h3 id="依賴注入dependency-injection-di">&lt;strong>依賴注入（Dependency Injection, DI）&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>容器將依賴主動注入至需求方的機制，例如透過建構子注入、屬性注入或方法注入。&lt;/li>
&lt;/ul></description></item><item><title>Unity - Package Manager - NuGetForUnity</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package-manager---nugetforunity/</link><pubDate>Sun, 12 Jan 2025 21:12:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package-manager---nugetforunity/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/GlitchEnzo/NuGetForUnity">GlitchEnzo/NuGetForUnity&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="config">Config&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>將資源調整放置 Packages 而不是 Assets&lt;/p>
&lt;blockquote>
&lt;p>NuGet &amp;gt; Preferences &amp;gt; Placement &amp;gt; In Packages Folder&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>調整 .gitignore&lt;/p>
&lt;pre tabindex="0">&lt;code>/Packages/nuget-packages/InstalledPackages*
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ol></description></item><item><title>Unity - Package - MessagePipe</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package---messagepipe/</link><pubDate>Thu, 09 Jan 2025 22:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package---messagepipe/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Cysharp/MessagePipe">Cysharp/MessagePipe&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="extras">Extras&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>搭配 VContainer v1.14.0 之後可以簡化配置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c#" data-lang="c#">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">using&lt;/span> &lt;span style="color:#111">MessagePipe&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">using&lt;/span> &lt;span style="color:#111">UnityEngine&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">using&lt;/span> &lt;span style="color:#111">VContainer&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">using&lt;/span> &lt;span style="color:#111">VContainer.Unity&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">sealed&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">GameLifetimeScope&lt;/span> &lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">LifetimeScope&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">protected&lt;/span> &lt;span style="color:#00a8c8">override&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#111">Configure&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">IContainerBuilder&lt;/span> &lt;span style="color:#111">builder&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 只需這行即可&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">builder&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">RegisterMessagePipe&lt;/span>&lt;span style="color:#111">();&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul></description></item><item><title>Career - Software Engineer</title><link>https://HoshikawaRyuukou.github.io/posts/career---software-engineer/</link><pubDate>Tue, 07 Jan 2025 21:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/career---software-engineer/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;ul>
&lt;li>後端: 深入且穩定&lt;/li>
&lt;li>前端: 廣泛且彈性&lt;/li>
&lt;/ul>
&lt;h2 id="roadmap">Roadmap&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://roadmap.sh/">Developer Roadmaps - roadmap.sh&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Software Design - Concept - Object Lifecycle Management</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---concept---object-lifecycle-management/</link><pubDate>Sat, 04 Jan 2025 21:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---concept---object-lifecycle-management/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>物件生命週期管理（Object Lifecycle Management）是指在程式運行過程中，對物件的創建、使用、及銷毀進行有效的控制和管理。&lt;/p>
&lt;p>適當的物件生命週期管理有助於提高應用程式的性能、可維護性和資源利用效率。&lt;/p>
&lt;h2 id="stage">Stage&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>創建&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>物件被創建並初始化。&lt;/li>
&lt;li>創建時，可能會注入其他依賴物件或設定一些必要的屬性。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>使用&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>物件在應用程式中進行各種操作，如方法調用、屬性設定等。&lt;/li>
&lt;li>這是物件的活躍期，通常是應用程式邏輯處理的核心部分。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>銷毀&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>物件不再被需要時，它的資源會被釋放。&lt;/li>
&lt;li>這個過程通常涉及到記憶體回收和釋放外部資源（例如檔案、資料庫連線等）。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="lifetime">Lifetime&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Transient（瞬時）&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>每次請求或需要該物件時會創建一個新的實例。&lt;/li>
&lt;li>適用於短暫的、不需要保持狀態的物件。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Singleton（單例）&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>整個應用程式生命周期內，只有一個實例被創建。&lt;/li>
&lt;li>適用於那些需要跨應用程式共享狀態的物件。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Scoped（範圍）&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>物件的生命周期被限制在特定的範圍內，通常是某個特定的操作或請求範圍。&lt;/li>
&lt;li>在範圍內，物件實例會被共享。但範圍結束後，物件會被銷毀。&lt;/li>
&lt;li>適用於那些需要在某個範圍內共享狀態，但範圍結束後無需保持的物件。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item><item><title>PixiJS - Basic</title><link>https://HoshikawaRyuukou.github.io/posts/pixijs---basic/</link><pubDate>Sat, 04 Jan 2025 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/pixijs---basic/</guid><description>&lt;h2 id="core">Core&lt;/h2>
&lt;ul>
&lt;li>&lt;code>Application&lt;/code>: 是一個簡化使用 PixiJS 的輔助類別。它會建立渲染器、建立舞台，然後啟動一個用於更新的計時器。&lt;/li>
&lt;li>&lt;code>Container&lt;/code>: 現在是所有 PixiJS 物件的基本類別。&lt;/li>
&lt;/ul>
&lt;h2 id="擴充元件">擴充元件&lt;/h2>
&lt;p>會自行安裝，只須匯入類別即可使用。&lt;/p>
&lt;blockquote>
&lt;p>import &amp;lsquo;@pixi/accessibility&amp;rsquo;;&lt;/p>&lt;/blockquote></description></item><item><title>PixiJS - Note</title><link>https://HoshikawaRyuukou.github.io/posts/pixijs---note/</link><pubDate>Sat, 04 Jan 2025 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/pixijs---note/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://pixijs.com/">PixiJS | The HTML5 Creation Engine | PixiJS&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="starter">Starter&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://pixijs.io/create-pixi/">PixiJS Create | PixiJS Create&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm create pixi.js
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="extensions">Extensions&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://pixijs.io/devtools/">PixiJS Devtools | PixiJS Devtools&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://chromewebstore.google.com/detail/pixijs-devtools/aamddddknhcagpehecnhphigffljadon">PixiJS Devtools&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="template">Template&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/turbokirichenko/pixijs-typescript-vite-template">turbokirichenko/pixijs-typescript-vite-template&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/t-tonyo-maru/pub_template_web_pixijs-gsap-spine">t-tonyo-maru/pub_template_web_pixijs-gsap-spine&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="sample">Sample&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/pixijs/open-games">pixijs/open-games&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/MateuszSuder/PixiSlot">MateuszSuder/PixiSlot&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/CyberDex/pixi-game-ui/tree/main">CyberDex/pixi-game-ui&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://codepen.io/selcukcura/pen/gGPVww">Particle experiment using Pixi.js &amp;amp; GSAP&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="sample---slot">Sample - slot&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/ktsalik/sloticon">ktsalik/sloticon&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/artdon/angular-pixi-slots">artdon/angular-pixi-slots&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/Slamaio/pixi-js-slot-machine">Slamaio/pixi-js-slot-machine&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/jogracz/pixi-slot-game?tab=readme-ov-file">jogracz/pixi-slot-game&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://codepen.io/pop-kst/pen/YzYQGGG">Slot-PixiJS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://pixijs.com/8.x/examples/advanced/slots">Slots | PixiJS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/feldhaus/slot-machine?tab=readme-ov-file">feldhaus/slot-machine&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="others">Others&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://gsap.com/docs/v3/Plugins/PixiPlugin/">Pixi | GSAP | Docs &amp;amp; Learning&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/pixijs/pixijs/issues/9141#issuecomment-1573726217">Bug: Visual issue rendering spine on v7&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Unity - Samples</title><link>https://HoshikawaRyuukou.github.io/posts/unity---samples/</link><pubDate>Thu, 02 Jan 2025 22:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---samples/</guid><description>&lt;h2 id="solitaire">Solitaire&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/gubicsz/Solitaire">gubicsz/Solitaire&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="reversi">Reversi&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://zenn.dev/qemel/articles/f1829f9b847bcb">Unity設計練習 - リバーシ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/qemel/gpp-reversi/tree/main">qemel/gpp-reversi&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Front-End - State Management</title><link>https://HoshikawaRyuukou.github.io/posts/front-end---state-management/</link><pubDate>Tue, 31 Dec 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/front-end---state-management/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;blockquote>
&lt;p>UI = f( state )&lt;/p>&lt;/blockquote>
&lt;p>state&lt;/p>
&lt;ul>
&lt;li>widget state : 只存在於當前 widget 範圍內的狀態&lt;/li>
&lt;li>app state : 存在於整個應用程式中，多個 widget 可能需要使用的狀態。&lt;/li>
&lt;/ul>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://iceprosurface.com/%E7%9F%A5%E8%AF%86%E5%BA%93/%E7%BC%96%E7%A8%8B/%E5%89%8D%E7%AB%AF/%E8%8C%83%E5%BC%8F%E8%A7%92%E5%BA%A6%E6%80%9D%E8%80%83%E7%9A%84%E5%89%8D%E7%AB%AF%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86">范式角度思考的前端状态管理&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://maliut.space/p/global-state-management/">2022年，我们还需要全局状态管理吗？&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Game Development - Web Game - Overview</title><link>https://HoshikawaRyuukou.github.io/posts/game-development---web-game---overview/</link><pubDate>Sun, 29 Dec 2024 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/game-development---web-game---overview/</guid><description>&lt;h2 id="pixijs">&lt;a href="https://pixijs.com/">PixiJS&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>2D 渲染引擎&lt;/li>
&lt;li>專注於高性能渲染，適合需要流暢繪圖的應用場景&lt;/li>
&lt;li>提供低層級 API，開發者需要更多手動操作，具高度靈活性&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="phaser">&lt;a href="https://phaser.io/">Phaser&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>2D 遊戲框架&lt;/li>
&lt;li>早期基於 PixiJS 開發，現具自有渲染引擎&lt;/li>
&lt;li>提供全面的遊戲開發工具集，包含場景管理、物理引擎、動畫和音效支援&lt;/li>
&lt;li>支援開發 HTML5 遊戲，並可輕鬆部署至 iOS、Android 或桌面應用&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>對於 slot game 這種低互動高表演的類型 PixiJS 也許較具優勢&lt;/p></description></item><item><title>Economics - Sunk cost</title><link>https://HoshikawaRyuukou.github.io/posts/economics---sunk-cost/</link><pubDate>Sat, 28 Dec 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/economics---sunk-cost/</guid><description>&lt;h2 id="定義">定義&lt;/h2>
&lt;p>&lt;strong>沉沒成本&lt;/strong>（Sunk Cost）是經濟學中的一個概念，指的是過去已經發生且無法回收的支出。這些成本無論未來如何決策都不會改變，因此在理性決策中應該被忽略。然而，人們在實際決策中往往因心理因素而受到沉沒成本的影響，從而作出不利的選擇。&lt;/p>
&lt;h3 id="核心特點">&lt;strong>核心特點&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>不可回收性&lt;/strong>&lt;br>
沉沒成本是已經投入的資源（例如時間、金錢、精力），即便未來的行動如何，也無法追回或改變。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>與未來無關性&lt;/strong>&lt;br>
在理性決策中，應該只考慮未來的邊際收益和成本，而不應因過去的沉沒成本影響判斷。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3 id="生活中的例子">&lt;strong>生活中的例子&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>看完無聊的電影&lt;/strong>&lt;br>
你購買了一張電影票，但發現電影內容無聊透頂。雖然時間和金錢已經浪費，但你可能仍選擇堅持看完，以求“對得起票價”，這正是受到沉沒成本影響。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>持續不佳的投資&lt;/strong>&lt;br>
某項投資已經大幅虧損，但因為之前投入了大量資金或精力，你可能選擇繼續追加投入，試圖“挽回損失”。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>難以放棄的關係&lt;/strong>&lt;br>
在一段關係中，儘管雙方已經不再適合，但因為已投入許多感情和時間，人們往往不願結束這段關係。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3 id="商業談判的例子">&lt;strong>商業談判的例子&lt;/strong>&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>政府標案策略&lt;/strong>&lt;br>
低價中標吸引合作，進入執行後可能因延誤或額外需求而增加成本。政府因已投入預算和時間，通常選擇追加預算，而非重新招標，這樣的情況有效利用了政府痛恨損失的心理。&lt;/li>
&lt;/ol></description></item><item><title>Software Design - Architecture Design</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---architecture-design/</link><pubDate>Wed, 25 Dec 2024 20:03:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---architecture-design/</guid><description>&lt;h2 id="thinking">Thinking&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://minds.md/zakirullin/cognitive#long">Cognitive load is what matters&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Algorithm - Complexity</title><link>https://HoshikawaRyuukou.github.io/posts/algorithm---complexity/</link><pubDate>Thu, 28 Nov 2024 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/algorithm---complexity/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>在尋求最優解法設計 &lt;strong>既快又省&lt;/strong> 的資料結構與演算時，有以下兩個面向&lt;/p>
&lt;ul>
&lt;li>時間效率：演算法執行時間的長短。&lt;/li>
&lt;li>空間效率：演算法佔用記憶體空間的大小。&lt;/li>
&lt;/ul>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.hello-algo.com/chapter_computational_complexity/">第 2 章 - 复杂度分析&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="時間複雜度-time-complexity">時間複雜度 (Time Complexity)&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.hello-algo.com/zh-hant/chapter_computational_complexity/time_complexity/">2.3 時間複雜度&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>⚠️ 時間複雜度分析統計的不是演算法執行時間，而是演算法執行時間隨著資料量變大時的增長趨勢。&lt;/p>&lt;/blockquote>
&lt;ul>
&lt;li>有效評估演算法效率。&lt;/li>
&lt;li>推算方法更簡便。&lt;/li>
&lt;li>存在一定的侷限性(當輸入資料大小較小時)。&lt;/li>
&lt;/ul>
&lt;h2 id="空間複雜度-space-complexity">空間複雜度 (Space Complexity)&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.hello-algo.com/zh-hant/chapter_computational_complexity/space_complexity/">2.4 空間複雜度&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>⚠️ 我們通常只關注最差空間複雜度。&lt;/p>&lt;/blockquote>
&lt;ul>
&lt;li>輸入空間：演算法的輸入資料。&lt;/li>
&lt;li>暫存空間：執行過程中的變數、物件、函式上下文等資料。&lt;/li>
&lt;li>輸出空間：儲存演算法的輸出資料。&lt;/li>
&lt;/ul></description></item><item><title>Software Design - Pattern - Stateless</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---stateless/</link><pubDate>Sat, 23 Nov 2024 21:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---stateless/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>無狀態設計專注於系統可重現性和邏輯純淨性的設計方法。其核心設計思維旨在將邏輯從外部狀態的依賴中解放出來，使每個狀態完全由輸入決定，而非持續記錄和修改內部狀態。&lt;/p>
&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>純函數式邏輯&lt;/strong>：輸出僅依賴輸入，無副作用。&lt;/li>
&lt;li>&lt;strong>輸入驅動&lt;/strong>：狀態由輸入序列完全決定。&lt;/li>
&lt;li>&lt;strong>不可變狀態&lt;/strong>：每次改變都生成新狀態(防止副作用)，支持回溯。&lt;/li>
&lt;li>&lt;strong>可重現性&lt;/strong>：同樣的輸入序列可重現遊戲進程。&lt;/li>
&lt;/ul>
&lt;h2 id="limitations">Limitations&lt;/h2>
&lt;ul>
&lt;li>在高度互動和即時性要求高的系統中，狀態的不可變性可能增加性能開銷。&lt;/li>
&lt;/ul></description></item><item><title>Reading - 岩田聰如是說：從天才程式設計師到遊戲公司社長，任天堂中興之主傳奇的一生</title><link>https://HoshikawaRyuukou.github.io/posts/reading---%E5%B2%A9%E7%94%B0%E8%81%B0%E5%A6%82%E6%98%AF%E8%AA%AA%E5%BE%9E%E5%A4%A9%E6%89%8D%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88%E5%B8%AB%E5%88%B0%E9%81%8A%E6%88%B2%E5%85%AC%E5%8F%B8%E7%A4%BE%E9%95%B7%E4%BB%BB%E5%A4%A9%E5%A0%82%E4%B8%AD%E8%88%88%E4%B9%8B%E4%B8%BB%E5%82%B3%E5%A5%87%E7%9A%84%E4%B8%80%E7%94%9F/</link><pubDate>Fri, 22 Nov 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/reading---%E5%B2%A9%E7%94%B0%E8%81%B0%E5%A6%82%E6%98%AF%E8%AA%AA%E5%BE%9E%E5%A4%A9%E6%89%8D%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88%E5%B8%AB%E5%88%B0%E9%81%8A%E6%88%B2%E5%85%AC%E5%8F%B8%E7%A4%BE%E9%95%B7%E4%BB%BB%E5%A4%A9%E5%A0%82%E4%B8%AD%E8%88%88%E4%B9%8B%E4%B8%BB%E5%82%B3%E5%A5%87%E7%9A%84%E4%B8%80%E7%94%9F/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>這本書偏向經營管理和領導力的層面，特別是岩田聰如何作為任天堂的社長，帶領公司走向成功。雖然書中也有描述岩田聰作為程式設計師的背景，但更多的焦點放在他如何運用管理哲學和人性化領導來塑造任天堂的發展。&lt;/p>
&lt;h2 id="review">Review&lt;/h2>
&lt;h3 id="第一章-岩田先生成為社長以前">第一章 岩田先生成為社長以前。&lt;/h3>
&lt;p>展示了岩田聰如何從一名年輕的程式設計師，逐步成為一位備受尊敬的遊戲業領袖。&lt;/p>
&lt;blockquote>
&lt;p>引導組織發揮優勢，揚長避短，這就是經營。&lt;/p>&lt;/blockquote>
&lt;h4 id="高中時代萌芽的天賦與熱忱">高中時代：萌芽的天賦與熱忱&lt;/h4>
&lt;ul>
&lt;li>靠好奇心和創造力自行探索早期計算機，嘗試開發遊戲，奠定基礎技能。&lt;/li>
&lt;li>在實驗中累積對電腦的深刻理解，明白其「能與不能」。&lt;/li>
&lt;li>受到讚賞後獲得正向激勵，促使他不斷進步。&lt;/li>
&lt;/ul>
&lt;h4 id="大學時代實踐中學習">大學時代：實踐中學習&lt;/h4>
&lt;ul>
&lt;li>積極參與程式聚會，認識志同道合的朋友。&lt;/li>
&lt;li>進入 &lt;strong>HAL 研究所&lt;/strong> 打工，正式踏足遊戲開發領域。&lt;/li>
&lt;li>雖認同大學教育的價值，但認為工作所需的技能多來自實踐經驗。&lt;/li>
&lt;/ul>
&lt;h4 id="hal-開發組時期快速成長的責任">HAL 開發組時期：快速成長的責任&lt;/h4>
&lt;ul>
&lt;li>作為 HAL 開發組的創始成員，必須負責從技術到決策的多項工作。&lt;/li>
&lt;li>見證團隊從 5 人擴展到 90 人，搭上任天堂紅白機的成功浪潮。&lt;/li>
&lt;li>被提拔為開發部長，承擔更大的管理責任。&lt;/li>
&lt;/ul>
&lt;h4 id="hal-社長時期---經營危機">HAL 社長時期 - 經營危機&lt;/h4>
&lt;ul>
&lt;li>在公司面臨破產時毅然接任社長，直言：「這件事由我來做最合理。」&lt;/li>
&lt;li>在極限壓力下經歷人情冷暖，領悟短期迅速獲利未必是最佳解。&lt;/li>
&lt;li>花一個月與全體員工進行個別面談，建立決策基準。&lt;/li>
&lt;li>「做決策，就是收集，分析情報，決定事務的優先度」&lt;/li>
&lt;li>「依照訂立的優先順序推行即可」&lt;/li>
&lt;/ul>
&lt;h4 id="hal-社長時期---以心換心">HAL 社長時期 - 以心換心&lt;/h4>
&lt;ul>
&lt;li>理想的公司：&lt;code>老闆能理解員工的公司&lt;/code> 與 &lt;code>老闆認真為每個員工的幸福考慮的公司&lt;/code>&lt;/li>
&lt;li>面談第一個問題 : &lt;code>你現在開心嗎?&lt;/code>&lt;/li>
&lt;li>有些話只有面對面才能說出口。&lt;/li>
&lt;li>先讓對方說完，才有可能真心對話。&lt;/li>
&lt;li>面談則是聊到 : &lt;code>何時豁然開朗&lt;/code>&lt;/li>
&lt;li>確定雙方價值觀，盡可能解釋決策動機。&lt;/li>
&lt;li>「所謂的公司，是擁有共同目標的人們各司其職、齊心協力完成目標的地方，因此最好先制定共同的目標」&lt;/li>
&lt;li>「若是如此這般的背景條件，換作是你，你有何想法?」&lt;/li>
&lt;li>建立信任：實際看到那個人解決問題 -&amp;gt; 相信那個人的決定&lt;/li>
&lt;/ul>
&lt;h4 id="hal-社長時期---轉折契機">HAL 社長時期 - 轉折契機&lt;/h4>
&lt;ul>
&lt;li>勇敢叫停《叮噹波波》的修改，即使導致銷售部顏面掃地。&lt;/li>
&lt;li>帶領團隊推出《星之卡比》，憑藉亮眼表現大獲成功，預購量達預期的 200 倍。&lt;/li>
&lt;/ul>
&lt;h3 id="第二章-岩田先生的領導能力">第二章 岩田先生的領導能力。&lt;/h3>
&lt;h3 id="第三章-岩田先生的個性">第三章 岩田先生的個性。&lt;/h3>
&lt;h3 id="第四章-岩田先生信賴的人">第四章 岩田先生信賴的人。&lt;/h3>
&lt;h3 id="第五章-岩田先生所追求的遊戲">第五章 岩田先生所追求的遊戲。&lt;/h3>
&lt;h3 id="第六章-別人口中的岩田先生">第六章 別人口中的岩田先生。&lt;/h3>
&lt;h3 id="宮本茂口中的岩田先生">宮本茂口中的岩田先生&lt;/h3>
&lt;h3 id="系井重里口中的岩田先生">系井重里口中的岩田先生&lt;/h3>
&lt;h3 id="第七章-岩田先生這個人">第七章 岩田先生這個人。&lt;/h3></description></item><item><title>AI - Prompt Engineering</title><link>https://HoshikawaRyuukou.github.io/posts/ai---prompt-engineering/</link><pubDate>Mon, 18 Nov 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---prompt-engineering/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>提示工程是一種專注於設計和優化輸入提示的&lt;strong>操作者技術&lt;/strong>，旨在不改變模型的前提下，通過精心設計提示來提升生成式人工智慧（如大型語言模型，LLMs）的輸出品質。這種技術能幫助模型更準確地理解用戶意圖並生成符合需求的回應。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>提示（Prompt）&lt;/strong>：提示是提供給 AI 模型的輸入內容，如問題、命令或指示。高品質提示是生成高品質輸出的關鍵。&lt;/li>
&lt;/ul>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://medium.com/@micky2428/%E6%8F%90%E7%A4%BA%E5%B7%A5%E7%A8%8B-prompt-engineering-%E5%A6%82%E4%BD%95%E6%9C%89%E6%95%88%E8%88%87ai%E5%B0%8D%E8%A9%B1-c4e6501c9bfd">提示工程(Prompt Engineering)：如何有效與AI對話&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="practice---github-copilot">Practice - Github Copilot&lt;/h2>
&lt;h3 id="domain-model">Domain Model&lt;/h3>
&lt;ul>
&lt;li>偏重邏輯，提示詞規格越詳細越好。&lt;/li>
&lt;/ul>
&lt;h3 id="vue-component">Vue Component&lt;/h3>
&lt;ul>
&lt;li>前端組件，初期提示詞規格未必越詳細越好。&lt;/li>
&lt;li>建議先實現核心功能，再逐步優化。&lt;/li>
&lt;li>中後期規格大幅調整，修改成功率偏低(尤其是&lt;strong>布局相關&lt;/strong>失敗率較高)。&lt;/li>
&lt;li>提供範例檔案有助於生成，例如：&lt;code>基於 XXX.vue 幫我寫另一個 OOO.vue 的組件&lt;/code>。&lt;/li>
&lt;/ul>
&lt;h3 id="extras">Extras&lt;/h3>
&lt;ul>
&lt;li>原型階段不建議過早拆分以免降低開發效率。&lt;/li>
&lt;li>基本成形後可封裝部分可以考慮重構為小單元，提升處理效率(減少重複生成相同部位)。&lt;/li>
&lt;li>雖然可透過 selection 的方式局部修正，但目前讓完整上下文一起參與生成較為穩健。&lt;/li>
&lt;/ul></description></item><item><title>Nvidia - Note</title><link>https://HoshikawaRyuukou.github.io/posts/nvidia---note/</link><pubDate>Fri, 08 Nov 2024 10:11:10 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/nvidia---note/</guid><description>&lt;h2 id="cuda">CUDA&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 查找 GPU 支持的 CUDA 版本&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nvidia-smi 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 如果安裝了CUDA，將顯示CUDA編譯工具的版本信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nvcc --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Software Development - Conventional Commits</title><link>https://HoshikawaRyuukou.github.io/posts/software-development---conventional-commits/</link><pubDate>Tue, 05 Nov 2024 20:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-development---conventional-commits/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>以下是 Conventional Commit 的一些主要好處 :&lt;/p>
&lt;ul>
&lt;li>&lt;strong>一致性&lt;/strong>：統一提交訊息格式，便於理解和閱讀。&lt;/li>
&lt;li>&lt;strong>自動化支持&lt;/strong>：助力自動生成變更日誌，並與 CI/CD 等工具無縫整合。&lt;/li>
&lt;li>&lt;strong>版本控制友好&lt;/strong>：與 Semantic Versioning 搭配良好，根據提交類型自動升級版本。&lt;/li>
&lt;li>&lt;strong>提高溝通效率&lt;/strong>：簡明的訊息格式促進團隊內溝通與代碼審查。&lt;/li>
&lt;li>&lt;strong>歷史追蹤&lt;/strong>：規範化提交便於回溯和維護，增強項目可讀性和可維護性。&lt;/li>
&lt;/ul>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.conventionalcommits.org/en/v1.0.0/">Conventional Commits&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/conventional-changelog/commitlint">conventional-changelog/commitlint&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/commitizen/cz-cli">commitizen/cz-cli&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;h3 id="samples">samples&lt;/h3>
&lt;ul>
&lt;li>chore(deps): add dependencies&lt;/li>
&lt;li>chore(deps): update pnpm to v9.12.3&lt;/li>
&lt;li>chore(release): 9.12.3&lt;/li>
&lt;li>ci: rename audit job&lt;/li>
&lt;li>feat!: the link command should add overrides&lt;/li>
&lt;/ul></description></item><item><title>Front-End - Vite - Note</title><link>https://HoshikawaRyuukou.github.io/posts/front-end---vite---note/</link><pubDate>Tue, 05 Nov 2024 10:11:10 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/front-end---vite---note/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://cn.vitejs.dev/">Vite | 下一代的前端工具链&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.explainthis.io/zh-hant/swe/what-is-vite">Vite 是什麼? 為什麼要用 Vite? 它解決了哪些問題? 又是如何解決?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://notes.boshkuo.com/blog/vite-vs-webpack">新舊時代 JS Bundler 的世代交替 - Vite vs. Webpack 的詳細比較 | Bosh 的技術探索筆記&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Workflow - Publish private packages to Github Packages using Changesets</title><link>https://HoshikawaRyuukou.github.io/posts/workflow---publish-private-packages-to-github-packages-using-changesets/</link><pubDate>Mon, 04 Nov 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow---publish-private-packages-to-github-packages-using-changesets/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/changesets/action/">changesets/action&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="githubworkflowspublish-packageyml">.github/workflows/publish-package.yml&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Publish package to GitHub Packages&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">on&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">workflow_dispatch&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">release&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">types&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">published]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">concurrency&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">${{ github.workflow }}-${{ github.ref }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">jobs&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">release&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">runs-on&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">ubuntu-latest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">steps&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Checkout Repo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">uses&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">actions/checkout@v4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">uses&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">pnpm/action-setup@v4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">version&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">9&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">run_install&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">uses&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">actions/setup-node@v4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">node-version&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;20.x&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">registry-url&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;https://npm.pkg.github.com&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">scope&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;@user-or-organization&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Install dependencies&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">run&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">pnpm install&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Build package&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">run&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">pnpm build&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Create Release Pull Request or Publish to npm&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">id&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">changesets&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">uses&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">changesets/action@v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># This expects you to have a script called release which does a build for your packages and calls changeset publish&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">publish&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">pnpm release&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">env&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">GITHUB_TOKEN&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">${{ secrets.GITHUB_TOKEN }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">if&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">steps.changesets.outputs.published == &amp;#39;true&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># You can do something when a publish happens.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">run&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">echo &amp;#34;Done&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Software Development - Semantic Versioning</title><link>https://HoshikawaRyuukou.github.io/posts/software-development---semantic-versioning/</link><pubDate>Mon, 04 Nov 2024 20:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-development---semantic-versioning/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://semver.org/lang/zh-TW/">語意化版本 2.0.0&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://semver.otterlord.dev/">NPM Semver Calculator&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="定義">定義&lt;/h2>
&lt;p>語意化版本號由以下三部分構成：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>主版本號 (Major)&lt;/strong>：當發生不向後相容的變更時增加。&lt;/li>
&lt;li>&lt;strong>次版本號 (Minor)&lt;/strong>：當增加向下相容的新功能時增加。&lt;/li>
&lt;li>&lt;strong>修訂號 (Patch)&lt;/strong>：當修復向下相容的問題時增加。&lt;/li>
&lt;/ul>
&lt;p>例如：&lt;code>1.2.3&lt;/code> 中，&lt;code>1&lt;/code> 是主版本號，&lt;code>2&lt;/code> 是次版本號，&lt;code>3&lt;/code> 是修訂號。&lt;/p>
&lt;h2 id="預發布版本">預發布版本&lt;/h2>
&lt;p>預發布版本用於標示還不夠穩定的版本，通常是開發、測試中的版本，例如 &lt;code>alpha&lt;/code> 或 &lt;code>beta&lt;/code> 階段。這些標記常用於給開發者或測試者試用，在正式發布之前捕捉可能的問題。&lt;/p>
&lt;p>語法上，預發布版本會附加在主版本號、次版本號、修訂號之後，以連字號 (&lt;code>-&lt;/code>) 分隔，常見的標記包括：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>alpha&lt;/strong>：表示非常早期、初步的版本，可能還不完整。&lt;/li>
&lt;li>&lt;strong>beta&lt;/strong>：表示功能已基本完成，正在進行測試和改進的版本。&lt;/li>
&lt;li>&lt;strong>rc (Release Candidate)&lt;/strong>：表示接近正式發布的候選版本，可能只需要進行少量修改。&lt;/li>
&lt;/ul>
&lt;p>例如：&lt;/p>
&lt;ul>
&lt;li>&lt;code>1.2.3-alpha&lt;/code>：表示這是版本 &lt;code>1.2.3&lt;/code> 的一個 alpha 預發布版本。&lt;/li>
&lt;li>&lt;code>1.2.3-beta.1&lt;/code>：表示這是版本 &lt;code>1.2.3&lt;/code> 的第一個 beta 預發布版本。&lt;/li>
&lt;li>&lt;code>1.2.3-rc.2&lt;/code>：表示這是版本 &lt;code>1.2.3&lt;/code> 的第二個候選版本。&lt;/li>
&lt;/ul>
&lt;h2 id="版本範圍-以-npm-為例">版本範圍 (以 npm 為例)&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>波浪符號 (&lt;code>~&lt;/code>)&lt;/strong>&lt;br>
允許更新修訂號，但不更新次版本號。&lt;br>
例如，&lt;code>~1.2.3&lt;/code> 表示可以更新到 &lt;code>&amp;lt;1.3.0&lt;/code>，允許的版本包括 &lt;code>1.2.4&lt;/code>、&lt;code>1.2.5&lt;/code> 等。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>插入符號 (&lt;code>^&lt;/code>)&lt;/strong>&lt;br>
允許更新次版本號和修訂號，但不更改主版本號（&lt;code>0&lt;/code> 版本除外）。&lt;br>
例如，&lt;code>^1.2.3&lt;/code> 表示可以更新到 &lt;code>&amp;lt;2.0.0&lt;/code>，允許的版本包括 &lt;code>1.3.0&lt;/code>、&lt;code>1.4.5&lt;/code> 等。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>比較符號 (&lt;code>&amp;lt;&lt;/code>, &lt;code>&amp;lt;=&lt;/code>, &lt;code>&amp;gt;&lt;/code>, &lt;code>&amp;gt;=&lt;/code>)&lt;/strong>&lt;br>
用於指定版本的上限或下限。&lt;br>
例如，&lt;code>&amp;lt;2.0.0&lt;/code> 表示可以使用比 &lt;code>2.0.0&lt;/code> 更早的所有版本。&lt;/p></description></item><item><title>Front-End - Common - Note</title><link>https://HoshikawaRyuukou.github.io/posts/front-end---common---note/</link><pubDate>Tue, 29 Oct 2024 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/front-end---common---note/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=J_xIxliB0Jo">在你不知道的角落，前端的未来正在回归本源&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Front-End - Html - Note</title><link>https://HoshikawaRyuukou.github.io/posts/front-end---html---note/</link><pubDate>Tue, 29 Oct 2024 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/front-end---html---note/</guid><description>&lt;h2 id="dom-document-object-model">DOM (Document Object Model)&lt;/h2>
&lt;p>是一種瀏覽器用來表示和操作 HTML 或 XML 文件的結構化方式。當一個網頁加載時，瀏覽器會將 HTML 文檔解析成 DOM 樹，然後讓開發者使用 JavaScript 等語言動態修改網頁的內容、結構和樣式。&lt;/p>
&lt;h3 id="view-size">view size&lt;/h3>
&lt;ul>
&lt;li>&lt;code>window.devicePixelRatio&lt;/code>: 代設備的屏幕通常具有比標準顯示器更高的像素密度（1 個 CSS 像素 = 2 個物理像素）。&lt;/li>
&lt;li>&lt;code>window.outerWidth&lt;/code>: 瀏覽器窗口的整體寬度（包括邊框、工具欄等）。&lt;/li>
&lt;li>&lt;code>window.innerWidth&lt;/code>: 可見區域的寬度（包含滾動條）。&lt;/li>
&lt;li>&lt;code>document.documentElement.clientWidth&lt;/code>: 可見區域的寬度（不包含滾動條）。&lt;/li>
&lt;li>&lt;code>screen.width&lt;/code>: 屏幕(硬體)解析度的寬度（整個設備屏幕的寬度，與瀏覽器窗口大小無關）。&lt;/li>
&lt;/ul>
&lt;h3 id="url">url&lt;/h3>
&lt;ul>
&lt;li>&lt;code>window.location.search&lt;/code>: 用於獲取 URL 中的查詢字串（query string）。查詢字串是指 ? 後面的部分，通常用來傳遞參數，例如：&lt;code>https://example.com/page?name=John&amp;amp;age=30&lt;/code> 中的 &lt;code>?name=John&amp;amp;age=30&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>HackMD - Note</title><link>https://HoshikawaRyuukou.github.io/posts/hackmd---note/</link><pubDate>Tue, 29 Oct 2024 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/hackmd---note/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>HackMD 的核心思想是&lt;/p>
&lt;blockquote>
&lt;p>輕鬆使用 Markdown 協作文件的工具&lt;/p>&lt;/blockquote>
&lt;p>符合的筆者的使用需求&lt;/p>
&lt;ul>
&lt;li>免費方案適合輕度用戶&lt;/li>
&lt;li>跨平台兼容性（桌面/移動設備）&lt;/li>
&lt;li>支援 Markdown 格式&lt;/li>
&lt;li>文件管理（標籤/搜索功能）&lt;/li>
&lt;li>分享控制（私人/公開）&lt;/li>
&lt;li>支援遠端同步&lt;/li>
&lt;/ul>
&lt;p>付費方案差異&lt;/p>
&lt;ul>
&lt;li>多人協作人數&lt;/li>
&lt;li>文件大小限制&lt;/li>
&lt;li>版本控制&lt;/li>
&lt;li>API 接入&lt;/li>
&lt;/ul>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://hackmd.io/zh">HackMD：協作 Markdown 文件，分享知識的平台&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hackmd.io/c/tutorials-tw/%2Fs%2Ftutorials-tw?utm_source=home&amp;amp;utm_medium=nav-bar">HackMD 使用教學&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hackmd.io/c/tutorials-tw/%2F%40docs%2Fquick-start-guild-tw?utm_source=home&amp;amp;utm_medium=nav-bar">HackMD 快速入門教學&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hackmd.io/how-to-create-slide-deck-tw">用 HackMD 做簡報&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hackmd.io/slide-example?both">Slide-example&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Tools - ExifTool - Note</title><link>https://HoshikawaRyuukou.github.io/posts/tools---exiftool---note/</link><pubDate>Sun, 27 Oct 2024 21:13:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/tools---exiftool---note/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>ExifTool 用來讀取、寫入、編輯各種檔案的 元數據（Metadata），特別是 照片、影片、音訊、PDF 等格式。&lt;/p>
&lt;h2 id="memo">Memo&lt;/h2>
&lt;h3 id="source-覆蓋-target">source 覆蓋 target&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>exiftool -overwrite_original -all&lt;span style="color:#f92672">=&lt;/span> target.png
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exiftool -tagsFromFile source.png -all:all target.png
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Game Design - System</title><link>https://HoshikawaRyuukou.github.io/posts/game-design---system/</link><pubDate>Fri, 25 Oct 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/game-design---system/</guid><description>&lt;h2 id="戰鬥">戰鬥&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://wudaijun.com/2017/09/ngs-battle/#valine-comments">探讨服务端回合制战斗系统&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="技能">技能&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.shymean.com/article/%E4%B8%80%E7%A7%8D%E6%98%93%E6%89%A9%E5%B1%95%E6%B8%B8%E6%88%8F%E6%8A%80%E8%83%BD%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88">一种易扩展游戏技能系统的实现方案&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.liuocean.com/2023/01/07/ru-he-she-ji-ji-neng-xi-tong/">如何设计技能系统&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="場景">場景&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=GnOmGdMh7ww">樓梯是如何成為遊戲界難題的？拆解鳴潮和絕區零的解決方案&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1xPoXYgEM2">把重力倒转180度，鸣潮交出了顶级场景设计&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV11gGXzzE2Z">水为什么会成为游戏界试金石？各游戏的里水是怎么做出来的？&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="shader">Shader&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1zi421h7tJ">【OpenGL 篇】为什么游戏总要编译着色器？&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Software Development - Repository Structure - monorepo</title><link>https://HoshikawaRyuukou.github.io/posts/software-development---repository-structure---monorepo/</link><pubDate>Wed, 23 Oct 2024 21:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-development---repository-structure---monorepo/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://segmentfault.com/a/1190000045216948">Monorepo：让你的项目脱胎换骨，既能代码复用，又能独立部署！&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="config">Config&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://blog.logrocket.com/boost-your-productivity-with-typescript-project-references/">Boost your productivity with TypeScript project references&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dev.to/cryogenicplanet/an-actual-complete-guide-to-typescript-monorepos-240l">An actual complete guide to typescript monorepos&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://moonrepo.dev/docs/guides/javascript/typescript-project-refs">TypeScript project references&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="template">Template&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/jkomyno/pnpm-monorepo-template/tree/main">jkomyno/pnpm-monorepo-template&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/bakeruk/modern-typescript-monorepo-example">bakeruk/modern-typescript-monorepo-example&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/firxworx/fx-pnpm-monorepo-starter">firxworx/fx-pnpm-monorepo-starter&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/limuen/monorepo-project">limuen/monorepo-project&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/ixahmedxi/orbitkit">ixahmedxi/orbitkit&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Javascript_TypeScript - Package - rimraf</title><link>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---package---rimraf/</link><pubDate>Tue, 22 Oct 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---package---rimraf/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>rimraf 是一個用於遞迴刪除文件或目錄的 Node.js 庫，類似於 Unix 上的 rm -rf 命令。它的主要功能是跨平台刪除文件和文件夾，特別適合在 Windows 和 Unix 系統上使用。&lt;/p>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/isaacs/rimraf">isaacs/rimraf&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/imdeity/article/details/137772287">Rimraf详细介绍&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="install">Install&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm add -D rimraf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="usage">Usage&lt;/h2>
&lt;h3 id="單個文件">單個文件&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm rimraf file.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="單個目錄">單個目錄&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm rimraf folder
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="複數目標">複數目標&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm rimraf folder1 folder2 file.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="匹配目標">匹配目標&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm rimraf --glob &lt;span style="color:#d88200">&amp;#34;./**/index.js&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="透過-scripts-command-執行">透過 scripts command 執行&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;scripts&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;clean&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;rimraf dist&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Javascript_TypeScript - Package - workerpool</title><link>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---package---workerpool/</link><pubDate>Tue, 22 Oct 2024 08:12:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---package---workerpool/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;ul>
&lt;li>整合 Web Workers 與 worker_threads，因此支援瀏覽器和 Node.js。&lt;/li>
&lt;li>API 設計直觀(管理工作線程、訊息傳遞和錯誤處理)。&lt;/li>
&lt;li>實現 worker pool 管理功能。&lt;/li>
&lt;li>支援 Promise 與 async/await。&lt;/li>
&lt;/ul>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/josdejong/workerpool">workerpool&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/josdejong/workerpool/blob/master/examples/vite/README.md">Vite Workerpool Example&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="other">Other&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.ryuollojy.com/articles/nest-js-worker-threads">Nest.js - Worker threads 잘 사용해보기&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dev.to/zenstok/nestjs-dependency-injection-in-worker-threads-5deh">NestJS Dependency Injection in Worker Threads&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/vitest-dev/vitest/issues/5757#issuecomment-2146013141">https://github.com/vitest-dev/vitest/issues/5757#issuecomment-2146013141&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/nodejs/node/issues/47747">https://github.com/nodejs/node/issues/47747&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Workflow - Send messages to Telegram via GitHub Actions</title><link>https://HoshikawaRyuukou.github.io/posts/workflow---send-messages-to-telegram-via-github-actions/</link><pubDate>Sat, 19 Oct 2024 19:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow---send-messages-to-telegram-via-github-actions/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>以下範例為 :&lt;/p>
&lt;blockquote>
&lt;p>在 git push 後透過 Github Actions 將 tag + commit 訊息發送到指定的 Telegram 群組&lt;/p>&lt;/blockquote>
&lt;h2 id="設置-telegram-bot">設置 Telegram Bot&lt;/h2>
&lt;ul>
&lt;li>在 Telegram 中搜尋 @BotFather 並建立一個新的 bot，記下 API token。&lt;/li>
&lt;li>將 bot 加入群組並發送訊息給 bot&lt;/li>
&lt;li>使用 &lt;code>https://api.telegram.org/bot&amp;lt;YourBotToken&amp;gt;/getUpdates&lt;/code> 來獲取群組 ID。&lt;/li>
&lt;/ul>
&lt;h2 id="設置-github-secrets">設置 GitHub Secrets&lt;/h2>
&lt;p>GitHub 專案中&lt;/p>
&lt;blockquote>
&lt;p>Settings -&amp;gt; Security -&amp;gt; Secrets and variables -&amp;gt; Actions -&amp;gt; Repository secrets&lt;/p>&lt;/blockquote>
&lt;p>新增以下 secrets :&lt;/p>
&lt;ul>
&lt;li>TELEGRAM_BOT_TOKEN : Telegram Bot Token&lt;/li>
&lt;li>TELEGRAM_CHAT_ID : Telegram 群組 ID&lt;/li>
&lt;/ul>
&lt;h2 id="設置-github-variables">設置 GitHub Variables&lt;/h2>
&lt;p>GitHub 專案中&lt;/p></description></item><item><title>Javascript_TypeScript - Package - lint-staged</title><link>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---package---lint-staged/</link><pubDate>Fri, 18 Oct 2024 08:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---package---lint-staged/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>lint-staged 可以只對 git staged 的檔案執行 lint 處理，進而提升檢查效率。&lt;/p>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/lint-staged/lint-staged">lint-staged/lint-staged&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="notice">Notice&lt;/h2>
&lt;ul>
&lt;li>⚠️ 這裡與 simple-git-hooks 搭配使用&lt;/li>
&lt;li>⚠️ 跟 Prettier 搭配使用，必須確保 ESLint 在 Prettier 前面先執行&lt;/li>
&lt;/ul>
&lt;h2 id="install">Install&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm add -D lint-staged
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="config">Config&lt;/h2>
&lt;h3 id="packagejson">package.json&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;lint-staged&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;*.{js,json}&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;prettier --write&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;*.ts?(x)&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;eslint --fix&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#34;prettier --parser=typescript --write&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="usage">Usage&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm lint-staged 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Javascript_TypeScript - Package - ESLint</title><link>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---package---eslint/</link><pubDate>Thu, 17 Oct 2024 22:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---package---eslint/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>ESLint 是一個用來檢查和修復 JavaScript/TypeScript 程式碼風格和潛在錯誤的工具，幫助維持一致性和提高程式碼品質。它可以根據自訂規則或預設的最佳實踐規則來進行靜態分析。&lt;/p>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/eslint/eslint">eslint/eslint&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://eslint.org/">ESLint - Pluggable JavaScript Linter&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jmugliston.dev/blog/using-the-new-eslint-flat-config">Using the New ESLint Flat Config&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zenn.dev/cybozu_frontend/articles/about-eslint-flat-config">仕組みと嬉しさから理解するeslint FlatConfig対応&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="notice">Notice&lt;/h2>
&lt;ul>
&lt;li>⚠️ ESLint 正逐步廢除&lt;strong>格式化規則&lt;/strong> - &lt;a href="https://eslint.org/blog/2023/10/deprecating-formatting-rules/">Deprecation of formatting rules&lt;/a>。&lt;/li>
&lt;li>⚠️ 官方建議使用 Prettier 作為格式化方案。&lt;/li>
&lt;/ul>
&lt;h2 id="install">Install&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm create @eslint/config@latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="extension">Extension&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint">vscode extension&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="vscodeextensionjson">.vscode/extension.json&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;recommendations&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;dbaeumer.vscode-eslint&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="config">Config&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>eslint.config.js&lt;/strong> - 使用純 JavaScript 編寫配置，以便支持更好的導入導出。&lt;/li>
&lt;li>使用一個純陣列來定義所有的規則和配置，避免了多層嵌套的問題。&lt;/li>
&lt;li>後面出現的配置會覆蓋前面的配置。&lt;/li>
&lt;/ul>
&lt;h3 id="eslintconfigjs">eslint.config.js&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">import&lt;/span> &lt;span style="color:#75af00">pluginJs&lt;/span> &lt;span style="color:#75af00">from&lt;/span> &lt;span style="color:#d88200">&amp;#39;@eslint/js&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">import&lt;/span> &lt;span style="color:#75af00">tseslint&lt;/span> &lt;span style="color:#75af00">from&lt;/span> &lt;span style="color:#d88200">&amp;#39;typescript-eslint&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">export&lt;/span> &lt;span style="color:#00a8c8">default&lt;/span> &lt;span style="color:#111">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;all&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">files&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;**/*.{js,ts,vue}&amp;#39;&lt;/span>&lt;span style="color:#111">],&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ignores&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;**/node_modules/**&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;**/dist/**&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;**/coverage/**&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;**/*.min.js&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">rules&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;no-console&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;warn&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;no-unused-vars&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;error&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;frontend&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">files&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;packages/app-frontend/**/*.{js,ts,vue}&amp;#39;&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">rules&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;no-debugger&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;error&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;backend&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">files&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;packages/app-backend/**/*.{js,ts}&amp;#39;&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">rules&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#d88200">&amp;#39;no-console&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;off&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">name&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;shared-library&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">files&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;packages/shared-library/**/*.{js,ts}&amp;#39;&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ignores&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;**/*.test.ts&amp;#39;&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">pluginJs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">configs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">recommended&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">...&lt;/span>&lt;span style="color:#75af00">tseslint&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">configs&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">recommended&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="extra---eslint-config-inspector">Extra - ESLint Config Inspector&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpx @eslint/config-inspector
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Javascript_TypeScript - Package - simple-git-hooks</title><link>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---package---simple-git-hooks/</link><pubDate>Tue, 15 Oct 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---package---simple-git-hooks/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/toplenboren/simple-git-hooks">toplenboren/simple-git-hooks&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://git-scm.com/docs/githooks">githooks&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="notice">Notice&lt;/h2>
&lt;ul>
&lt;li>⚠️ 更改命令後記得更新 git hook&lt;/li>
&lt;li>⚠️ 不要添加 &lt;code>&amp;quot;postinstall&amp;quot;: &amp;quot;pnpx simple-git-hooks&amp;quot;&lt;/code> 於 package.json，會影響 publish 行為&lt;/li>
&lt;li>⚠️ 個人不建議簡化 &lt;code>跳過 hook&lt;/code> 行為，必須保持操作不適度&lt;/li>
&lt;/ul>
&lt;h2 id="install">Install&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm add -D simple-git-hooks
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="config">Config&lt;/h2>
&lt;h3 id="packagejson">package.json&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;scripts&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;postinstall&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;simple-git-hooks&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;simple-git-hooks&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;pre-commit&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;pnpm lint-staged &amp;amp;&amp;amp; pnpm check&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;commit-msg&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;node scripts/verify-commit.js&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="usage">Usage&lt;/h2>
&lt;h3 id="更新-git-hook">更新 git hook&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpx simple-git-hooks
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="跳過-git-hook---ci">跳過 git hook - CI&lt;/h3>
&lt;ul>
&lt;li>這部分代補，目前沒有操作情境&lt;/li>
&lt;li>&lt;a href="https://github.com/toplenboren/simple-git-hooks?tab=readme-ov-file#i-want-to-skip-git-hooks">doc&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="跳過-git-hook---三方-git-client">跳過 git hook - 三方 git client&lt;/h3>
&lt;ul>
&lt;li>開啟 git bash&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>- git commit -m &lt;span style="color:#d88200">&amp;#34;你的 commit 訊息&amp;#34;&lt;/span> --no-verify
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Javascript_TypeScript - Package - tsup</title><link>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---package---tsup/</link><pubDate>Sun, 13 Oct 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---package---tsup/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;blockquote>
&lt;p>The simplest and fastest way to bundle your TypeScript libraries.&lt;/p>&lt;/blockquote>
&lt;p>設計的初衷是讓開發者能夠以最少的設定完成打包工作，內建許多合理的預設值。&lt;/p>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/egoist/tsup">egoist/tsup&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tsup.egoist.dev/#what-can-it-bundle">tsup&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.modyqyw.top/blogs/2022/12/why-tsup">为什么是 tsup&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://johnnyreilly.com/dual-publishing-esm-cjs-modules-with-tsup-and-are-the-types-wrong">Dual Publishing ESM and CJS Modules with tsup and Are the Types Wrong?&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="install">Install&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm add -D tsup
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="config">Config&lt;/h2>
&lt;h3 id="packagejson">package.json&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;scripts&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;build&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;tsup&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="tsupconfigts---only-esm-module">tsup.config.ts - only esm module&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">import&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75af00">defineConfig&lt;/span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">from&lt;/span> &lt;span style="color:#d88200">&amp;#39;tsup&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">export&lt;/span> &lt;span style="color:#00a8c8">default&lt;/span> &lt;span style="color:#75af00">defineConfig&lt;/span>&lt;span style="color:#111">({&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 指定入口文件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">entry&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;src/index.ts&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;src/subpath/index.ts&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#39;src/internal/index.ts&amp;#39;&lt;/span>&lt;span style="color:#111">],&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// ESM 格式
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">format&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;esm&amp;#39;&lt;/span>&lt;span style="color:#111">],&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 生成類型定義
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">dts&lt;/span>: &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 每次構建時清理輸出目錄
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">clean&lt;/span>: &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Node.js - package.json - Export</title><link>https://HoshikawaRyuukou.github.io/posts/node.js---package.json---export/</link><pubDate>Sun, 13 Oct 2024 09:11:01 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/node.js---package.json---export/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://nodejs.org/api/packages.html#package-entry-points">Package entry points&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html#version-selection-with-typesversions">Version selection with typesVersions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.nullfox.com/multiple-exports-typescript-package-types">Multiple exports with types in a Typescript Package&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/627434408">巧用 exports 和 typeVersions 提升 npm 包用户使用体验&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="suggestion">Suggestion&lt;/h2>
&lt;ul>
&lt;li>以較新 Node.js 版本為目標的新包，建議使用 &lt;code>exports&lt;/code> 欄位。&lt;/li>
&lt;li>sample - &lt;a href="https://github.com/vuejs/core/blob/main/packages/vue/package.json">vue/core&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="notice">Notice&lt;/h2>
&lt;p>當定義了 exports 欄位時&lt;/p>
&lt;ul>
&lt;li>⚠️ Node.js 會優先使用 exports 來決定如何載入模組，只有在 exports 中沒有相應定義時，才會使用 main、module 和 types 欄位。&lt;/li>
&lt;li>⚠️ 所有子路徑都會被封裝起來，除非明確導出，否則這些子路徑將無法供使用者訪問(會拋出一個 &lt;code>ERR_PACKAGE_PATH_NOT_EXPORTED&lt;/code> 的錯誤)。&lt;/li>
&lt;/ul>
&lt;h2 id="fields">Fields&lt;/h2>
&lt;h3 id="main">main&lt;/h3>
&lt;p>當套件被作為 CommonJS 模組引入時，預設的入口點。&lt;/p>
&lt;h3 id="module">module&lt;/h3>
&lt;p>當套件被作為 ES 模組引入時，預設的入口點。&lt;/p>
&lt;h3 id="types">types&lt;/h3>
&lt;p>TypeScript 的類型定義檔案位置，提供 TypeScript 支援。&lt;/p>
&lt;h3 id="exports">exports&lt;/h3>
&lt;ul>
&lt;li>用來細化和取代傳統的 main 和 module 欄位。&lt;/li>
&lt;li>提高包的安全性：限制用戶可以訪問的內部文件，防止直接訪問內部未經授權的代碼。&lt;/li>
&lt;li>更清晰的 API：只公開需要使用的部分代碼，簡化使用者的導入過程。&lt;/li>
&lt;li>支持不同的模組格式：通過同時支持 require 和 import，可以在不同的環境中更靈活使用。&lt;/li>
&lt;/ul>
&lt;h2 id="exports---conditional-exports">exports - Conditional Exports&lt;/h2>
&lt;p>目前指導出 esm 模組，未來需要雙入口再回補。&lt;/p></description></item><item><title>Node.js - Package Manager - pnpm</title><link>https://HoshikawaRyuukou.github.io/posts/node.js---package-manager---pnpm/</link><pubDate>Sat, 12 Oct 2024 21:16:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/node.js---package-manager---pnpm/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://pnpm.nodejs.cn/">pnpm&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cnblogs.com/cangqinglang/p/14448329.html">为什么现在我更推荐 pnpm 而不是 npm/yarn? &lt;/a>&lt;/li>
&lt;li>&lt;a href="https://juejin.cn/post/7286362110211489855?searchId=20240731105621AD124E03A93B1AB5027A">pnpm、npm、yarn 包管理工具『优劣对比』及『环境迁移』&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qborfy.com/today/20230219.html">从pnpm工具了解整个npm包核心管理原理&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.explainthis.io/zh-hant/swe/why-is-pnpm-faster">為什麼 pnpm 比 npm 更快且更省空間？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/bobo789456123/article/details/132882778">pnpm实战教程&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="install">Install&lt;/h2>
&lt;h3 id="全域安裝">全域安裝&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm install -g pnpm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="環境配置---windows">環境配置 - Windows&lt;/h3>
&lt;ul>
&lt;li>⚠️ 使用 PowerShell 系統管理員&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Get-ExecutionPolicy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 如果為 Restricted 則繼續進行 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set-ExecutionPolicy RemoteSigned
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="commands">Commands&lt;/h2>
&lt;h3 id="pnpm-本體">pnpm 本體&lt;/h3>
&lt;ul>
&lt;li>pnpm self-update : 將 pnpm 更新到最新版本。(建議重啟 ide)&lt;/li>
&lt;/ul>
&lt;h3 id="nodejs-的執行環境">Node.js 的執行環境&lt;/h3>
&lt;ul>
&lt;li>pnpm env use &amp;ndash;global lts : 安裝並使用 LTS 版本&lt;/li>
&lt;li>pnpm env use &amp;ndash;global {version} : 安裝並使用指定版本&lt;/li>
&lt;li>pnpm env add &amp;ndash;global {version} : 僅安裝指定版本&lt;/li>
&lt;li>pnpm env remove &amp;ndash;global {version} : 移除指定版本&lt;/li>
&lt;li>pnpm env list &amp;ndash;remote : 列出線上可用的版本&lt;/li>
&lt;/ul>
&lt;h3 id="packages">packages&lt;/h3>
&lt;ul>
&lt;li>pnpm add &lt;code>&amp;lt;pkg&amp;gt;&lt;/code> : 添加依賴&lt;/li>
&lt;li>pnpm remove &lt;code>&amp;lt;pkg&amp;gt;&lt;/code> : 移除依賴&lt;/li>
&lt;li>pnpm install : 安裝所有依賴&lt;/li>
&lt;li>pnpm update : 在 package.json 限制的版本範圍內更新所有依賴&lt;/li>
&lt;li>pnpm update &amp;ndash;latest : 強更新所有依賴至最新&lt;/li>
&lt;li>pnpm outdated : 檢查套件是否有更新&lt;/li>
&lt;li>pnpm store prune : 會清理掉不再被專案引用的包&lt;/li>
&lt;li>pnpm run &lt;code>&amp;lt;commnad&amp;gt;&lt;/code> : 執行命令 (run 基本)&lt;/li>
&lt;/ul>
&lt;h3 id="workspace">workspace&lt;/h3>
&lt;ul>
&lt;li>-w : 為工作區參數&lt;/li>
&lt;li>-wD : 組合使用 - 工作區依賴&lt;/li>
&lt;li>&amp;ndash;filter &lt;code>&amp;lt;package_selector&amp;gt;&lt;/code>: 對指定 package 操作&lt;/li>
&lt;/ul></description></item><item><title>Javascript_TypeScript - TypeScript - tsconfig.json</title><link>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---typescript---tsconfig.json/</link><pubDate>Sat, 12 Oct 2024 08:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---typescript---tsconfig.json/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>當目錄中出現了 tsconfig.json 文件，則表示該目錄是 TypeScript 專案的根目錄。tsconfig.json 檔案指定了編譯專案所需的根目錄下的檔案以及編譯選項。實務上在不同的開發情境中，準備不同的 tsconfig.json 是非常有必要的。&lt;/p>
&lt;ul>
&lt;li>開發環境中，可能希望啟用更多的錯誤檢查和調試資訊，以便更快地發現問題。&lt;/li>
&lt;li>生產環境中，則可能希望關閉這些額外的檢查，以提升編譯速度並減少輸出檔案大小。&lt;/li>
&lt;/ul>
&lt;p>呼叫 tsc 時使用 &lt;code>--project&lt;/code> 或 &lt;code>-p&lt;/code> 選項來指定相應的配置檔案。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tsc -p tsconfig.build.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.typescriptlang.org/zh/docs/handbook/tsconfig-json.html">tsconfig.json 是什麼&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.typescriptlang.org/tsconfig/">TSConfig Reference&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://juejin.cn/post/7165429078470688781">tsc性能优化 &amp;ndash; Project References&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="基底-tsconfig">基底 tsconfig&lt;/h2>
&lt;p>Node 20 推薦的 tsconfig.json&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.npmjs.com/package/@tsconfig/node20">@tsconfig/node20&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm install -D @tsconfig/node20
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以繼承基底 tsconfig 並覆寫參數&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;extends&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;@tsconfig/node20/tsconfig.json&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;compilerOptions&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;preserveConstEnums&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;include&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;src/**/*&amp;#34;&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;exclude&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;node_modules&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;**/*.spec.ts&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="型別導出">型別導出&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;compilerOptions&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;declaration&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;declarationMap&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;emitDeclarationOnly&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;outDir&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;./dist&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;exclude&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;tests/**/*&amp;#34;&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;include&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;src/**/*&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>declaration&lt;/strong>：是否生成對應的 &lt;strong>.d.ts&lt;/strong> 檔案，用來描述編譯後的 JavaScript 的型別資訊。&lt;/li>
&lt;li>&lt;strong>declarationMap&lt;/strong>：會為 &lt;strong>.d.ts&lt;/strong> 檔案生成對應的 &lt;strong>.d.ts.map&lt;/strong> 檔案，使得編譯後的型別定義可以追溯到原始 TypeScript 代碼。&lt;/li>
&lt;li>&lt;strong>emitDeclarationOnly&lt;/strong>：TypeScript 只會生成 &lt;strong>.d.ts&lt;/strong> 型別檔案，不會生成對應的 JavaScript 檔案。&lt;/li>
&lt;li>&lt;strong>outDir&lt;/strong>：指定了編譯器應該將生成的 JavaScript 和型別定義檔案輸出到的目錄。&lt;/li>
&lt;li>&lt;strong>exclude/include&lt;/strong>：控制哪些檔案會被包含在編譯過程中。這會間接影響型別的導出，因為只有被包含的檔案才會生成 .d.ts 型別定義檔。&lt;/li>
&lt;/ul>
&lt;h2 id="monorepo">Monorepo&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;compilerOptions&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;incremental&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;composite&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="incremental">incremental&lt;/h3>
&lt;p>用於加速 TypeScript 的編譯過程，特別是當代碼庫很大或涉及多個子項目時。&lt;/p></description></item><item><title>Workflow - Create a template for full-stack monorepo</title><link>https://HoshikawaRyuukou.github.io/posts/workflow---create-a-template-for-full-stack-monorepo/</link><pubDate>Fri, 11 Oct 2024 09:13:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow---create-a-template-for-full-stack-monorepo/</guid><description>&lt;h2 id="structure">Structure&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>project-root/ 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── pnpm-workspace.yaml 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── scripts/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── apps/ 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">|&lt;/span> ├── cli/ 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">|&lt;/span> ├── web/ &lt;span style="color:#f92672">(&lt;/span>vue&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">|&lt;/span> └── desktop/ &lt;span style="color:#f92672">(&lt;/span>electron&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── packages/ 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── pkg01/ 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── pkg02/ 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="scripts">scripts&lt;/h3>
&lt;ul>
&lt;li>全域工作區命令。&lt;/li>
&lt;/ul>
&lt;h3 id="apps">apps&lt;/h3>
&lt;ul>
&lt;li>每個子資料夾代表一個最終的應用場景(終端)。&lt;/li>
&lt;/ul>
&lt;h3 id="packages">packages&lt;/h3>
&lt;ul>
&lt;li>專注於封裝和共享具體的功能模組，為各個終端應用提供支援。&lt;/li>
&lt;/ul></description></item><item><title>Electron - Note</title><link>https://HoshikawaRyuukou.github.io/posts/electron---note/</link><pubDate>Fri, 11 Oct 2024 09:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/electron---note/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>Electron 是一個使用 JavaScript、HTML 和 CSS + Native Api 做相容多個系統（Windows、Linux、Mac）的桌面應用程式&lt;strong>構建&lt;/strong>框架 —— 不需要本地開發經驗。&lt;/p>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.electronjs.org/">Build cross-platform desktop apps with JavaScript, HTML, and CSS | Electron&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.electron.build/">electron-builder&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://muyacode.github.io/FrontEndLearnNotes/Document/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E6%A1%8C%E9%9D%A2%E7%AB%AF%E5%BC%80%E5%8F%91/Electron/Guide">Electron学习指引&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/sindresorhus/awesome-electron">awesome-electron&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/sudhakar3697/awesome-electron-alternatives">awesome-electron-alternatives&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="suggestion">Suggestion&lt;/h2>
&lt;p>🤓 強烈建議第一次接觸 Electron 的開發者實際走一次官方 quick-start，會對 Electron 的本質有更純粹的認識。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/electron/electron-quick-start">electron/electron-quick-start&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>再逐步的嘗試以下機制 :&lt;/p>
&lt;ul>
&lt;li>用 BrowserWindow 再額外創建一個窗口。&lt;/li>
&lt;li>用 ipcMain/ipcRenderer 來達到進程間交互。&lt;/li>
&lt;/ul>
&lt;h2 id="notice">Notice&lt;/h2>
&lt;ul>
&lt;li>⚠️ &lt;a href="https://www.electronjs.org/zh/docs/latest/tutorial/esm">Electron 中的 ES 模塊 (ESM) 並未 100% 支援&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Workflow - Create a monorepo with pnpm workspace</title><link>https://HoshikawaRyuukou.github.io/posts/workflow---create-a-monorepo-with-pnpm-workspace/</link><pubDate>Sun, 06 Oct 2024 20:31:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow---create-a-monorepo-with-pnpm-workspace/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://juejin.cn/post/7357546247848198182">Monorepo与pnpm：前端项目管理的完美搭档&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://juejin.cn/post/7316409548994625574?searchId=20240731105621AD124E03A93B1AB5027A">为什么 pnpm+monorepo 是组件库项目的最佳实践&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://israynotarray.com/other/20240413/3177435894/">Monorepo？來聊聊另一種專案管理架構吧！&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qborfy.com/today/20230107.html">从npm版本依赖到Monorepo大仓项目&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qborfy.com/today/20230225.html">MonoRepo实战：pnpm+nx搭建MonoRepo项目&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dev.to/vinomanick/create-a-monorepo-using-pnpm-workspace-1ebn">Create a monorepo using PNPM workspace&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://juejin.cn/post/7210310775276716092?searchId=20241003162352CA6A9111EA17F1CC615A">从构建到发布：Monorepo 的最佳实践&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/Bernankez/TSTemplateMonorepo">TSTemplateMonorepo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://juejin.cn/post/7338268608324681747">pnpm monorepo 搭建工具库&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="專案基本結構">專案基本結構&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>project-root/ &lt;span style="color:#75715e"># 專案根目錄&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── pnpm-workspace.yaml &lt;span style="color:#75715e"># pnpm 的工作區配置文件，用來定義哪些資料夾屬於工作區範圍&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── package.json &lt;span style="color:#75715e"># 專案的全局配置文件，通常包括依賴、腳本和項目元數據&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── packages/ &lt;span style="color:#75715e"># 所有子包的資料夾，存放具體的子項目&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── pkg01/ &lt;span style="color:#75715e"># 子包01，包含它自己的 package.json 文件和代碼&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── pkg02/ &lt;span style="color:#75715e"># 子包02，與 pkg01 結構相似，也擁有自己的 package.json 和代碼&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="新增-專案內全局配置-packagejson">新增 專案內全局配置 ./package.json&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 產生一個基本的 package.json&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pnpm init 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>monorepo 的全局 package.json 設置 &lt;code>&amp;quot;private&amp;quot;: true&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;private&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="新增-工作區配置文件-pnpm-workspaceyaml">新增 工作區配置文件 ./pnpm-workspace.yaml&lt;/h2>
&lt;ul>
&lt;li>該檔案聲明這是一個 Monorepo 專案。&lt;/li>
&lt;li>&lt;code>pnpm install&lt;/code> 自動安裝所有 package 的相依套件。&lt;/li>
&lt;li>&lt;code>packages&lt;/code> 字段列出了工作區包含的 package 位置。&lt;/li>
&lt;li>工作區下的 package 會有各自的 package.json。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">packages&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#d88200">&amp;#39;packages/*&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="extra---在專案中限用-pnpm">Extra - 在專案中限用 pnpm&lt;/h2>
&lt;p>⚠️ 但目前 npm hook - preinstall 未如預期運作。&lt;/p></description></item><item><title>Workflow - Optimize a monorepo with pnpm and Turborepo</title><link>https://HoshikawaRyuukou.github.io/posts/workflow---optimize-a-monorepo-with-pnpm-and-turborepo/</link><pubDate>Sun, 06 Oct 2024 20:31:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow---optimize-a-monorepo-with-pnpm-and-turborepo/</guid><description>&lt;h2 id="guide">Guide&lt;/h2></description></item><item><title>Workflow - Generate a Github Packages Access Token</title><link>https://HoshikawaRyuukou.github.io/posts/workflow---generate-a-github-packages-access-token/</link><pubDate>Sun, 06 Oct 2024 20:13:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow---generate-a-github-packages-access-token/</guid><description>&lt;h2 id="steps">Steps&lt;/h2>
&lt;ol>
&lt;li>切換到 github 用戶號 (不是組織號)&lt;/li>
&lt;li>Settings/Developer Settings&lt;/li>
&lt;li>Personal access tokens (classic)&lt;/li>
&lt;li>僅啟用 read:packagesDownload packages from GitHub Package Registry&lt;/li>
&lt;/ol>
&lt;h2 id="to-do">To-do&lt;/h2>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> 改用更推薦的 Fine-grained personal access tokens&lt;/li>
&lt;/ul></description></item><item><title>Workflow - Install a private npm package from Github Packages</title><link>https://HoshikawaRyuukou.github.io/posts/workflow---install-a-private-npm-package-from-github-packages/</link><pubDate>Sun, 06 Oct 2024 20:12:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow---install-a-private-npm-package-from-github-packages/</guid><description>&lt;h2 id="requirement">Requirement&lt;/h2>
&lt;ul>
&lt;li>⚠️ 向 github 組織索取訪問用的 token&lt;/li>
&lt;li>⚠️ 本範例使用 npm，之後會轉使用 pnpm&lt;/li>
&lt;/ul>
&lt;h2 id="window-環境變數設置-token">Window 環境變數設置 token&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>setx GITHUB_TOKEN ghp_xxxxxxxxxxxxxxxxxxxxxxxx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>⚠️ 設置後必要時重啟終端機以確保環境變數被應用&lt;/li>
&lt;/ul>
&lt;h2 id="初始化-project">初始化 project&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">cd&lt;/span> project-directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm init -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="新增-npmrc">新增 ./.npmrc&lt;/h2>
&lt;ul>
&lt;li>⚠️ 這裡的第二行註解是正規寫法，有特殊用途&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>@xxx:registry=https://npm.pkg.github.com
//npm.pkg.github.com/:_authToken=&amp;#34;${GITHUB_TOKEN}&amp;#34;
&lt;/code>&lt;/pre>&lt;h2 id="安裝-package">安裝 package&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm install @ooxx/xxx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Workflow - Publish a private package to Github Packages</title><link>https://HoshikawaRyuukou.github.io/posts/workflow---publish-a-private-package-to-github-packages/</link><pubDate>Sun, 06 Oct 2024 20:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow---publish-a-private-package-to-github-packages/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://dev.to/carloshendvpm/publishing-a-private-package-on-github-packages-23bf">Publishing a Private Package on GitHub Packages&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.github.com/zh/actions/use-cases-and-examples/publishing-packages/publishing-nodejs-packages">发布 Node.js 包&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="notice">Notice&lt;/h2>
&lt;ul>
&lt;li>⚠️ 請先確保 repository 與 package 以配置為 private。&lt;/li>
&lt;li>⚠️ 本範例使用 pnpm。&lt;/li>
&lt;/ul>
&lt;h2 id="packagejson-的必要配置">package.json 的必要配置&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;@user-or-organization/package-name&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;version&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;1.0.0&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;repository&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;url&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;https://github.com/user-or-organization/package-name.git&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;publishConfig&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;registry&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;https://npm.pkg.github.com/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="githubworkflowspublish-packageyml">.github/workflows/publish-package.yml&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Publish package to GitHub Packages&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">on&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">workflow_dispatch&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">release&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">types&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#ae81ff">published]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">jobs&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">build&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">runs-on&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">ubuntu-latest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">permissions&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">contents&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">read&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">packages&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">write&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">steps&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">uses&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">actions/checkout@v4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">uses&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">pnpm/action-setup@v4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">version&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">9&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">run_install&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">uses&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">actions/setup-node@v4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">node-version&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;20.x&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">registry-url&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;https://npm.pkg.github.com&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">scope&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;@user-or-organization&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Install dependencies&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">run&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">pnpm install&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Build package&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">run&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">pnpm build&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Publish package&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">run&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">pnpm publish --access restricted&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">env&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">NODE_AUTH_TOKEN&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">${{ secrets.GITHUB_TOKEN }}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Software Design - Architecture - Web &amp; Desktop app</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---architecture---web--desktop-app/</link><pubDate>Sat, 05 Oct 2024 21:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---architecture---web--desktop-app/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>(⚠️ 實驗中) 當一個要開發一個同時支援 &lt;strong>網頁端&lt;/strong> 與 &lt;strong>桌面端&lt;/strong> 的應用時，該如何設計。以下範例說明使用&lt;/p>
&lt;ul>
&lt;li>UIFramework : Vue3&lt;/li>
&lt;li>Desktop Framework : Electron&lt;/li>
&lt;/ul>
&lt;h2 id="architecture">Architecture&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>project-root/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── core/ &lt;span style="color:#75715e"># 核心業務邏輯&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── services/ &lt;span style="color:#75715e"># 服務層，包含業務邏輯 (e.g., FileManager)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── models/ &lt;span style="color:#75715e"># 共享的資料模型和接口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── interfaces/ &lt;span style="color:#75715e"># 定義服務的接口 (e.g., IFileService)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── presentation/ &lt;span style="color:#75715e"># UI 表現層 (Vue3 應用)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── components/ &lt;span style="color:#75715e"># Vue 組件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── views/ &lt;span style="color:#75715e"># Vue 頁面&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── stores/ &lt;span style="color:#75715e"># Pinia 狀態管理&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── App.vue &lt;span style="color:#75715e"># Vue 入口文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── web/ &lt;span style="color:#75715e"># 瀏覽器端特定實現&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── services/ &lt;span style="color:#75715e"># 瀏覽器環境下的文件操作等服務實現 (e.g., BrowserFileService)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── index.html &lt;span style="color:#75715e"># 網頁版的入口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── main.js &lt;span style="color:#75715e"># 網頁版的啟動點，將核心業務注入 Vue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── desktop/ &lt;span style="color:#75715e"># Electron 桌面端特定實現&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── main/ &lt;span style="color:#75715e"># 主進程相關文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ ├── main.js &lt;span style="color:#75715e"># Electron 主進程入口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └── preload.js &lt;span style="color:#75715e"># 預加載腳本，用於將 Node API 注入到渲染進程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── renderer.js &lt;span style="color:#75715e"># 渲染進程啟動點，將核心業務注入 Vue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── package.json &lt;span style="color:#75715e"># 項目配置文件&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="thought">Thought&lt;/h2>
&lt;p>主體思想是基於 Clean Architecture，Clean Architecture 主張將業務邏輯與框架、UI 和其他技術細節分離，使得核心業務邏輯不依賴於特定的運行環境或框架。&lt;/p></description></item><item><title>Profile - Studio</title><link>https://HoshikawaRyuukou.github.io/posts/profile---studio/</link><pubDate>Wed, 02 Oct 2024 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/profile---studio/</guid><description>&lt;h2 id="箱庭工作室-miniature-garden-studio">箱庭工作室 (Miniature Garden Studio)&lt;/h2>
&lt;p>這是筆者的工作室名。&lt;/p>
&lt;h3 id="核心思想">核心思想&lt;/h3>
&lt;blockquote>
&lt;p>每個應用程式都是一個精心構築的 &lt;strong>箱庭/微型世界&lt;/strong>，在有限的環境中創造豐富且深度的體驗，讓使用者能夠沉浸其中。&lt;/p>&lt;/blockquote>
&lt;h2 id="現實中的箱庭">現實中的箱庭&lt;/h2>
&lt;p>箱庭（はこにわ，Hakoniwa），它是一種縮小版的庭園或景觀模型。這個概念源於日本，最早用來指代傳統日式庭園的迷你模型，但後來這個詞的應用範圍擴展到了各種縮小版的自然景觀創作。&lt;/p>
&lt;h2 id="遊戲中的箱庭">遊戲中的箱庭&lt;/h2>
&lt;p>箱庭設計在遊戲中已成為一種經典理念。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.ign.com.cn/ign-xiao-ke-tang/22014/feature/ignxiao-ke-tang-49xiang-ting">IGN小课堂#49：箱庭&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.gcores.com/articles/122163">从沙盒和开放世界谈起，说说日本的箱庭设计理念&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Logic - Pseudo-Problem</title><link>https://HoshikawaRyuukou.github.io/posts/logic---pseudo-problem/</link><pubDate>Tue, 01 Oct 2024 21:22:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/logic---pseudo-problem/</guid><description>&lt;h2 id="假議題pseudo-problem">假議題（pseudo-problem）&lt;/h2>
&lt;h3 id="領域">領域&lt;/h3>
&lt;ul>
&lt;li>非形式邏輯&lt;/li>
&lt;li>謬誤學&lt;/li>
&lt;/ul>
&lt;h3 id="簡述">簡述&lt;/h3>
&lt;p>&amp;ldquo;假議題&amp;rdquo; 是一種表面上看起來像是重要或值得討論的問題，但實際上並 &lt;strong>不具有實質意義或無法帶來真正的解決&lt;/strong> 方案。這類議題通常會引導人們將精力和資源集中在並不重要或無法解決的事情上，從而忽視了真正需要關注的問題。&lt;/p>
&lt;p>特點：&lt;/p>
&lt;ul>
&lt;li>錯誤的前提：假議題常常基於錯誤或不正確的前提來構建，問題本身可能從一開始就沒有存在的必要性。&lt;/li>
&lt;li>分散注意力：討論假議題可能會轉移人們對真正問題的注意，這樣的討論往往無法帶來實際的改變或有效的解決方案。&lt;/li>
&lt;li>無解的爭論：假議題可能導致無休止的爭論，因為其核心問題本質上是無法解決的，或者答案根本不重要。&lt;/li>
&lt;/ul>
&lt;h3 id="情境">情境&lt;/h3>
&lt;ul>
&lt;li>技術討論中，有時某些看似關鍵的技術細節被過度強調，但實際上並不影響整體系統的效能或成效，這樣的爭論也可以被視為一種假議題。&lt;/li>
&lt;li>討論「天使的性別是什麼？」這樣的問題，在哲學或神學中可能被認為是一個「假議題」，因為它無法被證實或否認，也沒有實際意義。&lt;/li>
&lt;/ul></description></item><item><title>Logic - Straw man</title><link>https://HoshikawaRyuukou.github.io/posts/logic---straw-man/</link><pubDate>Tue, 01 Oct 2024 21:20:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/logic---straw-man/</guid><description>&lt;h2 id="攻擊稻草人straw-man">攻擊稻草人（Straw man）&lt;/h2>
&lt;h3 id="領域">領域&lt;/h3>
&lt;ul>
&lt;li>非形式邏輯&lt;/li>
&lt;li>謬誤學&lt;/li>
&lt;/ul>
&lt;h3 id="簡述">簡述&lt;/h3>
&lt;p>「攻擊稻草人」（Strawman Fallacy）是一種邏輯謬誤，指的是 &lt;strong>&amp;ldquo;故意曲解或誇大&amp;rdquo;&lt;/strong> 對方的論點，然後對這個被扭曲的論點進行反駁。這樣的辯論手法無法真正解決問題，因為它回避了對方的實際觀點，而是製造一個更容易攻擊的「稻草人」來取代對方的真實立場。&lt;/p>
&lt;p>這種謬誤在辯論中常見，特別是在政治或社會爭論中。避免這種謬誤的關鍵是要正確理解並直接回應對方的真實論點，而不是創造一個虛假的版本。&lt;/p>
&lt;h3 id="情境">情境&lt;/h3>
&lt;ul>
&lt;li>A: 「我們應該更多地投資於環保技術。」&lt;/li>
&lt;li>B: 「他們想要讓我們放棄所有的經濟發展，回到石器時代！」&lt;/li>
&lt;li>B 曲解了 A 的立場，然後攻擊這個扭曲的立場，而不是 A 的實際觀點。&lt;/li>
&lt;/ul></description></item><item><title>Workflow - Vite + Vue3 + Electron</title><link>https://HoshikawaRyuukou.github.io/posts/workflow---vite-+-vue3-+-electron/</link><pubDate>Sat, 28 Sep 2024 20:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow---vite-+-vue3-+-electron/</guid><description>&lt;h2 id="step-1-準備一個-vite--vue3-專案">Step 1: 準備一個 Vite + Vue3 專案&lt;/h2>
&lt;p>使用 vite 指令創建空專案&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm create vite vve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">cd&lt;/span> vve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pnpm install
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pnpm dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-2-配置-electron">Step 2: 配置 Electron&lt;/h2>
&lt;h3 id="添加依賴">添加依賴&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm add -D electron 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pnpm add -D electron-builder 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pnpm add -D vite-plugin-electron 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pnpm add -D vite-plugin-electron-renderer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="新增-electronelectron-envdts">新增 ./electron/electron-env.d.ts&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">declare&lt;/span> &lt;span style="color:#00a8c8">namespace&lt;/span> &lt;span style="color:#75af00">NodeJS&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">interface&lt;/span> &lt;span style="color:#75af00">ProcessEnv&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * The built directory structure
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * ```tree
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * ├─┬─┬ dist
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * │ │ └── index.html
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * │ │
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * │ ├─┬ dist-electron
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * │ │ ├── main.js
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * │ │ └── preload.js
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * │
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * ```
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">APP_ROOT&lt;/span>: &lt;span style="color:#00a8c8">string&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">VITE_PUBLIC&lt;/span>: &lt;span style="color:#00a8c8">string&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Used in Renderer process, expose in `preload.ts`
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">interface&lt;/span> &lt;span style="color:#75af00">Window&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">ipcRenderer&lt;/span>: &lt;span style="color:#00a8c8">import&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;electron&amp;#39;&lt;/span>&lt;span style="color:#111">).&lt;/span>&lt;span style="color:#75af00">IpcRenderer&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="新增-electronmaints">新增 ./electron/main.ts&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">import&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">BrowserWindow&lt;/span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">from&lt;/span> &lt;span style="color:#d88200">&amp;#34;electron&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">import&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75af00">fileURLToPath&lt;/span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">from&lt;/span> &lt;span style="color:#d88200">&amp;#34;node:url&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">import&lt;/span> &lt;span style="color:#75af00">path&lt;/span> &lt;span style="color:#00a8c8">from&lt;/span> &lt;span style="color:#d88200">&amp;#34;node:path&amp;#34;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">__dirname&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">dirname&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">fileURLToPath&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#00a8c8">import&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">meta&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">url&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// The built directory structure
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// ├─┬─┬ dist
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// │ │ └── index.html
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// │ │
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// │ ├─┬ dist-electron
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// │ │ ├── main.js
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// │ │ └── preload.mjs
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// │
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">process&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">env&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">APP_ROOT&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;..&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 🚧 Use [&amp;#39;ENV_NAME&amp;#39;] avoid vite:define plugin - Vite@2.x
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#00a8c8">export&lt;/span> &lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">VITE_DEV_SERVER_URL&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">process&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">env&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;VITE_DEV_SERVER_URL&amp;#34;&lt;/span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">export&lt;/span> &lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">MAIN_DIST&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">process&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">env&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">APP_ROOT&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;dist-electron&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">export&lt;/span> &lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">RENDERER_DIST&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">process&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">env&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">APP_ROOT&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;dist&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">process&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">env&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">VITE_PUBLIC&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">VITE_DEV_SERVER_URL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">process&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">env&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">APP_ROOT&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;public&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75af00">RENDERER_DIST&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#75af00">win&lt;/span>: &lt;span style="color:#00a8c8">BrowserWindow&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">function&lt;/span> &lt;span style="color:#75af00">createWindow() {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">win&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#75af00">BrowserWindow&lt;/span>&lt;span style="color:#111">({&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">icon&lt;/span>: &lt;span style="color:#00a8c8">path.join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">process&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">env&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">VITE_PUBLIC&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;electron-vite.svg&amp;#34;&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">webPreferences&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">preload&lt;/span>: &lt;span style="color:#00a8c8">path.join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">__dirname&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;preload.mjs&amp;#34;&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Test active push message to Renderer-process.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">win&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">webContents&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;did-finish-load&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">win&lt;/span>&lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">webContents&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;main-process-message&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">Date&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">toLocaleString&lt;/span>&lt;span style="color:#111">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">VITE_DEV_SERVER_URL&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">win&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">loadURL&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">VITE_DEV_SERVER_URL&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">else&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// win.loadFile(&amp;#39;dist/index.html&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75af00">win&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">loadFile&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">path&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">join&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">RENDERER_DIST&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;index.html&amp;#34;&lt;/span>&lt;span style="color:#111">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Quit when all windows are closed, except on macOS. There, it&amp;#39;s common
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// for applications and their menu bar to stay active until the user quits
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// explicitly with Cmd + Q.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;window-all-closed&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">process&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">platform&lt;/span> &lt;span style="color:#f92672">!==&lt;/span> &lt;span style="color:#d88200">&amp;#34;darwin&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">quit&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">win&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#00a8c8">null&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;activate&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">()&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// On OS X it&amp;#39;s common to re-create a window in the app when the
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// dock icon is clicked and there are no other windows open.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#00a8c8">if&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">BrowserWindow&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">getAllWindows&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">length&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">createWindow&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">app&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">whenReady&lt;/span>&lt;span style="color:#111">().&lt;/span>&lt;span style="color:#75af00">then&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">createWindow&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="新增-electronpreloadts">新增 ./electron/preload.ts&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">import&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75af00">ipcRenderer&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">contextBridge&lt;/span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">from&lt;/span> &lt;span style="color:#d88200">&amp;#39;electron&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// --------- Expose some API to the Renderer process ---------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75af00">contextBridge&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">exposeInMainWorld&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;ipcRenderer&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(...&lt;/span>&lt;span style="color:#75af00">args&lt;/span>: &lt;span style="color:#00a8c8">Parameters&lt;/span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">typeof&lt;/span> &lt;span style="color:#75af00">ipcRenderer.on&lt;/span>&lt;span style="color:#111">&amp;gt;)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">channel&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">listener&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">args&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">ipcRenderer&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">on&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">channel&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">event&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">...&lt;/span>&lt;span style="color:#75af00">args&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#75af00">listener&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">event&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">...&lt;/span>&lt;span style="color:#75af00">args&lt;/span>&lt;span style="color:#111">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">off&lt;/span>&lt;span style="color:#111">(...&lt;/span>&lt;span style="color:#75af00">args&lt;/span>: &lt;span style="color:#00a8c8">Parameters&lt;/span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">typeof&lt;/span> &lt;span style="color:#75af00">ipcRenderer.off&lt;/span>&lt;span style="color:#111">&amp;gt;)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">channel&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">...&lt;/span>&lt;span style="color:#75af00">omit&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">args&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">ipcRenderer&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">off&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">channel&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">...&lt;/span>&lt;span style="color:#75af00">omit&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(...&lt;/span>&lt;span style="color:#75af00">args&lt;/span>: &lt;span style="color:#00a8c8">Parameters&lt;/span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">typeof&lt;/span> &lt;span style="color:#75af00">ipcRenderer.send&lt;/span>&lt;span style="color:#111">&amp;gt;)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">channel&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">...&lt;/span>&lt;span style="color:#75af00">omit&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">args&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">ipcRenderer&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">send&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">channel&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">...&lt;/span>&lt;span style="color:#75af00">omit&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#111">(...&lt;/span>&lt;span style="color:#75af00">args&lt;/span>: &lt;span style="color:#00a8c8">Parameters&lt;/span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">typeof&lt;/span> &lt;span style="color:#75af00">ipcRenderer.invoke&lt;/span>&lt;span style="color:#111">&amp;gt;)&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#75af00">channel&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">...&lt;/span>&lt;span style="color:#75af00">omit&lt;/span>&lt;span style="color:#111">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">args&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#75af00">ipcRenderer&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#75af00">invoke&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">channel&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">...&lt;/span>&lt;span style="color:#75af00">omit&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// You can expose other APTs you need here.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">})&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="修改-tsconfigappjson">修改 tsconfig.app.json&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;include&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;src/**/*.ts&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;src/**/*.tsx&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;src/**/*.vue&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#d88200">&amp;#34;electron/**/*.ts&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="修改-packagejson">修改 package.json&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;main&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;dist-electron/main.js&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;scripts&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;dev&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;vite&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;build&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;vue-tsc &amp;amp;&amp;amp; vite build &amp;amp;&amp;amp; electron-builder&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;preview&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;vite preview&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="新增">新增&lt;/h3>
&lt;h3 id="electron-builderjson5">./electron-builder.json5&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-json5" data-lang="json5">{
 $schema: &amp;#39;https://raw.githubusercontent.com/electron-userland/electron-builder/master/packages/app-builder-lib/scheme.json&amp;#39;,
 appId: &amp;#39;YourAppID&amp;#39;,
 asar: true,
 productName: &amp;#39;YourAppName&amp;#39;,
 publish: null,
 directories: {
 output: &amp;#39;release/${version}&amp;#39;,
 },
 files: [&amp;#39;dist&amp;#39;, &amp;#39;dist-electron&amp;#39;],
 mac: {
 target: [&amp;#39;dmg&amp;#39;],
 artifactName: &amp;#39;${productName}-Mac-${version}-Installer.${ext}&amp;#39;,
 },
 win: {
 artifactName: &amp;#39;${productName}-Windows-${version}-Setup.${ext}&amp;#39;,
 target: [
 {
 target: &amp;#39;dir&amp;#39;,
 arch: [&amp;#39;x64&amp;#39;],
 },
 // {
 // target: &amp;#39;nsis&amp;#39;,
 // arch: [&amp;#39;x64&amp;#39;],
 // },
 // {
 // target: &amp;#39;portable&amp;#39;,
 // arch: [&amp;#39;x64&amp;#39;],
 // },
 // {
 // target: &amp;#39;zip&amp;#39;,
 // arch: [&amp;#39;x64&amp;#39;],
 // },
 ],
 },
 // nsis: {
 // oneClick: false,
 // perMachine: false,
 // allowToChangeInstallationDirectory: true,
 // deleteAppDataOnUninstall: true,
 // },
 linux: {
 target: [&amp;#39;AppImage&amp;#39;],
 artifactName: &amp;#39;${productName}-Linux-${version}.${ext}&amp;#39;,
 },
}
&lt;/code>&lt;/pre></description></item><item><title>Electron - Design Context</title><link>https://HoshikawaRyuukou.github.io/posts/electron---design-context/</link><pubDate>Fri, 27 Sep 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/electron---design-context/</guid><description>&lt;h2 id="context---將現有的前端專案包裝成桌面端應用">Context - 將現有的前端專案包裝成桌面端應用&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>情境：&lt;/strong> 已有一個完整的前端專案，但由於一些特定需求（例如離線操作的能力），決定將其包裝成桌面端應用。本質上，這個應用仍是一個網頁應用，因此基本上不會有額外的桌面端互動需求，也不需要特別增強和操作系統的整合。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>目的：&lt;/strong> 主要為了滿足離線存取與更佳的用戶體驗，但不需要深度的桌面端特性。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>技術重點：&lt;/strong> 專注於如何將現有的 Web 應用以 Electron 進行包裝，保持與原生前端相同的開發流程，並且避免過多改動。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>限制：&lt;/strong> 盡量維持輕量化，減少與桌面平台的耦合，僅利用 Electron 提供的框架和包裝功能。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="context---基於前端技術開發桌面端應用">Context - 基於前端技術開發桌面端應用&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>情境：&lt;/strong> 目標是開發桌面端應用，只是基於前端技術來實現。這意味著應用程式將包含一些桌面應用所特有的特性，例如系統通知、檔案系統操作、離線儲存等。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>目的：&lt;/strong> 充分利用 Electron 提供的 API 來增強桌面應用的功能，使其可以提供超越單純網頁應用的體驗。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>技術重點：&lt;/strong> 基於前端技術棧（如 Vue、React 等），但需要使用 Electron 來實現與桌面系統的交互，包括檔案存取、系統托盤等。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>設計考量：&lt;/strong> 需要兼顧應用的桌面特性與前端開發的靈活性，保證兩者間的有效融合。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="context---electron-與-前端技術-僅是實作細節">Context - Electron 與 前端技術 僅是實作細節&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>情境：&lt;/strong> 設計理念以業務需求為核心，Electron 以及前端技術只是達成目標的手段和細節。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>業務為中心的設計：&lt;/strong> 設計時不局限於技術選型，而是先分析業務需求，再根據需求選擇最佳的技術方案。最終選擇的技術（Electron、前端技術）只是為了實現業務需求的手段。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>基於 Clean Architecture：&lt;/strong> 使用乾淨架構來分離業務邏輯與實作細節，確保應用程式具有良好的可擴展性與可維護性。Electron 與前端技術被隔離在具體的實作層，任何一方都可以被替換而不影響業務邏輯。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>技術重點：&lt;/strong> 強調框架的選擇與使用不應該影響到核心業務邏輯，業務邏輯應獨立於 UI、技術框架的變更，專注於系統的彈性與維護性。&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Organization - Note</title><link>https://HoshikawaRyuukou.github.io/posts/organization---note/</link><pubDate>Thu, 26 Sep 2024 14:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/organization---note/</guid><description>&lt;h2 id="corporate-culture">Corporate culture&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://creator.game.cyberagent.co.jp/?p=7615">QualiArtsのUnity開発を支える基盤の紹介&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Android - Note</title><link>https://HoshikawaRyuukou.github.io/posts/android---note/</link><pubDate>Thu, 26 Sep 2024 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/android---note/</guid><description>&lt;h2 id="skill">Skill&lt;/h2>
&lt;h3 id="從已安裝-app-抽取出-apk">從已安裝 app 抽取出 apk&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=doXT9eordX8">How to Extract, Save and Share an APK of an Android Application&lt;/a>&lt;/li>
&lt;li>使用內建的 Files 應用並選擇分享 app 即可&lt;/li>
&lt;/ul></description></item><item><title>Phenomena - Anchoring Effect</title><link>https://HoshikawaRyuukou.github.io/posts/phenomena---anchoring-effect/</link><pubDate>Mon, 23 Sep 2024 21:20:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/phenomena---anchoring-effect/</guid><description>&lt;h2 id="錨定效應anchoring-effect">錨定效應（Anchoring Effect）&lt;/h2>
&lt;h3 id="領域">領域&lt;/h3>
&lt;ul>
&lt;li>心理學&lt;/li>
&lt;li>行為經濟學&lt;/li>
&lt;/ul>
&lt;h3 id="簡敘">簡敘&lt;/h3>
&lt;p>錨定效應是一種認知偏誤，指的是人們在做決策時，過度依賴於最先獲得的資訊（即「錨」），即便該資訊與後續的選擇或結論無直接相關。這個初始資訊會對後續的判斷產生重大影響。&lt;/p>
&lt;h3 id="情境">情境&lt;/h3>
&lt;p>例如，當你在購物時，看到某件商品的原價是 $500，但打折後是 $300，你會覺得這個折扣很吸引人，因為「500」這個數字成為了你的「錨」。即便這件商品實際價值可能是 $300 或更低，你仍然會覺得它比原價便宜很多。&lt;/p></description></item><item><title>Electron - Basics</title><link>https://HoshikawaRyuukou.github.io/posts/electron---basics/</link><pubDate>Mon, 23 Sep 2024 21:19:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/electron---basics/</guid><description>&lt;h2 id="process">Process&lt;/h2>
&lt;p>Electron 的進程機制主要由兩個部分組成：&lt;strong>主進程(Main Process)&lt;/strong> 和 &lt;strong>渲染進程(Renderer Process)&lt;/strong>。&lt;/p>
&lt;h3 id="主進程-main-process">主進程 (Main Process)&lt;/h3>
&lt;ul>
&lt;li>每個 Electron 應用僅有一個主進程。&lt;/li>
&lt;li>主進程負責創建應用的主窗口，並管理應用的生命周期。&lt;/li>
&lt;li>主進程的權限非常高，它可以調用 Node.js 提供的所有 API，也可以與操作系統進行交互(例如：檔案系統操作、創建子進程、打開原生對話框) 。&lt;/li>
&lt;li>主進程負責創建和管理應用中的所有窗口(BrowserWindow) ，並能夠與渲染進程進行通信。&lt;/li>
&lt;/ul>
&lt;h3 id="渲染進程-renderer-process">渲染進程 (Renderer Process)&lt;/h3>
&lt;ul>
&lt;li>每個應用窗口都是一個獨立的渲染進程，負責渲染網頁內容(HTML、CSS、JavaScript) 。&lt;/li>
&lt;li>渲染進程本質上是運行在 Chromium 引擎中的網頁環境，它擁有與一般瀏覽器類似的行為和限制。&lt;/li>
&lt;li>渲染進程的權限較低，為了安全起見，它無法直接訪問 Node.js 的全部 API，但可以通過 Electron 的 contextBridge 和 ipcRenderer 與主進程通信。&lt;/li>
&lt;li>渲染進程可以使用 Electron 提供的 preload 腳本，將一些 Node.js 模組或功能暴露給網頁。&lt;/li>
&lt;/ul>
&lt;h3 id="進程間通信-inter-process-communication-ipc">進程間通信 (Inter-Process Communication, IPC)&lt;/h3>
&lt;ul>
&lt;li>主進程和渲染進程之間使用 IPC 進行數據傳遞。&lt;/li>
&lt;li>渲染進程使用 ipcRenderer 發送消息給主進程，而主進程使用 ipcMain 接收和回應這些消息。反之，主進程也可以向渲染進程發送消息。&lt;/li>
&lt;li>Electron 提供的 contextBridge 和 preload 腳本讓渲染進程能安全地與主進程進行通信，避免直接暴露過多的 Node.js API，從而提高應用的安全性。&lt;/li>
&lt;/ul>
&lt;h2 id="module">Module&lt;/h2>
&lt;h3 id="app">app&lt;/h3>
&lt;ul>
&lt;li>主進程模組，用來控制整個應用的生命周期。它包含了一系列的事件和方法，用於管理應用的初始化、運行、退出等流程。&lt;/li>
&lt;/ul>
&lt;h3 id="browserwindow">BrowserWindow&lt;/h3>
&lt;ul>
&lt;li>主進程模組，用來創建和管理應用窗口的模組。&lt;/li>
&lt;li>每個 BrowserWindow 實例代表一個獨立的瀏覽器窗口，並且運行在自己的渲染進程中。&lt;/li>
&lt;/ul>
&lt;h3 id="ipcmain">ipcMain&lt;/h3>
&lt;ul>
&lt;li>主進程模組，用來處理進程間通信的模組。&lt;/li>
&lt;/ul>
&lt;h3 id="ipcrenderer">ipcRenderer&lt;/h3>
&lt;ul>
&lt;li>渲染進程模組，用來處理進程間通信的模組，&lt;/li>
&lt;li>不要直接在網頁中使用 ipcRenderer，而是通過 preload 腳本中的 contextBridge 暴露安全的 API 給渲染進程。&lt;/li>
&lt;/ul></description></item><item><title>Workflow - Deploy a website (Vite + Vue3) to Github Pages</title><link>https://HoshikawaRyuukou.github.io/posts/workflow---deploy-a-website-vite-+-vue3-to-github-pages/</link><pubDate>Fri, 20 Sep 2024 20:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/workflow---deploy-a-website-vite-+-vue3-to-github-pages/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://cn.vitejs.dev/guide/static-deploy">vite - 部署静态站点&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://weiyun0912.github.io/Wei-Docusaurus/docs/Vite/Vite-Github-Pages/">[vite] 將 Vite 專案部署至 Github Pages&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cnblogs.com/weizwz/p/18411342">vue3项目部署到Github&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="配置---基本">配置 - 基本&lt;/h2>
&lt;h3 id="viteconfigjs">vite.config.js&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">export&lt;/span> &lt;span style="color:#00a8c8">default&lt;/span> &lt;span style="color:#75af00">defineConfig&lt;/span>&lt;span style="color:#111">({&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">base&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;/{repo name}}/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置---spa">配置 - SPA&lt;/h2>
&lt;p>如果是單頁應用（SPA）路由需做以下配置。&lt;/p>
&lt;h3 id="viteconfigts">vite.config.ts&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">import&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75af00">defineConfig&lt;/span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">from&lt;/span> &lt;span style="color:#d88200">&amp;#39;vite&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">export&lt;/span> &lt;span style="color:#00a8c8">default&lt;/span> &lt;span style="color:#75af00">defineConfig&lt;/span>&lt;span style="color:#111">({&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">base&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;/你的倉庫名稱/&amp;#39;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75715e">// 替換為你的 GitHub 倉庫名稱
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="indexhtml">index.html&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">html&lt;/span> &lt;span style="color:#75af00">lang&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">head&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#f92672">base&lt;/span> &lt;span style="color:#75af00">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#d88200">&amp;#34;/mgproject-track-logic-game/&amp;#34;&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">head&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">&amp;lt;/&lt;/span>&lt;span style="color:#f92672">html&lt;/span>&lt;span style="color:#111">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="vue-router">Vue Router&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">import&lt;/span> &lt;span style="color:#111">{&lt;/span> &lt;span style="color:#75af00">createRouter&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#75af00">createWebHistory&lt;/span> &lt;span style="color:#111">}&lt;/span> &lt;span style="color:#00a8c8">from&lt;/span> &lt;span style="color:#d88200">&amp;#39;vue-router&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">const&lt;/span> &lt;span style="color:#75af00">router&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#75af00">createRouter&lt;/span>&lt;span style="color:#111">({&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">history&lt;/span>: &lt;span style="color:#00a8c8">createWebHistory&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#39;/你的倉庫名稱/&amp;#39;&lt;/span>&lt;span style="color:#111">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="本地測試">本地測試&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm build
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pnpm preview
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="部屬">部屬&lt;/h2>
&lt;h3 id="方式-1---使用-gh-pages-套件">方式 1 - 使用 &lt;code>gh-pages&lt;/code> 套件&lt;/h3>
&lt;h4 id="安裝套件">安裝套件&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm add -D gh-pages 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="於-packagejson-編寫命令">於 package.json 編寫命令&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;scripts&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;deploy2ghpages&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;gh-pages -d dist&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="執行命令">執行命令&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm deploy2ghpages
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="方式-2---使用-github-actions">方式 2 - 使用 &lt;code>github actions&lt;/code>&lt;/h3>
&lt;h4 id="編寫-githubworkflowsgh-pagesyml">編寫 .github\workflows\gh-pages.yml&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 將靜態內容部署到 GitHub Pages 的簡易工作流程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Deploy static content to Pages&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">on&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 僅在推送到默認分支時運行。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">push&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">branches&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;main&amp;#39;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 這個選項可以使你手動在 Action tab 頁面觸發工作流&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">workflow_dispatch&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 設置 GITHUB_TOKEN 的權限，以允許部署到 GitHub Pages。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">permissions&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">contents&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">read&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">pages&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">write&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">id-token&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">write&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 允許一個併發的部署&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">concurrency&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;pages&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cancel-in-progress&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">jobs&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 單次部署的工作描述&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">deploy&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">environment&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">github-pages&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">url&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">${{ steps.deployment.outputs.page_url }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">runs-on&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">ubuntu-latest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">steps&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Checkout&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">uses&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">actions/checkout@v4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Set up pnpm&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">uses&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">pnpm/action-setup@v4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">version&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">9&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Set up Node&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">uses&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">actions/setup-node@v4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">node-version&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">20&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cache&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;pnpm&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Install dependencies&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">run&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">pnpm install&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Build&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">run&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">pnpm run build&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Setup Pages&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">uses&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">actions/configure-pages@v4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Upload artifact&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">uses&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">actions/upload-pages-artifact@v3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with&lt;/span>&lt;span style="color:#111">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Upload dist folder&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#39;./dist&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">Deploy to GitHub Pages&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">id&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">deployment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">uses&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">actions/deploy-pages@v4&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Slot Design - Math Model</title><link>https://HoshikawaRyuukou.github.io/posts/slot-design---math-model/</link><pubDate>Mon, 09 Sep 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/slot-design---math-model/</guid><description>&lt;h2 id="使用馬可夫鏈來控制波動性">使用馬可夫鏈來控制波動性&lt;/h2>
&lt;h3 id="定義狀態">定義狀態&lt;/h3>
&lt;p>每個狀態代表玩家一次 spin 後的結果。根據遊戲中的贏獎情況將這些狀態定義為:&lt;/p>
&lt;ul>
&lt;li>No Win (無贏)&lt;/li>
&lt;li>Small Win (小獎)&lt;/li>
&lt;li>Medium Win (中獎)&lt;/li>
&lt;li>Big Win (大獎)&lt;/li>
&lt;li>Free Game (免費遊戲)&lt;/li>
&lt;/ul>
&lt;h3 id="設計轉換矩陣">設計轉換矩陣&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Current State \ Next State&lt;/th>
 &lt;th>No Win&lt;/th>
 &lt;th>Small Win&lt;/th>
 &lt;th>Medium Win&lt;/th>
 &lt;th>Big Win&lt;/th>
 &lt;th>Free Game&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>No Win&lt;/strong>&lt;/td>
 &lt;td>0.70&lt;/td>
 &lt;td>0.20&lt;/td>
 &lt;td>0.05&lt;/td>
 &lt;td>0.03&lt;/td>
 &lt;td>0.02&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Small Win&lt;/strong>&lt;/td>
 &lt;td>0.50&lt;/td>
 &lt;td>0.30&lt;/td>
 &lt;td>0.10&lt;/td>
 &lt;td>0.05&lt;/td>
 &lt;td>0.05&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Medium Win&lt;/strong>&lt;/td>
 &lt;td>0.60&lt;/td>
 &lt;td>0.20&lt;/td>
 &lt;td>0.10&lt;/td>
 &lt;td>0.05&lt;/td>
 &lt;td>0.05&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Big Win&lt;/strong>&lt;/td>
 &lt;td>0.80&lt;/td>
 &lt;td>0.10&lt;/td>
 &lt;td>0.05&lt;/td>
 &lt;td>0.03&lt;/td>
 &lt;td>0.02&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Free Game&lt;/strong>&lt;/td>
 &lt;td>0.50&lt;/td>
 &lt;td>0.25&lt;/td>
 &lt;td>0.10&lt;/td>
 &lt;td>0.10&lt;/td>
 &lt;td>0.05&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="調整波動性">調整波動性&lt;/h3>
&lt;p>要調整遊戲的波動性，可以對轉換矩陣進行修改：&lt;/p></description></item><item><title>Javascript_TypeScript - Package - Prettier</title><link>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---package---prettier/</link><pubDate>Thu, 05 Sep 2024 08:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---package---prettier/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>Prettier 是一個代碼格式化工具，用於保持代碼風格一致。&lt;/p>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://prettier.io/">Prettier · Opinionated Code Formatter&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://prettier.io/playground/">playground&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://juejin.cn/post/7406891999376261146#heading-1">如何配置 prettier&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="notice">Notice&lt;/h2>
&lt;ul>
&lt;li>⚠️ 跨平台協同的結尾符問題
&lt;ul>
&lt;li>&lt;a href="https://bobbyhadz.com/blog/eslint-delete-cr-prettier#set-endofline-to-auto-in-your-prettierrcjs-file">[eslint] Delete CR eslint(prettier/prettier) issue&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.opasschang.com/confusing-git-autocrlf/">令人困擾的git autocrlf – Opass Life&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="install">Install&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm add -D prettier
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="extension">Extension&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode">vscode extension&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="vscodeextensionjson">.vscode/extension.json&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;recommendations&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;esbenp.prettier-vscode&amp;#34;&lt;/span>&lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="vscodesettingjson">.vscode/setting.json&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;editor.formatOnSave&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;[typescript]&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;editor.defaultFormatter&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;esbenp.prettier-vscode&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;[javascript]&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;editor.defaultFormatter&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;esbenp.prettier-vscode&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;[json]&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;editor.defaultFormatter&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;esbenp.prettier-vscode&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="plugin">Plugin&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>prettier-plugin-organize-imports&lt;/strong> : 排序/合併/移除未使用的 import 聲明&lt;/li>
&lt;/ul>
&lt;h2 id="integration---eslint">Integration - ESlint&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/prettier/eslint-config-prettier">eslint-config-prettier&lt;/a>
&lt;ul>
&lt;li>ESLint 配置，用於關閉與 Prettier 產生衝突。&lt;/li>
&lt;li>&lt;a href="https://github.com/prettier/eslint-config-prettier?tab=readme-ov-file#installation">eslint-config-prettier - eslint.config.js (flat config)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="config">Config&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>.prettierrc&lt;/strong> : &lt;a href="https://prettier.io/docs/en/configuration.html">Configuration File · Prettier&lt;/a>&lt;/li>
&lt;li>&lt;strong>.prettierignore&lt;/strong> : &lt;a href="https://prettier.io/docs/en/ignore.html">Ignoring Code · Prettier&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="packagejson">package.json&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;scripts&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;format&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;prettier --write --cache .&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;format-check&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;prettier --check --cache .&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="prettierrc">.prettierrc&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;semi&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;trailingComma&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;all&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;singleQuote&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;printWidth&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">150&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;endOfLine&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;auto&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;singleAttributePerLine&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;vueIndentScriptAndStyle&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;htmlWhitespaceSensitivity&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;ignore&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;plugins&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;prettier-plugin-organize-imports&amp;#34;&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;overrides&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;files&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;.prettierrc&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;options&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;parser&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;json&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="prettierignore">.prettierignore&lt;/h3>
&lt;pre tabindex="0">&lt;code>dist
pnpm-lock.yaml
CHANGELOG*.md
&lt;/code>&lt;/pre>&lt;h3 id="eslintconfigjs">eslint.config.js&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">import&lt;/span> &lt;span style="color:#75af00">eslintConfigPrettier&lt;/span> &lt;span style="color:#75af00">from&lt;/span> &lt;span style="color:#d88200">&amp;#39;eslint-config-prettier&amp;#39;&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">export&lt;/span> &lt;span style="color:#00a8c8">default&lt;/span> &lt;span style="color:#111">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75af00">eslintConfigPrettier&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Social - Note</title><link>https://HoshikawaRyuukou.github.io/posts/social---note/</link><pubDate>Sun, 01 Sep 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/social---note/</guid><description>&lt;h2 id="personality">Personality&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.16personalities.com/tw">免費性格測試、性格類型描述、人際關係和職業建議 | 16Personalities&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="human-nature">Human Nature&lt;/h2>
&lt;blockquote>
&lt;p>跟沒錢的人打交道，直接告訴他能賺多少&lt;br>
跟底層的人打交道，要給他臉，給他尊重&lt;br>
跟厲害的人打交道，不要浪費他時間，直奔主題&lt;/p>&lt;/blockquote></description></item><item><title>Game Design - Introduction</title><link>https://HoshikawaRyuukou.github.io/posts/game-design---introduction/</link><pubDate>Sun, 01 Sep 2024 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/game-design---introduction/</guid><description>&lt;ul>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/688748483">从Balatro小丑牌的成功说起：浅谈rogue的核心体验与设计&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1GPH4erETC">什么驱使着人们玩游戏？【游戏设计知识分享-动机1】&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1WJxMepE2i">人们一直玩是因为游戏好？【游戏设计知识分享-动机2】&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Android - Reverse Engineering</title><link>https://HoshikawaRyuukou.github.io/posts/android---reverse-engineering-copy/</link><pubDate>Fri, 30 Aug 2024 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/android---reverse-engineering-copy/</guid><description>&lt;h2 id="apktool">apktool&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.cnblogs.com/hanyuanhun/p/18266371">APKTool反编译&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="extractbat">extract.bat&lt;/h3>
&lt;p>⚠️ 將 &lt;strong>extract.bat&lt;/strong>, &lt;strong>apktool.jar&lt;/strong>, &lt;strong>apk&lt;/strong> 放在相同目錄。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bat" data-lang="bat">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">@&lt;/span>&lt;span style="color:#00a8c8">echo&lt;/span> off
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">REM Set the directory where apktool.jar is located&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">set&lt;/span> &lt;span style="color:#111">APKTOOL_DIR&lt;/span>&lt;span style="color:#111">=&lt;/span>&lt;span style="color:#111">%~dp0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">REM Enable delayed variable expansion&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">setlocal&lt;/span> enabledelayedexpansion
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">REM Loop through all APK files in the same directory as apktool.jar&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#8045ff">%%&lt;/span>f &lt;span style="color:#00a8c8">in&lt;/span> &lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">%APKTOOL_DIR%&lt;/span>&lt;span style="color:#d88200">*.apk&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">do&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">REM Get the APK file name (without extension)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">set&lt;/span> &lt;span style="color:#111">APK_NAME&lt;/span>&lt;span style="color:#111">=&lt;/span>&lt;span style="color:#8045ff">%%&lt;/span>~nf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> Decompiling APK: &lt;span style="color:#111">!APK_NAME!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">REM Decompile the APK&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> java -jar &lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">%APKTOOL_DIR%&lt;/span>&lt;span style="color:#d88200">apktool.jar&amp;#34;&lt;/span> d &lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#8045ff">%%&lt;/span>&lt;span style="color:#d88200">f&amp;#34;&lt;/span> -o &lt;span style="color:#d88200">&amp;#34;&lt;/span>&lt;span style="color:#111">%APKTOOL_DIR%!APK_NAME!&lt;/span>&lt;span style="color:#d88200">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">echo&lt;/span> All APK files have been decompiled!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">pause&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>AI - Note</title><link>https://HoshikawaRyuukou.github.io/posts/ai---note/</link><pubDate>Thu, 29 Aug 2024 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---note/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=eraWvfD_Ihg">一小時略懂 AI｜GPT、Sora、Diffusion model、類器官智慧OI、圖靈測試、人工智慧史&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=jW2cmZ-9hLk">【人工智能】模型压缩四大方法概述 | 量化、剪枝、蒸馏和二值化 | 模型瘦身 | 降低精度 | 速度提升 | 知识蒸馏 | 温度参数 | XNOR | 优缺点 | 发展方向&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1z8XpYKEnr">Gemini逆袭Controlnet？扩散模型和自回归模型的真正秘密&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="news">News&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.aibase.com/zh/">AIbase基地 - 让更多人看到未来 通往AGI之路&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="coding">Coding&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=IqVo8V4QNm0">GitHub项目理解神器：DeepWiki&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/AsyncFuncAI/deepwiki-open">AsyncFuncAI/deepwiki-open&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="translation">Translation&lt;/h2>
&lt;ul>
&lt;li>GPT Translator&lt;/li>
&lt;li>&lt;a href="https://github.com/SakuraLLM/SakuraLLM">SakuraLLM/SakuraLLM&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/zyddnys/manga-image-translator">zyddnys/manga-image-translator&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/dmMaze/BallonsTranslator">dmMaze/BallonsTranslator&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="vedio">Vedio&lt;/h2>
&lt;ul>
&lt;li>Veo 2&lt;/li>
&lt;/ul></description></item><item><title>Software Development - Sites</title><link>https://HoshikawaRyuukou.github.io/posts/software-development---sites/</link><pubDate>Wed, 28 Aug 2024 20:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-development---sites/</guid><description>&lt;h2 id="developer-community">Developer Community&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://juejin.cn/">稀土掘金&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zenn.dev">Zenn&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/">Qitta&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="developer-guide">Developer Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://refactoring.guru/">Refactoring and Design Patterns&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://deviq.com/">DevIQ&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="developer-blog">Developer Blog&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://developers.cyberagent.co.jp/blog/">CyberAgent Developers Blog | サイバーエージェント デベロッパーズブログ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://seleck.cc/">SELECK [セレック] |デジタル人材のためのメディア&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tech.every.tv/">every Tech Blog&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.tangly.net/blog/">tangly llc Blog | tangly Components&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://codeopinion.com/">CodeOpinion&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://khalilstemmler.com/">Khalil Stemmler | Become a confident crafter. Learn to write testable, scalable TypeScript.&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="developer-note">Developer Note&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://muyacode.github.io/FrontEndLearnNotes/">牧涯前端学习笔记 | 记录一些前端学习的知识&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="company---game">Company - Game&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.happyelements.co.jp/">Happy Elements&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="inactive">Inactive&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.jyt0532.com/toc/">jyt0532&amp;rsquo;s Blog&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.ttulka.com/">Tomas Tulka&amp;rsquo;s Blog&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.entropywins.wtf/blog/">Entropy Wins - A blog on Software Architecture, Design and Craftsmanship&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Software Operation - Note</title><link>https://HoshikawaRyuukou.github.io/posts/software-operation---note/</link><pubDate>Wed, 28 Aug 2024 20:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-operation---note/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=ytOW5t-iYP8">为什么程序员都应该学用容器技术&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>AI - Ollama - Note</title><link>https://HoshikawaRyuukou.github.io/posts/ai---ollama---note/</link><pubDate>Mon, 19 Aug 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/ai---ollama---note/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://ollama.com/">Ollama&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ui">UI&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://chromewebstore.google.com/detail/page-assist-a-web-ui-for/jfgfiigpkhlkbnfnbobbkinehhfdhndo">Page Assist - A Web UI for Local AI Models&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="commands">Commands&lt;/h2>
&lt;ul>
&lt;li>ollama list : 查看以配置本地模型&lt;/li>
&lt;li>ollama run {model} : 下載/執行模型&lt;/li>
&lt;li>ollama ps : 展示目前載入的模型、它們所佔的記憶體大小以及所使用的處理器類型（GPU 或 CPU）&lt;/li>
&lt;/ul>
&lt;h2 id="use-model-from-ollama">Use model from Ollama&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://ollama.com/search">Ollama search&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="use-gguf-model-from-hugging-face-hub">Use GGUF model from Hugging Face Hub&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Run Ollama with specified model&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ollama run hf.co/{username}/{repository}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ollama run hf.co/bartowski/Llama-3.2-3B-Instruct-GGUF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Run Ollama with specified model and desired quantization&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ollama run hf.co/{username}/{repository}:{quantization}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ollama run hf.co/bartowski/Llama-3.2-3B-Instruct-GGUF:IQ3_M
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="use-gguf-model-from-local">Use GGUF model from local&lt;/h2>
&lt;h3 id="import_gguf_to_ollamabat">import_gguf_to_ollama.bat&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bat" data-lang="bat">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">@&lt;/span>&lt;span style="color:#00a8c8">echo&lt;/span> off
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">REM 設定本地環境，並切換到批次檔所在的目錄&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">setlocal&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">cd&lt;/span> /d &lt;span style="color:#111">%~dp0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">REM 搜尋當前目錄中的 .gguf 檔案&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">for&lt;/span> &lt;span style="color:#8045ff">%%&lt;/span>f &lt;span style="color:#00a8c8">in&lt;/span> &lt;span style="color:#111">(&lt;/span>*.gguf&lt;span style="color:#111">)&lt;/span> &lt;span style="color:#00a8c8">do&lt;/span> &lt;span style="color:#111">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">REM 創建 Modelfile.txt 並寫入模型檔案名稱&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">echo&lt;/span> FROM &lt;span style="color:#8045ff">%%&lt;/span>~nf.gguf &lt;span style="color:#111">&amp;gt;&lt;/span> Modelfile.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">REM 打印 Modelfile.txt 的內容以供確認&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">type&lt;/span> Modelfile.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">REM 執行 ollama create 命令來包裝模型檔&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ollama create &lt;span style="color:#8045ff">%%&lt;/span>~nf -f Modelfile.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">REM 刪除 Modelfile.txt&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">del&lt;/span> Modelfile.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">REM 如果有多個 gguf 檔案，只處理第一個找到的檔案&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">goto&lt;/span> &lt;span style="color:#111">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">:&lt;/span>&lt;span style="color:#111">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">REM 顯示完成訊息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">echo&lt;/span> done...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">REM 列出已經存在的模型&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ollama list 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">REM 等待用戶確認並關閉&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">pause&lt;/span> &lt;span style="color:#111">&amp;gt;&lt;/span>nul
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Software Development - Repository Structure</title><link>https://HoshikawaRyuukou.github.io/posts/software-development---repository-structure---note/</link><pubDate>Mon, 12 Aug 2024 21:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-development---repository-structure---note/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>最近筆者在開發公司的共用套件時，踩了不少坑，尤其是在儲存庫結構方面。&lt;/p>
&lt;p>最初選擇了 polyrepo 的結構，但隨著開發的進展，碰到了一些問題：&lt;/p>
&lt;ul>
&lt;li>要確保這些獨立的 repo 配置能夠同步。&lt;/li>
&lt;li>每次發佈都需要逐一更新每個套件，尤其是那些有兩三層依賴的，讓發佈變得非常繁瑣。&lt;/li>
&lt;li>進行 code review 時，還要不停地在不同 repo 之間切換。&lt;/li>
&lt;/ul>
&lt;p>為了改善這些問題，開始研究 monorepo 的結構：&lt;/p>
&lt;ul>
&lt;li>使用 pnpm workspace 來構建。&lt;/li>
&lt;li>雖然 monorepo 有一些權限控管的隱憂，但因為共用套件的開發人數不多，所以目前還不用太擔心協作上的衝突。&lt;/li>
&lt;/ul>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/joelparkerhenderson/monorepo-vs-polyrepo">monorepo-vs-polyrepo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.explainthis.io/zh-hant/swe/why-use-monorepo">你很常聽到 monorepo，但為什麼要用 monorepo?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zenn.dev/kkoudev/articles/3963065a2ffa26">PolyrepoからMonorepoへ移行する&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="策略">策略&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>monolith&lt;/strong>: 當專案需要保持單一應用程式的完整性，所有功能都被打包在一起，且較少外部依賴。&lt;/li>
&lt;li>&lt;strong>monorepo&lt;/strong>: 當多個專案需要高度共享資源或密切合作，如共用許多元件、工具或模組的情況下。&lt;/li>
&lt;li>&lt;strong>polyrepo&lt;/strong>: 功能差異大、專案之間關聯性不強或不需要彼此干擾的情況下。每個專案獨立運行，較少相互依賴。&lt;/li>
&lt;/ul>
&lt;h2 id="monolith">monolith&lt;/h2>
&lt;h2 id="polyrepo">polyrepo&lt;/h2>
&lt;h2 id="monorepo">monorepo&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://blog.logrocket.com/managing-full-stack-monorepo-pnpm/">Managing a full-stack, multipackage monorepo using pnpm&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://colinhacks.com/essays/live-types-typescript-monorepo">Live types in a TypeScript monorepo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.gfor.rest/blog/node-ts-monorepo">Building a Typescript + NodeJS Monorepo in 2024&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="特色">特色&lt;/h3>
&lt;ul>
&lt;li>👍 package 使用相同版本 &lt;strong>依賴/設定檔/風格&lt;/strong>。&lt;/li>
&lt;li>⚠️ package 權限控管需仰賴其他工作流。&lt;/li>
&lt;/ul></description></item><item><title>Algorithm - Sampling - Alias Method</title><link>https://HoshikawaRyuukou.github.io/posts/algorithm---sampling---alias-method/</link><pubDate>Sun, 04 Aug 2024 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/algorithm---sampling---alias-method/</guid><description>&lt;p>別名方法是一種眾所周知的演算法，用於從任意離散機率分佈中進行恆定時間採樣，該演算法依賴於簡單的預先計算的查找表。&lt;/p>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://blog.csdn.net/rover2002/article/details/106760664">Alias Method: 非均匀随机抽样算法&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.keithschwarz.com/darts-dice-coins/">Darts, Dice, and Coins: Sampling from a Discrete Distribution&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zliu.org/post/weighted-random/">Weighted Random: algorithms for sampling from discrete probability distributions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/mackysoft/Choice?tab=readme-ov-file#speed-measurement">mackysoft/Choice&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/jgrapht/jgrapht/blob/master/jgrapht-core/src/main/java/org/jgrapht/alg/util/AliasMethodSampler.java">jgrapht-core/src/main/java/org/jgrapht/alg/util/AliasMethodSampler.java&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>務必先觀看&lt;/p>
&lt;ul>
&lt;li>第一篇文章的漸進思考與核心精神&lt;/li>
&lt;li>第二篇文章最後的 Vose&amp;rsquo;s Alias Method 圖解&lt;/li>
&lt;/ul>
&lt;h2 id="example">Example&lt;/h2>
&lt;p>給定的權重 &lt;code>[0.1, 0.2, 0.3, 0.4]&lt;/code>。&lt;/p>
&lt;h3 id="按均值縮放權重">&lt;strong>按均值縮放權重&lt;/strong>：&lt;/h3>
&lt;ul>
&lt;li>均值為 : 0.25&lt;/li>
&lt;li>縮放後的權重：&lt;code>[0.4, 0.8, 1.2, 1.6]&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="分類權重到-large-和-small-隊列">&lt;strong>分類權重到 large 和 small 隊列&lt;/strong>：&lt;/h3>
&lt;ul>
&lt;li>初始狀態：&lt;code>small = [], large = []&lt;/code>&lt;/li>
&lt;li>權重 &lt;code>0.4&lt;/code> 小於 1，放入 &lt;code>small&lt;/code>：&lt;code>small = [0]&lt;/code>&lt;/li>
&lt;li>權重 &lt;code>0.8&lt;/code> 小於 1，放入 &lt;code>small&lt;/code>：&lt;code>small = [0, 1]&lt;/code>&lt;/li>
&lt;li>權重 &lt;code>1.2&lt;/code> 大於 1，放入 &lt;code>large&lt;/code>：&lt;code>large = [2]&lt;/code>&lt;/li>
&lt;li>權重 &lt;code>1.6&lt;/code> 大於 1，放入 &lt;code>large&lt;/code>：&lt;code>large = [2, 3]&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="構建別名表">&lt;strong>構建別名表&lt;/strong>：&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>初始狀態：&lt;/p></description></item><item><title>Software Design - Pattern - Note</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---note/</link><pubDate>Thu, 01 Aug 2024 21:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---note/</guid><description>&lt;h2 id="factory">Factory&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1ZS421X74d">工厂模式？错！是工厂模式群！&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="observer--pub-sub-publisher-subscriber">Observer / Pub-Sub (Publisher-Subscriber)&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://hackernoon.com/observer-vs-pub-sub-pattern-50d3b27f838c">Observer vs Pub-Sub pattern&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.semicolonandsons.com/code_diary/architecture/pub-sub-system-pros-and-cons">Pub sub system pros and cons&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="observer">Observer&lt;/h3>
&lt;p>觀察者模式中的主題同時身為發布者，觀察者是知道發布者的，但發布者不知道觀察者。&lt;/p>
&lt;h3 id="pub-sub-publisher-subscriber">Pub-Sub (Publisher-Subscriber)&lt;/h3>
&lt;p>發布者-訂閱者模式中的主題通常由消息代理或事件總線處理，發布者和觀察者不知道彼此的存在。發布者向主題發送訊息，主題再轉發給觀察者。&lt;/p></description></item><item><title>Node.js - package.json</title><link>https://HoshikawaRyuukou.github.io/posts/node.js---package.json/</link><pubDate>Fri, 26 Jul 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/node.js---package.json/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>可以將 package.json 檔案新增到套件中，以便其他人可以輕鬆管理和安裝。發佈到註冊表的包必須包含一個 package.json 檔案。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.npmjs.com/creating-a-package-json-file">Creating a package.json file&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="quick-start">Quick Start&lt;/h2>
&lt;p>根據當前目錄產生預設 package.json&lt;br>
&lt;code>npm init -y&lt;/code>&lt;/p>
&lt;h2 id="fields">Fields&lt;/h2>
&lt;h3 id="name">name&lt;/h3>
&lt;p>必須是小寫字母和一個單詞，並且可以包含連字符和下劃線&lt;/p>
&lt;h3 id="version">version&lt;/h3>
&lt;p>遵循語義版本控制準則 &lt;code>x.x.x&lt;/code>&lt;/p>
&lt;h3 id="type">type&lt;/h3>
&lt;p>指定 module system 要用&lt;/p>
&lt;ul>
&lt;li>ES : &amp;ldquo;module&amp;rdquo;&lt;/li>
&lt;li>CommonJS : &amp;ldquo;commonjs&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;h3 id="main">main&lt;/h3>
&lt;p>當套件被作為 CommonJS 模組引入時，預設的入口點。&lt;/p>
&lt;h3 id="module">module&lt;/h3>
&lt;p>當套件被作為 ES 模組引入時，預設的入口點。&lt;/p>
&lt;h3 id="types">types&lt;/h3>
&lt;p>TypeScript 的類型定義檔案位置，提供 TypeScript 支援。&lt;/p>
&lt;h3 id="exports">exports&lt;/h3>
&lt;p>是一個較新的欄位，用來細化和取代傳統的 main 和 module 欄位。它允許你為不同的環境（例如 Node.js、ES 模組、瀏覽器）定義不同的入口點和模組格式。它還允許你控制哪些檔案可以被使用者匯入，提供更多的安全性和靈活性。&lt;/p>
&lt;p>如果有 exports 欄位，Node.js 會優先使用 exports 來決定如何載入模組，只有在 exports 中沒有相應定義時，才會回退到使用 main、module 和 types 欄位。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;exports&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;.&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;types&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;./build/types/lib.d.ts&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;require&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;./build/cjs/lib.js&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;import&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;./build/esm/lib.js&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;default&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;./build/esm/lib.js&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;a href="https://www.nullfox.com/multiple-exports-typescript-package-types">Multiple exports with types in a Typescript Package&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>/my-package
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── /dist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── index.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── utils.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── internal.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── /lib
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── helper.js
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;my-package&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;version&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;1.0.0&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;exports&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;.&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;./dist/index.js&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;./utils&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;./dist/utils.js&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;./lib/helper&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;./lib/helper.js&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>⛨ 限制訪問&lt;/p></description></item><item><title>Javascript_TypeScript - Package - commitlint</title><link>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---package---commitlint/</link><pubDate>Fri, 12 Jul 2024 08:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---package---commitlint/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>commitlint 是一個用來檢查 git commit 信息格式的工具，它可以配合多種規範使用。&lt;/p>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/conventional-changelog/commitlint">conventional-changelog/commitlint&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://commitlint.js.org/">commitlint doc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.imooc.com/article/359532">Commit-lint学习：新手入门指南&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://2sistersgarlic.com/commitlint-vs-commitizen-comparison-for-better-git-commit-practices/">Commitlint vs Commitizen: Comparison for Better Git Commit Practices&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="notice">Notice&lt;/h2>
&lt;ul>
&lt;li>⚠️ 此處搭配 simple-git-hooks 使用。&lt;/li>
&lt;/ul>
&lt;h2 id="install">Install&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pnpm add -D @commitlint/&lt;span style="color:#f92672">{&lt;/span>cli,config-conventional&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="config">Config&lt;/h2>
&lt;h3 id="packagejson">package.json&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;simple-git-hooks&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;pre-commit&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;pnpm lint-staged &amp;amp;&amp;amp; pnpm check&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;commit-msg&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;pnpx commitlint --edit $1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="commitlintconfigjs">commitlint.config.js&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">export&lt;/span> &lt;span style="color:#00a8c8">default&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">extends&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#39;@commitlint/config-conventional&amp;#39;&lt;/span>&lt;span style="color:#111">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Javascript_TypeScript - Package - Vitest</title><link>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---package---vitest/</link><pubDate>Tue, 02 Jul 2024 08:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---package---vitest/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://vitest.dev/">Vitest&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="coverage">Coverage&lt;/h2>
&lt;p>這些數值表示了測試覆蓋率的不同方面，具體如下：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>% Stmts (Statements Coverage)&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>說明&lt;/strong>：表示程式碼中所有執行語句的覆蓋率。這個百分比告訴你測試運行時執行了多少語句。&lt;/li>
&lt;li>&lt;strong>例如&lt;/strong>：如果程式碼中有 100 行執行語句，而測試覆蓋了其中的 80 行，則此覆蓋率為 80%。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>% Branch (Branches Coverage)&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>說明&lt;/strong>：表示條件分支的覆蓋率（如 if/else、switch/case）。這個百分比告訴你程式碼中所有可能的邏輯分支是否被測試覆蓋。&lt;/li>
&lt;li>&lt;strong>例如&lt;/strong>：如果有 10 個 if/else 條件，但只有 7 個條件分支在測試中執行過，則此覆蓋率為 70%。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>% Funcs (Functions Coverage)&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>說明&lt;/strong>：表示函數的覆蓋率。這個百分比告訴你測試運行時，程式碼中定義的函數中有多少被調用和覆蓋。&lt;/li>
&lt;li>&lt;strong>例如&lt;/strong>：如果程式碼中有 20 個函數，而測試覆蓋了其中的 15 個，則此覆蓋率為 75%。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>% Lines (Lines Coverage)&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>說明&lt;/strong>：表示實際被執行的行數覆蓋率。這與 % Stmts 類似，但更精確地計算了具體的行數。&lt;/li>
&lt;li>&lt;strong>例如&lt;/strong>：如果程式碼中有 200 行代碼，而測試覆蓋了其中的 180 行，則此覆蓋率為 90%。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Uncovered Line #s&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>說明&lt;/strong>：列出未被測試覆蓋的具體行號。這些是測試未執行到的程式碼行，你可以根據這些行號來調整和增加測試用例，從而提高測試覆蓋率。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>這些指標有助於你了解測試覆蓋率的具體情況，並確保你的程式碼在不同方面都得到充分的測試。&lt;/p>
&lt;h2 id="extra">Extra&lt;/h2>
&lt;h3 id="必要時使用括-弧表示法-訪問屬性private">必要時使用括 &lt;a href="https://www.typescriptlang.org/docs/handbook/2/classes.html#caveats">弧表示法&lt;/a> 訪問屬性private&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-typescript" data-lang="typescript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">expect&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#75af00">inst&lt;/span>&lt;span style="color:#111">[&lt;/span>&lt;span style="color:#d88200">&amp;#34;_somePrivateProp&amp;#34;&lt;/span>&lt;span style="color:#111">]).&lt;/span>&lt;span style="color:#75af00">toBe&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;foo&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span> &lt;span style="color:#75715e">// OK
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Mathematics - Note</title><link>https://HoshikawaRyuukou.github.io/posts/mathematics---note/</link><pubDate>Sun, 30 Jun 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/mathematics---note/</guid><description>&lt;h2 id="channel">Channel&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/@funinc0de/videos">FunInCode&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="case">Case&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=2NruDWUyXBk">【数之道 18】&amp;ldquo;马尔可夫链&amp;quot;是什么？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1ws411j7Mb">三門問題&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1ws411j77v">三個囚犯問題&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Node.js - Packages</title><link>https://HoshikawaRyuukou.github.io/posts/node.js---packages/</link><pubDate>Sat, 22 Jun 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/node.js---packages/</guid><description>&lt;h2 id="package">Package&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://npmtrends.com/">npm trends&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="npx">npx&lt;/h2>
&lt;p>&lt;code>npx&lt;/code> 常用於執行一次性操做，允許你在不安裝包到全局或本地的情況下直接運行該包中的可執行文件。且會檢查並執行最新版本的包，確保你不會因為本地包過時而遇到問題。&lt;/p>
&lt;hr>
&lt;h2 id="benchmark">Benchmark&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/tinylibs/tinybench">tinybench&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="cli">CLI&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/chalk/chalk">chalk&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/cli-table/cli-table3">cli-table3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/read/cv27094154/">tsx: 替代 node 指令、支持运行 TypeScript &amp;amp; ESM 的 CLI 程序&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/console-table-printer">console-table-printer&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="git">Git&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Rich-Harris/degit">degit&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://www.cnblogs.com/Merrys/p/16900767.html">degit简介&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="io">IO&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/isaacs/rimraf">rimraf&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://blog.csdn.net/imdeity/article/details/137772287">Rimraf详细介绍&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="ioc">IoC&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/inversify/InversifyJS">InversifyJS&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="multitasking">Multitasking&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/josdejong/workerpool">workerpool&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="test">Test&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://vitest.dev/">Vitest&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="validation">Validation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/colinhacks/zod">zod&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Telegram - Note</title><link>https://HoshikawaRyuukou.github.io/posts/telegarm---note/</link><pubDate>Sat, 22 Jun 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/telegarm---note/</guid><description>&lt;h2 id="bot---api-token">Bot - API Token&lt;/h2>
&lt;ul>
&lt;li>搜索 &lt;code>BotFather&lt;/code> 並開始對話。&lt;/li>
&lt;li>使用 &lt;code>/newbot&lt;/code> 命令創建一個新的機器人，按提示操作。&lt;/li>
&lt;li>創建完成後，你會獲得一個 API Token，將其保存下來。&lt;/li>
&lt;/ul>
&lt;h2 id="bot---chat-id">Bot - Chat ID&lt;/h2>
&lt;ul>
&lt;li>將你創建的&lt;strong>機器人添加到你想發訊息的群組&lt;/strong>中。&lt;/li>
&lt;li>發送一條消息到該群組。&lt;/li>
&lt;li>使用以下 URL 來獲取群組的更新:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>https://api.telegram.org/bot&amp;lt;YourBotToken&amp;gt;/getUpdates
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>查看返回的 JSON 數據，找到 chat 字段中的 id，這就是群組的 Chat ID。
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;ok&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#00a8c8">true&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;result&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;update_id&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">123456789&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;message&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;message_id&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;from&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;chat&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">-1001234567890&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;title&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;Your Group Title&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;supergroup&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;date&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#ae81ff">1617821123&lt;/span>&lt;span style="color:#111">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;text&amp;#34;&lt;/span>&lt;span style="color:#111">:&lt;/span> &lt;span style="color:#d88200">&amp;#34;Your Message&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="sticker">Sticker&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=1E25Q6wQ5L8">Telegram 貼圖 DIY教學&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Documents - README</title><link>https://HoshikawaRyuukou.github.io/posts/documents---readme/</link><pubDate>Tue, 18 Jun 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/documents---readme/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>最近筆者從 Unity 轉向了 Node.js，因此花了大量時間在 npm 上尋找合適的套件。大部分的 README 都寫得很清晰，但也有少數寫得難以理解。&lt;/p>
&lt;p>README 是 Repository 的門面，這是毋庸置疑的。創建一個好的自述文件，可以向用戶（包括使用者和開發者）顯示基本信息，但不應該用他們可能不需要的內容來淹沒他們。&lt;/p>
&lt;p>筆者認為應該從一開始就認真對待 README，而不是在最後(專案收尾之際)才一股腦地將資訊灌入，這樣會降低其品質。&lt;/p>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://medium.com/dean-lin/%E4%BD%A0%E7%9F%A5%E9%81%93%E5%B0%8D%E5%B0%88%E6%A1%88%E4%BE%86%E8%AA%AA-readme-md-%E6%9C%89%E5%A4%9A%E9%BA%BC%E9%87%8D%E8%A6%81%E5%97%8E-%E5%B7%A5%E7%A8%8B%E5%B8%AB%E8%A1%80%E6%B7%9A%E5%8F%B2-c0fb0908343e">你知道對專案來說，README.md 有多麼重要嗎？ ── 工程師血淚史&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/hackergrrl/art-of-readme/blob/master/README-zh-TW.md">README 的藝術&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="template">Template&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://gist.github.com/PurpleBooth/109311bb0361f32d87a2">README-Template.md&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.readme-templates.com/">GitHub README Templates&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="strategy">Strategy&lt;/h2>
&lt;h3 id="為誰而寫">為誰而寫&lt;/h3>
&lt;p>必須意識讀文件的人分成使用者和開發者，README 在佈局上要有明確的邊界。&lt;/p>
&lt;ul>
&lt;li>以使用者角度
&lt;ul>
&lt;li>Tutorial&lt;/li>
&lt;li>Reference&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>以開發者角度
&lt;ul>
&lt;li>環境設定/測試/部署/發布方法&lt;/li>
&lt;li>開發流程/編碼規範等&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="避免-readme-過長">避免 README 過長&lt;/h3>
&lt;p>這個視專案而定，當 README 內容越來越多時可以考慮將其拆分至其他文檔，而 README.md 則改做為文檔的索引頁。&lt;/p>
&lt;ul>
&lt;li>README.md&lt;/li>
&lt;li>RELEASELOG.md&lt;/li>
&lt;li>CHANGELOG.md&lt;/li>
&lt;li>CONTRIBUTING.md&lt;/li>
&lt;li>./docs/Tutorials/xx.md&lt;/li>
&lt;li>./docs/Examples/xx.md&lt;/li>
&lt;/ul>
&lt;h3 id="避免-header-過度使用">避免 Header 過度使用&lt;/h3>
&lt;p>原本寫作時會下意識的使用不少的三級標題 &lt;code>### Header&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>## Header2

### Header3
分段...

### Header3
分段...
&lt;/code>&lt;/pre>&lt;p>但這次觀察 READMEs 的過程，看到不少以下這種不多做一些分段的寫法&lt;/p>
&lt;pre tabindex="0">&lt;code>## Header2
直接承接本文段落...
&lt;/code>&lt;/pre>&lt;p>原本以為會很難閱讀，但實際上閱讀時都是順著讀下來，所以好像不會有負面影響。反倒是原先 Header3 過多造成畫面有點割裂。&lt;/p></description></item><item><title>Algorithm - Note</title><link>https://HoshikawaRyuukou.github.io/posts/algorithm---note/</link><pubDate>Thu, 30 May 2024 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/algorithm---note/</guid><description>&lt;h2 id="books">Books&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/labuladong/fucking-algorithm?tab=readme-ov-file">fucking-algorithm&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/krahets/hello-algo">hello-algo&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="repo">Repo&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/TheAlgorithms">The Algorithms&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Regex - Note</title><link>https://HoshikawaRyuukou.github.io/posts/regex---note/</link><pubDate>Wed, 29 May 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/regex---note/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=uPBtum7QRvw">三十分钟正则表达式教程&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="tools">Tools&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://regexr.com/">RegExr: Learn, Build, &amp;amp; Test RegEx&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Node.js - Note</title><link>https://HoshikawaRyuukou.github.io/posts/node.js---note/</link><pubDate>Sun, 26 May 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/node.js---note/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/648238863">Node.js究竟是什么？初学者指南&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/coreybutler/nvm-windows">coreybutler/nvm-windows&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://medium.com/@ray102467/nvm-windows-%E7%AE%A1%E7%90%86-windows-node-js-%E7%89%88%E6%9C%AC-68d789cf84d7">nvm-windows 管理 Windows Node.js 版本&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://pjchender.dev/npm/npm-cli-and-package-json/">[指令] npm cli &amp;amp; package.json&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.jianshu.com/p/a07eeb43d8b3">解决Node.js的命令行输出中文乱码问题（也适用于Electron）&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="module">Module&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.explainthis.io/zh-hant/swe/what-is-frontend-module#js">什麼是前端模組化？&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="multitasking">Multitasking&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.scaler.com/topics/nodejs/worker-threads-in-node-js/">Worker Threads in Node.JS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://medium.com/@manikmudholkar831995/worker-threads-multitasking-in-nodejs-6028cdf35e9d">Worker Threads : Multitasking in NodeJS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://amplication.com/blog/nodejs-worker-threads-vs-child-processes-which-one-should-you-use">Node.js Worker Threads Vs. Child Processes: Which one should you use?&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Game Design - Inspiration</title><link>https://HoshikawaRyuukou.github.io/posts/game-design---inspiration/</link><pubDate>Thu, 23 May 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/game-design---inspiration/</guid><description>&lt;h2 id="美術">美術&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://apps.apple.com/mo/app/%E5%9D%A6%E8%BC%B8%E7%99%82-%E5%9D%A6%E5%85%8B-%E8%BC%B8%E5%87%BA-%E6%B2%BB%E7%99%82%E5%B8%AB-%E7%9A%84%E5%B0%8F%E5%86%92%E9%9A%AA/id1563681465">坦輸療（坦克，輸出，治療師）的小冒險&lt;/a>&lt;/li>
&lt;li>Trickcal Re:vive&lt;/li>
&lt;li>MEMORICA&lt;/li>
&lt;/ul>
&lt;h2 id="機制">機制&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=HnOESB2JbvI">ティンクルスターナイツ　種族交流会地獄級なんですが&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://store.steampowered.com/app/1390350/Webbed/">Webbed&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://unityroom.com/games/hammer_heart">ハンマーハートデリバリ―&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://play.google.com/store/apps/details?id=ua.krou.remembery">Remembery – Memory game pairs&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://store.steampowered.com/app/1668690/_/?l=tchinese">鬥技場的阿利娜&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Slot Design - Note</title><link>https://HoshikawaRyuukou.github.io/posts/slot-design---note/</link><pubDate>Wed, 22 May 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/slot-design---note/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://ezslotdesign.com/introducing/">SLOT設計王文章導讀 - SLOT設計王&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/632180046">Slots设计攻略导读&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.knowyourslots.com/">Know Your Slots&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV15i42127Q4">游戏中的伪随机&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/139400935">随机游走的赌徒是如何赔光的&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=Ur53m9zQ5sY">How Slot Machines Work: Virtual Reel Mapping&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/695913395">抽卡体验设计：关于盲盒、抽卡、开箱的一切&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="framework">Framework&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://slotdesigner.com/publications/">Publications | Slot Designer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/hankpan-dev/slotkit">hankpan-dev/slotkit&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/sta-ger/pokie">sta-ger/pokie&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="sample">Sample&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/matiasvallejosdev/casino-roulette-game">Casino Roulette Game&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="spotlight">Spotlight&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=-pmN4vJxpIs">Pixel Farm by Twist Gaming&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Game Design - Note</title><link>https://HoshikawaRyuukou.github.io/posts/game-design---note/</link><pubDate>Fri, 03 May 2024 21:06:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/game-design---note/</guid><description>&lt;h2 id="community">Community&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://igdshare.org/">IGDSHARE | 獨立遊戲開發者分享會&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="blog">Blog&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.facebook.com/Gameisabouthuman/posts/pfbid07R5QjgdiVVjDqgxMkfoi5ad9HaWRuYfC36HARdJLZsWESgkDdn1rZw4ckaaJCofCl?locale=zh_TW">飛鳥涼不涼的遊戲營運觀察小站&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://medium.com/that-game-designer">THAT GAME DESIGNER - 遊戲設計師&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://youxiputao.com/">游戏葡萄&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="dev-blog">Dev Blog&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://technote.qualiarts.jp/">QualiArtsエンジニアブログ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://note.com/happyelements">Happy Elements株式会社 カカリアスタジオ&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="rank">Rank&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://applion.jp/">APPLION&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ui">UI&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://interfaceingame.com/">Interface In Game | Collection of video games UI | Screenshots and videos&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gameui.matme.info/blog/">ゲームUIブログ&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="interview">Interview&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.ptt.cc/bbs/C_Chat/M.1681826494.A.706.html">Nexon 《蔚藍檔案》的作曲家們 - #1&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.ptt.cc/bbs/C_Chat/M.1682527673.A.27E.html">Nexon 《蔚藍檔案》的作曲家們 - #2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.ptt.cc/bbs/C_Chat/M.1684033470.A.1BA.html">Nexon 《蔚藍檔案》的作曲家們 - #3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.ptt.cc/bbs/C_Chat/M.1677771843.A.768.html">[訪談] 蔚藍檔案的過去、現在和未來（上）&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.ptt.cc/bbs/C_Chat/M.1677847355.A.879.html">[訪談] 蔚藍檔案的過去、現在和未來（下）&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://delightcollab.com/instructional-design-on-celeste/">淺談《Celeste》的教學引導設計與機制設計&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://delightcollab.com/role-dynamic-on-celeste/">《Celeste》如何打造Madeline的優異動態感？&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Phenomena - Note</title><link>https://HoshikawaRyuukou.github.io/posts/phenomena---note/</link><pubDate>Tue, 30 Apr 2024 21:20:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/phenomena---note/</guid><description>&lt;ul>
&lt;li>&lt;a href="https://georgech3.medium.com/%E6%84%9A%E6%98%A7%E4%B9%8B%E5%B7%94-%E7%B5%95%E6%9C%9B%E4%B9%8B%E8%B0%B7-%E9%81%94%E5%85%8B%E6%95%88%E6%87%89-dk-effect-%E7%9A%84%E7%BE%8E%E9%BA%97%E9%8C%AF%E8%AA%A4-%E5%B0%8D%E7%84%A1%E7%9F%A5%E7%9A%84%E7%84%A1%E6%B3%95%E8%AA%8D%E7%9F%A5-a05b95ccb8a0">達克效應（DK Effect）的美麗錯誤 — — 對無知的無法認知：愚昧之巔、絕望之谷&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://medium.com/andreas-discovery/%E4%B8%80%E5%B1%B1%E9%82%84%E6%9C%89%E4%B8%80%E5%B1%B1%E9%AB%98-%E8%AB%87%E7%9C%BC%E9%8F%A1%E8%9B%87%E6%95%88%E6%87%89-cobra-effect-84dfc162127a">一山還有一山高：談眼鏡蛇效應（Cobra Effect）&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Javascript_TypeScript - Javascript Note</title><link>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---javascript-note/</link><pubDate>Mon, 29 Apr 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---javascript-note/</guid><description>&lt;h2 id="style">Style&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://google.github.io/styleguide/jsguide.html">Google JavaScript Style Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="basic">Basic&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=Pychc22EG4Q">作用域(scope)解說：let, const, var有什麼差？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=1VZNfSjUfdU">Value與Reference的差異解說&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="asyncawait">async/await&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.explainthis.io/zh-hant/swe/async-await">JavaScript 中的 async/await 是什麼？和 promise 有什麼差別？&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="event-loop">Event Loop&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="youtube.com/watch?v=z4S6ZxRD2rA">JavaScript Event Loop解說：單執行緒還能異步運算？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.explainthis.io/zh-hant/swe/what-is-event-loop">請說明瀏覽器中的事件循環 (Event Loop)&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="object">Object&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.explainthis.io/zh-hant/swe/structureClone">為什麼推薦用 structureClone 在 JavaScript 做深拷貝?&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="promise">Promise&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.explainthis.io/zh-hant/swe/what-is-promise">Promise 是什麼？有什麼用途？&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="others">Others&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.bilibili.com/read/cv37465501">前端 JavaScript 代码保护？！&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Javascript_TypeScript - TypeScript Note</title><link>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---typescript-note/</link><pubDate>Mon, 29 Apr 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/javascript_typescript---typescript-note/</guid><description>&lt;h2 id="style">Style&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://google.github.io/styleguide/tsguide.html">Google TypeScript Style Guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="tool">Tool&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://transform.tools/json-to-typescript">JSON to TypeScript&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="basic">Basic&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://jimmyswebnote.com/typescript-object-public-private/">TypeScript 物件中的 public, private, protected, static, readonly&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cnblogs.com/keatkeat/p/17662020.html">TypeScript – Using Disposable&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="coding-guidelines">Coding guidelines&lt;/h2>
&lt;ul>
&lt;li>使用 undefined。不要使用 null。&lt;/li>
&lt;/ul>
&lt;h2 id="tsc">tsc&lt;/h2>
&lt;ul>
&lt;li>&amp;ndash;project tsconfig.json : 使用當前目錄下的 tsconfig.json&lt;/li>
&lt;li>&amp;ndash;showConfig : 檢視該目錄的 tsconfig.json (包含繼承的數值)&lt;/li>
&lt;/ul></description></item><item><title>VScode - Note</title><link>https://HoshikawaRyuukou.github.io/posts/vscode---note/</link><pubDate>Sat, 30 Mar 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/vscode---note/</guid><description>&lt;h2 id="diagrams">Diagrams&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio">Draw.io Integration&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.dandoescode.com/blog/plantuml-vs-mermaid">Software Diagrams - Plant UML vs Mermaid&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mermaid.js.org/intro/">Mermaid Doc&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="encoding">Encoding&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://umin27.medium.com/vs-code%E6%8E%A1%E7%94%A8code-runner%E9%81%87%E5%88%B0%E7%9A%84-output%E4%B8%AD%E6%96%87%E4%BA%82%E7%A2%BC%E5%95%8F%E9%A1%8C-python-55e73edf9d0b">VS Code採用Code Runner遇到的 Output中文亂碼問題 (Python)&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="display">Display&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://kiwi-half.medium.com/visual-studio-code-vs-code-%E5%88%87%E6%8F%9B%E6%88%90%E4%B8%AD%E6%96%87%E7%89%88-%E5%8D%8A%E7%86%9F%E5%A5%87%E7%95%B0%E6%9E%9C-kiwi-tech-e469f4450429">Visual Studio Code ( VS Code) 切換成中文版&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="extensions">Extensions&lt;/h2>
&lt;ul>
&lt;li>Code Runner&lt;/li>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=bierner.emojisense">:emojisense:&lt;/a>&lt;/li>
&lt;li>EditorConfig for VS Code&lt;/li>
&lt;/ul>
&lt;h2 id="hot-keys-windows">Hot Keys (Windows)&lt;/h2>
&lt;ul>
&lt;li>打開快捷鍵設定 : &lt;code>Ctrl + K Ctrl + S&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="settingjson">setting.json&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://blog.csdn.net/weixin_44869002/article/details/144644825">explorer.fileNesting：一个可以帮助你更好的管理文件的配置项&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>OS - Windows - Note</title><link>https://HoshikawaRyuukou.github.io/posts/os---windows---note/</link><pubDate>Fri, 29 Mar 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/os---windows---note/</guid><description>&lt;h2 id="disk">Disk&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://tw.bitwar.net/course/tips/3147.html">如何在Windows 10中刪除Hiberfil.sys（休眠）檔案&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="shortcut">Shortcut&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.kocpc.com.tw/archives/500846">Windows 11 顯示與清除歷史記錄&lt;/a>&lt;/li>
&lt;li>&lt;code>Windows + Shift + S&lt;/code>：這個組合鍵會啟動截圖工具，允許用戶選擇截取的區域&lt;/li>
&lt;/ul>
&lt;h2 id="other">Other&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=u0yKHP0onwU">windows为什么有两个命令行工具？命令提示符与PowerShell有什么区别？&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Unity - Coding - Warnings</title><link>https://HoshikawaRyuukou.github.io/posts/unity---coding---managed-code-stripping/</link><pubDate>Tue, 26 Mar 2024 19:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---coding---managed-code-stripping/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>在構建過程中，Unity 通過稱為託管代碼剝離的過程刪除未使用或無法訪問的代碼，這可以顯著減小應用程式的最終大小。&lt;/p>
&lt;blockquote>
&lt;p>File -&amp;gt; Build Settings -&amp;gt; Player Settings -&amp;gt; Optimization -&amp;gt; Managed Stripping Level&lt;/p>&lt;/blockquote>
&lt;ul>
&lt;li>⚠️ Managed Stripping Level 等級越高裁剪掉的代碼越多，包體也就越小，但是對應的風險也就更大。&lt;/li>
&lt;li>藉由屬性或特殊 XML 配置檔的形式提供註釋，以指示 Unity 連結器要保留代碼庫的哪些部分。&lt;/li>
&lt;/ul>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.unity3d.com/6000.0/Documentation/Manual/managed-code-stripping.html">Unity - Manual: Managed code stripping&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/KuraiAndras/LinkerGenerator">KuraiAndras/LinkerGenerator&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zenn.dev/hatopopo_0113/articles/279d3b89c791d1">IUnityLinkerProcessorでCodeStrippingからコードを守る&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="preserving">Preserving&lt;/h2>
&lt;h3 id="preserve-attribute">Preserve attribute&lt;/h3>
&lt;ul>
&lt;li>⚠️ [Preserve] 屬性屬於“侵入式”的解決方案，不建議&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cs" data-lang="cs">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">Foo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00"> [Preserve]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#111">PreservedMethod&lt;/span>&lt;span style="color:#111">(){}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="linkxml">link.xml&lt;/h3>
&lt;ul>
&lt;li>在專案的 Assets 目錄下創建個 link.xml&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;linker&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;assembly&lt;/span> &lt;span style="color:#75af00">fullname=&lt;/span>&lt;span style="color:#d88200">&amp;#34;DOTween&amp;#34;&lt;/span> &lt;span style="color:#75af00">preserve=&lt;/span>&lt;span style="color:#d88200">&amp;#34;all&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;assembly&lt;/span> &lt;span style="color:#75af00">fullname=&lt;/span>&lt;span style="color:#d88200">&amp;#34;Newtonsoft.Json&amp;#34;&lt;/span> &lt;span style="color:#75af00">preserve=&lt;/span>&lt;span style="color:#d88200">&amp;#34;all&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;assembly&lt;/span> &lt;span style="color:#75af00">fullname=&lt;/span>&lt;span style="color:#d88200">&amp;#34;Assembly-CSharp&amp;#34;&lt;/span> &lt;span style="color:#75af00">preserve=&lt;/span>&lt;span style="color:#d88200">&amp;#34;all&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;assembly&lt;/span> &lt;span style="color:#75af00">fullname=&lt;/span>&lt;span style="color:#d88200">&amp;#34;UnityEngine&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;type&lt;/span> &lt;span style="color:#75af00">fullname=&lt;/span>&lt;span style="color:#d88200">&amp;#34;UnityEngine.SpriteRenderer&amp;#34;&lt;/span> &lt;span style="color:#75af00">preserve=&lt;/span>&lt;span style="color:#d88200">&amp;#34;all&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;type&lt;/span> &lt;span style="color:#75af00">fullname=&lt;/span>&lt;span style="color:#d88200">&amp;#34;UnityEngine.Rigidbody2D&amp;#34;&lt;/span> &lt;span style="color:#75af00">preserve=&lt;/span>&lt;span style="color:#d88200">&amp;#34;all&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/assembly&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/linker&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Game Assets</title><link>https://HoshikawaRyuukou.github.io/posts/game-assets/</link><pubDate>Sun, 11 Feb 2024 08:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/game-assets/</guid><description>&lt;h2 id="games">Games&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/28598519a/TSK_AssetDL">28598519a/TSK_AssetDL&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/ZM-Kimu/Blue-Archive-Asset-Downloader">ZM-Kimu/Blue-Archive-Asset-Downloader&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/Deathemonic/BA-AD">Deathemonic/BA-AD&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="extracting">Extracting&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/AssetRipper/AssetRipper">AssetRipper/AssetRipper&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Unity - Package - UniTask</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package---unitask/</link><pubDate>Sat, 10 Feb 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package---unitask/</guid><description>&lt;h2 id="前述">前述&lt;/h2>
&lt;p>UniTask - Unity 中實現效能最好的 async/await 的函式庫&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Cysharp/UniTask">Cysharp/UniTask&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Unity 中預設的非同步實現是 - &lt;a href="https://docs.unity3d.com/2022.3/Documentation/Manual/Coroutines.html">Coroutine 協程&lt;/a>，但協程有以下缺點&lt;/p>
&lt;ul>
&lt;li>無法使用回傳值，需使用 callback 來解決。&lt;/li>
&lt;li>異常處理很困難，因為不能在 try-catch 區塊內使用 yield。&lt;/li>
&lt;li>需透過 MonoBehaviour.StartCoroutine 才能啟動。&lt;/li>
&lt;/ul>
&lt;p>UniTask 相較於 C# 原生的 Task 做了以下改進&lt;/p>
&lt;ul>
&lt;li>刪除了 Task 在 Unity 不需要的功能。&lt;/li>
&lt;li>非 MonoBehaviour 裡也能實現非同步。&lt;/li>
&lt;li>記憶體/ GC / Unity PlayerLoop 等方面做最佳化。&lt;/li>
&lt;li>UniTaskTracker 提供編輯器上可視化追蹤 await 狀態，這對於檢查是否有洩漏很有用。&lt;/li>
&lt;/ul>
&lt;p>UniTask 官方文件的基本功能寫得相當清楚，並附上一些入門介紹&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://hackmd.io/@-xLrSnFfROOeIeRnENCWcQ/Bke4eFcrd">UniTaskを使おう！&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/toRisouP/items/4445b6b9bf00e49eb147">UniTask機能紹介&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://scenarioflow-lab.dotprologue.com/category/unitask/">UniTask | ScenarioFlow Lab&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>以下紀錄幾個重點主題&lt;/p>
&lt;h2 id="awaiter">Awaiter&lt;/h2>
&lt;p>UniTask 已經實作了相當豐富的 Awaiter 擴充，有需要自訂的可以參考以下規範&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.walterlv.com/post/what-is-an-awaiter.html">.NET 中什么样的类是可使用 await 异步等待的？&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="thread">Thread&lt;/h2>
&lt;ul>
&lt;li>UniTask.SwitchToThreadPool 允許後續處理在執行緒池中進行。&lt;/li>
&lt;li>UniTask.SwitchToMainThread 切換到主執行緒，不會等待下一幀。&lt;/li>
&lt;li>也可以使用 UniTask.Yield 切換到主執行緒，但它總是等待一幀。&lt;/li>
&lt;/ul>
&lt;p>但目前尚未有使用到的情境，之後有遇到再嘗試。&lt;/p></description></item><item><title>Unity - Platform - Android - Build</title><link>https://HoshikawaRyuukou.github.io/posts/unity---platform---android---build/</link><pubDate>Sat, 03 Feb 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---platform---android---build/</guid><description>&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.jianshu.com/p/9058daafa130">Unity 不通過Android studio 打包接SDK&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="settings">Settings&lt;/h2>
&lt;ul>
&lt;li>gradleTemplate.properties : 專案的全域 Gradle 配置。&lt;/li>
&lt;li>AndroidManifest.xml ：用於向 Android 構建工具、Android 作業系統和 Google Play 描述應用的基本資訊。&lt;/li>
&lt;li>launcherManifest.xml 定義應用的啟動配置資訊&lt;/li>
&lt;li>mainTemplate.gradle：自定義 Android 專案的 Gradle 構建過程，包括添加依賴項、修改編譯設定、配置簽名資訊等。&lt;/li>
&lt;li>launcherTemolate.gradle ：包含有關如何構建 Android 應用程式的指令&lt;/li>
&lt;li>baseProjectTemplate.gradle：所含的配置會在其他所有範本/Gradle 專案之間共用&lt;/li>
&lt;/ul>
&lt;h2 id="device">Device&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=iCXwaehzRFQ">Quickly preview your game on Android device | Unity tutorial&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Unity - Platform - Android - AndroidJNIModule</title><link>https://HoshikawaRyuukou.github.io/posts/unity---platform---android---androidjnimodule/</link><pubDate>Sun, 28 Jan 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---platform---android---androidjnimodule/</guid><description>&lt;h2 id="前述">前述&lt;/h2>
&lt;p>這次的業務需求是&lt;/p>
&lt;blockquote>
&lt;p>將 Google Play Install Referrer 接入 Unity&lt;/p>&lt;/blockquote>
&lt;p>目前有使用到 AndroidJNIModule 中的&lt;/p>
&lt;ul>
&lt;li>AndroidJavaClass&lt;/li>
&lt;li>AndroidJavaObject&lt;/li>
&lt;li>AndroidJavaProxy&lt;/li>
&lt;/ul>
&lt;p>但中途採了不少坑，特此紀錄一下。&lt;/p>
&lt;h2 id="基本知識">基本知識&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.unity3d.com/ScriptReference/UnityEngine.AndroidJNIModule.html">UnityEngine.AndroidJNIModule&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://vuopaja.com/tutorials/android-java-proxy">How to Create Android Java Callbacks to C# in Unity&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zenn.dev/sunmax/articles/e079dd3ba7c487">UnityからAndroidのクラスや関数を呼び出す&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="androidjavaclass">&lt;a href="https://docs.unity3d.com/ScriptReference/AndroidJavaClass.html">AndroidJavaClass&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>可以實例化 Java 類、調用 Java 類的靜態方法，以及訪問 Java 類的靜態屬性。&lt;/li>
&lt;/ul>
&lt;h3 id="androidjavaobject">&lt;a href="https://docs.unity.cn/2022.3/Documentation/ScriptReference/AndroidJavaObject.html">AndroidJavaObject&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>創建 Java 對象的實例。&lt;/li>
&lt;/ul>
&lt;h3 id="androidjavaproxy">&lt;a href="https://docs.unity3d.com/ScriptReference/AndroidJavaProxy.html">AndroidJavaProxy&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>允許在 Unity C# 腳本中實現 Java 接口。&lt;/li>
&lt;li>允許我們在 Java 中調用方法，這些方法將調用 C# 類上的 &lt;strong>匹配&lt;/strong> 方法。&lt;/li>
&lt;/ul>
&lt;h2 id="注意">注意&lt;/h2>
&lt;ul>
&lt;li>函數名匹配 (建議直接看 source code 裡面的值，本此次就遇到 官方文件與 jar 為匹配)&lt;/li>
&lt;li>android.os.Build.VERSION 將意味著要到一個公開類&lt;/li>
&lt;li>android.os.Build$VERSION 將意味著進入一個內部類&lt;/li>
&lt;/ul></description></item><item><title>Unity - Service - Google Play Install Referrer</title><link>https://HoshikawaRyuukou.github.io/posts/unity---service---google-play-install-referrer/</link><pubDate>Thu, 25 Jan 2024 22:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---service---google-play-install-referrer/</guid><description>&lt;h2 id="簡述">簡述&lt;/h2>
&lt;p>&lt;a href="https://developer.android.com/google/play/installreferrer?hl=zh-tw">Play Install Referrer&lt;/a>&lt;/p>
&lt;ul>
&lt;li>Play Install Referrer API : 非 Kotlin / Java 用戶使用&lt;/li>
&lt;li>Play Install Referrer Library : 將上者封裝更方便 Kotlin / Java 使用&lt;/li>
&lt;/ul>
&lt;p>透過該服務能對 App 的下載與使用者進行歸因分析，用於評估推廣服務得成效，進而提升推廣效果與報酬率。&lt;/p>
&lt;ul>
&lt;li>舊版 Play Install Referrer 在使用者下載應用程式後透過廣播傳送包含歸因參數的訊息。然而廣播的不可靠性和安全性問題，目前不再建議使用這個版本。&lt;/li>
&lt;li>新版 Play Install Referrer 直接訪問本機 Google Play 應用程式商店中的記錄，索取 referrer 值，因此更加可靠。&lt;/li>
&lt;/ul>
&lt;h2 id="快速上手">快速上手&lt;/h2>
&lt;p>Unity 專案: 將依賴加在 maintemplate.gradle&lt;/p>
&lt;pre tabindex="0">&lt;code>dependencies {
 implementation(&amp;#34;com.android.installreferrer:installreferrer:2.2&amp;#34;)
}
&lt;/code>&lt;/pre>&lt;p>因為官方 API 文件寫的不全，建議到以下網站直接下載 aar 查看 jar 來對接 API&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://maven.google.com/web/index.html?q=install#com.android.installreferrer:installreferrer:2.2">Google&amp;rsquo;s Maven Repository&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mvnrepository.com/artifact/com.android.installreferrer/installreferrer/2.2">Maven Repository&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>使用服務的工作流為如下&lt;/p>
&lt;ol>
&lt;li>建立連線&lt;/li>
&lt;li>等待 callback 連線成功&lt;/li>
&lt;li>索取 referrer&lt;/li>
&lt;li>關閉連線&lt;/li>
&lt;/ol>
&lt;h2 id="referrer-格式">Referrer 格式&lt;/h2>
&lt;pre tabindex="0">&lt;code>https://play.google.com/store/apps/details?id=${package name}&amp;amp;referrer=${parameter}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;a href="https://ga-dev-tools.google/campaign-url-builder/play/">Play Campaign URL Builder&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developers.google.com/analytics/devguides/collection/android/v4/campaigns?hl=zh-tw#campaign-params">廣告活動參數&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="referrer-狀態">Referrer 狀態&lt;/h2>
&lt;p>將手機連著 android studio 開啟 Logcat，透過連結前往商店發現有 4 種情境&lt;/p></description></item><item><title>Software Design - Architecture - VIPER</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---architecture---viper/</link><pubDate>Fri, 19 Jan 2024 21:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---architecture---viper/</guid><description>&lt;h2 id="簡述">簡述&lt;/h2>
&lt;p>VIPER (View-Interactor-Presenter-Entity-Router)&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://juejin.cn/post/6844903491941433351">iOS VIPER架構實踐(一)：從MVC到MVVM到VIPER&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/tyndale1993/article/details/80777324">VIPER，更清晰的架构，解决复用和测试问题的利器系列1：VIPER架构演进史&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>有很多種實作流派，下圖是我比較偏好的模式呈現&lt;/p>
&lt;p>
 &lt;img src="https://HoshikawaRyuukou.github.io/images/VIPER.png" alt="VIPER">

&lt;/p>
&lt;p>VIPER 借鏡了 CA (Clean Architecture) 的思想為 MVC 提供一個新的設計方案&lt;/p>
&lt;ul>
&lt;li>Entity 對應原本的 Model&lt;/li>
&lt;li>Controller 責任過重 -&amp;gt; 將業務邏輯移至 Interactor 並提高重用性&lt;/li>
&lt;li>Controllers 之間耦合 -&amp;gt; 將導航邏輯移至 Router&lt;/li>
&lt;li>Presenter 作為 Binder 將 View / Interactor / Router 整合&lt;/li>
&lt;/ul>
&lt;h2 id="啟發">啟發&lt;/h2>
&lt;p>VIPER 是筆者學習架構路上很重要的一個過渡，有以下兩點的思想轉變&lt;/p>
&lt;h3 id="顆粒度更細的單一職責">顆粒度更細的單一職責&lt;/h3>
&lt;p>Interactor 封裝業務的概念在純 MVX 中是無法直接體會到，因此對之後學習 CA 時起了很大的緩衝，不然對於 Usecase 的設計應該會很不適應。&lt;/p>
&lt;h3 id="重視-navigation">重視 Navigation&lt;/h3>
&lt;p>在學習 CA 中始終沒題到 feature/componet module 之間是如何互動的，也是在回頭複習 VIPER 時才重新意識到 Router 的重要性。當沒有特別規劃 Navigation 時很容易會造成 module 之間的耦合。&lt;/p></description></item><item><title>Unity - Service - Cloud Diagnostics</title><link>https://HoshikawaRyuukou.github.io/posts/unity---service---cloud-diagnostics/</link><pubDate>Tue, 16 Jan 2024 22:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---service---cloud-diagnostics/</guid><description>&lt;h2 id="簡述">簡述&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://unity3ds-software.com/en/cn/products/cloud-diagnostics.html">Official Home Page&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.unity.com/ugs/manual/cloud-diagnostics/manual/CloudDiagnostics/WelcometoCloudDiagnostics">Official Doc&lt;/a>&lt;/li>
&lt;li>監控崩潰和異常報告&lt;/li>
&lt;li>測試人員和應用使用者能直接提供用戶報告&lt;/li>
&lt;li>啟用成本極低且非侵入式&lt;/li>
&lt;li>有免費套餐，Personal 常規操作應該是沒問題，一旦超出了免費額度，系統將要求添加付款方式以繼續使用服務&lt;/li>
&lt;/ul>
&lt;h2 id="快速上手">快速上手&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://learn.unity.com/tutorial/cloud-diagnostics?tab=overview#">Cloud Diagnostics&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kan-kikuchi.hatenablog.com/entry/Unity_Cloud_Diagnostics">エラーやクラッシュを記録し、バグ特定の手助けになるUnity公式の無料サービス Unity Cloud Diagnostics&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kan-kikuchi.hatenablog.com/entry/Unity_ForceCrash">UnityエディタやUnityで作ったゲームを強制的にクラッシュさせる方法&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="注意">注意&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.unity.com/ugs/en-us/manual/cloud-diagnostics/manual/Privacy/apple-privacy">Apple&amp;rsquo;s privacy survey&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.unity.com/ugs/en-us/manual/cloud-diagnostics/manual/Privacy/GoogleDataSafety">Google Play data safety disclosures for Cloud Diagnostics&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Unity - Package Manager - Modify a package</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package-manager---modify-a-package/</link><pubDate>Fri, 12 Jan 2024 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package-manager---modify-a-package/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>有需要客製化 Unity 官方 / git 直接導入 的 Package 時&lt;/p>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://support.unity.com/hc/en-us/articles/9113460764052-How-can-I-modify-built-in-packages-">How can I modify built-in packages?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/linjf520/article/details/125738218">Unity - 如何修改一个 Package 或是如何将 Package Local化&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="steps">Steps&lt;/h2>
&lt;ol>
&lt;li>至 ProjrctRoot\Library\PackageCache 找到目標的 Package&lt;/li>
&lt;li>&lt;strong>剪下貼上&lt;/strong>至 ProjrctRoot\Packages 即可&lt;/li>
&lt;/ol></description></item><item><title>Unity - Package - External Dependency Manager for Unity (EDM4U)</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package---external-dependency-manager-for-unity-edm4u/</link><pubDate>Wed, 08 Nov 2023 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package---external-dependency-manager-for-unity-edm4u/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>Google 停止維護 Game Package Registry (GPR) 導致不能直接使用 Package Manager 導入包。必須到封存檔網站下載「.tgz」手動導入。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://developers.google.com/unity/archive?hl=zh-tw#external_dependency_manager_for_unity">Google Unity 套件&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.unity3d.com/Manual/upm-ui-tarball.html">Install a package from a local tarball file&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>其他的相關的 Google Service 依賴(AR/Firebase/Google Play等)也可以用此方法導入。&lt;/p>
&lt;h2 id="設定">設定&lt;/h2>
&lt;p>&lt;code>Assets &amp;gt; External Dependency Manager &amp;gt; Android Resolver &amp;gt; Settings&lt;/code>
啟用這三個 Patch

 &lt;img src="https://HoshikawaRyuukou.github.io/images/EDM4U_01.png" alt="EDM4U_01">

&lt;/p>
&lt;p>並至 &lt;code>Player Settings &amp;gt; Publishing Settings&lt;/code>
啟用以下選項

 &lt;img src="https://HoshikawaRyuukou.github.io/images/EDM4U_02.png" alt="EDM4U_02">

&lt;/p>
&lt;h2 id="auto-resolution">Auto resolution&lt;/h2>
&lt;p>&lt;code>Assets &amp;gt; External Dependency Manager &amp;gt; Android Resolver &amp;gt; Force Resolve&lt;/code>
後會去收集專案&lt;strong>所有 Editor 資料夾&lt;/strong>下的 *&lt;strong>Dependencies.xml&lt;/strong> 加到 mainTemplate 中&lt;/p></description></item><item><title>Software Design - Pattern - ViewModel</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---viewmodel/</link><pubDate>Sun, 27 Aug 2023 20:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---viewmodel/</guid><description>&lt;h2 id="前述">前述&lt;/h2>
&lt;p>此篇的實作參考到以下文件 (提到不少 Presentation layer 設計原則)&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://developer.android.com/topic/architecture/ui-layer?hl=zh-tw">Android Developers 文件/指南/UI 層&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>該文件的更新頻率算高且會與時俱進，筆者印象中其架構設計從 MVVM -&amp;gt; Domain/Application Driven 設計，可以看出主流架構有產生變化。之後的討論雖然使用 ViewModel 但不會詳細介紹 MVVM 的細節，如果對 MVX 系列不熟，可以先讀筆者之前的文章 &lt;strong>&amp;laquo;通用設計 - Pattern - MVP&amp;raquo;&lt;/strong> 裡面的 References。&lt;/p>
&lt;h2 id="探索">探索&lt;/h2>
&lt;p>回到正題，筆者在最近的業務上遇到&lt;/p>
&lt;blockquote>
&lt;p>如何在 &lt;strong>服務端未完成&lt;/strong> 的情況下，讓 Client 獲得完整的體驗流 ?&lt;/p>&lt;/blockquote>
&lt;p>以下用交叉反問的方式來分析問題&lt;/p>
&lt;p>Q: 沒有服務端那資料來源哪來 ? &lt;br>
A: 使用假資料&lt;/p>
&lt;p>Q: 當表現層依賴的是 IService Interface 使用假資料時需要實作什麼 ? &lt;br>
A: 只需要實作一個 FakeService 來產生假資料即可&lt;/p>
&lt;p>Q: 當想要將業務與表現解耦時，很常使用中介者的手法來黏合兩者，如果使用標準的 MVP 實做，Presenter 實際做了哪些事呢 ? &lt;br>
A: 監聽 View 事件/ 與 Service 互動/ 管理畫面狀態/ 呼叫 View 刷新&lt;/p></description></item><item><title>Unity - Performance - Memory Profiler</title><link>https://HoshikawaRyuukou.github.io/posts/unity---performance---memory-profiler/</link><pubDate>Sun, 30 Jul 2023 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---performance---memory-profiler/</guid><description>&lt;h2 id="注意">注意&lt;/h2>
&lt;ul>
&lt;li>由於Unity 無法將性能分析器本身佔用的記憶體與運行模式的記憶體完全分開。要獲得應用程序的更精確數字和記憶體使用情況，應在要運行應用程序的目標設備和操作系統上分析應用程序。&lt;/li>
&lt;li>如果需要在記憶體受限的平台上運行應用程序，設備上的總駐留量對於檢查低記憶體警告和由於記憶體耗盡而強制關閉非常有用。作為一般規則，它不應超過設備上可用總物理內存的 70%。&lt;/li>
&lt;li>偵測 Leaked Managed Shell 的功能在 Memory Profiler 1.1.0-pre.1&lt;/li>
&lt;/ul>
&lt;h2 id="ref">Ref&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.unity3d.com/Packages/com.unity.memoryprofiler@1.0/manual/index.html">Memory Profiler&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.unity3d.com/Packages/com.unity.memoryprofiler@1.1/manual/managed-shell-objects.html">Memory Profiler | 1.1.0-pre.1 - Unity - Manual&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=UIwQmpQTtA4">Unity でメモリリーク？ Memory Profiler で Leaked Managed Shell をチェックしてみよう！&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.unity.com/engine-platform/inspecting-memory-with-the-new-memory-profiler-package">Inspecting memory with the new Memory Profiler package&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://unitysquare.co.kr/growwith/unityblog/webinarView?id=387&amp;amp;utm_source=facebook-page&amp;amp;utm_medium=social&amp;amp;utm_campaign=korea_memoryprofilerapp387">Memory Profiler로 애플리케이션의 물리적 메모리 사용량 분석&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/Nbin_Newby/article/details/131537227">Unity内存分析与优化实践(1.1版本前)&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Git - Rebase</title><link>https://HoshikawaRyuukou.github.io/posts/git---rebase/</link><pubDate>Sun, 16 Jul 2023 20:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/git---rebase/</guid><description>&lt;blockquote>
&lt;p>之前筆者一直以為 rebase 是進行類似 &lt;strong>剪下貼上&lt;/strong> 的操作，但實際上是 &lt;strong>複製貼上&lt;/strong>&lt;/p>&lt;/blockquote>
&lt;h2 id="情境">情境&lt;/h2>
&lt;ul>
&lt;li>合併時不會像 merge 時會有 commit 的節點&lt;/li>
&lt;li>想整理 &lt;strong>還沒推出去&lt;/strong> 的 commit 可以使用&lt;/li>
&lt;li>&lt;strong>避免修改已經推出去的歷史&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3 id="如何取消操作">如何取消操作&lt;/h3>
&lt;p>使用 reflog 列印出所有「歷史紀錄」找到 rebase 的前一個 commit id，並進行 reset 即可&lt;/p>
&lt;pre tabindex="0">&lt;code>git reflog
git reset XXXXXXX --hard
&lt;/code>&lt;/pre>&lt;p>此外當進行比較危險操作時 git 會額外紀錄前一個 head 於 ORIG_HEAD，因此也可以直接執行以下，來達到同樣效果&lt;/p>
&lt;pre tabindex="0">&lt;code>git reset ORIG_HEAD --hard
&lt;/code>&lt;/pre>&lt;h2 id="ref">Ref&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=HeF7dwVyzow">另一種合併方式（使用 rebase）&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jessie75919.medium.com/git-rebase-%E7%94%A8%E6%B3%95-3e1ef046e357">git rebase 用法&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jessie75919.medium.com/%E4%BA%BA%E7%94%9F%E5%A6%82%E6%9E%9C%E6%9C%89-git-1-git-rebase-i-drop-94cc1c018465">git rebase -i (drop)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jessie75919.medium.com/%E4%BA%BA%E7%94%9F%E5%A6%82%E6%9E%9C%E6%9C%89-git-2-git-rebase-i-pick-c623301ff2db">git rebase -i (pick)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jessie75919.medium.com/%E4%BA%BA%E7%94%9F%E5%A6%82%E6%9E%9C%E6%9C%89-git-3-git-rebase-i-reword-370edc23f336">git rebase -i (reword)&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Git - Pull Request</title><link>https://HoshikawaRyuukou.github.io/posts/git---pull-request/</link><pubDate>Fri, 14 Jul 2023 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/git---pull-request/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;blockquote>
&lt;p>有的環境也稱 Merge Request&lt;/p>&lt;/blockquote>
&lt;p>開發產品時一般會挑選固定一個分支做為可以上線的正式版本分支(master)，需注意的是在進行多人協同開發時，讓每個人都可以 Commit 到專案正式上線的分支不是個好的做法。&lt;/p>
&lt;p>可以透過 pull request 方式控管權限，由負責管理這個專案的人收到其他開發者的 pull request 並確認無誤後便可進行合併，來確保產品分支處於隨時都是可上線的狀態。&lt;/p>
&lt;p>參與開源專案時，在創建 pull request 之前，建議先在本地分支上運行 git rebase 命令，確保你的更改基於最新的進度以降低審查者的理解難度。&lt;/p>
&lt;h2 id="guide">Guide&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://gitbook.tw/chapters/github/pull-request">與其它開發者的互動 - 使用 Pull Request（PR）&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Git - Reapply .gitignore</title><link>https://HoshikawaRyuukou.github.io/posts/git---reapply-.gitignore/</link><pubDate>Fri, 14 Jul 2023 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/git---reapply-.gitignore/</guid><description>&lt;h2 id="quick-chat">Quick Chat&lt;/h2>
&lt;p>當你一開始沒 ignore 到某些檔案，後來補上 .gitignore，卻發現 Git 還是繼續追蹤那些檔案。&lt;/p>
&lt;h2 id="solution">Solution&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 先清掉 Git 的快取（不會刪檔，只是取消追蹤）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git rm -r --cached .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 再重新加入所有檔案（讓 .gitignore 這次能正確發揮作用）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git add .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 然後提交變更&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git commit -m &lt;span style="color:#d88200">&amp;#34;Reapply .gitignore rules&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Unity - Basic - Preprocessor Directives</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---preprocessor-directives/</link><pubDate>Fri, 07 Jul 2023 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---preprocessor-directives/</guid><description>&lt;h2 id="前述">前述&lt;/h2>
&lt;p>中文稱作 : 前置處理器指示詞&lt;/p>
&lt;p>筆者最近接觸到的遺舊專案中發現裡面大量地使用 條件式編譯&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#if&lt;/span> &lt;span style="color:#111">DEBUG&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Console&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">WriteLine&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Debug version&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#endif&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>筆者之前有使用也基本只使用 定義區域 (排版效果)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#region&lt;/span> &lt;span style="color:#111">MyClass&lt;/span> &lt;span style="color:#111">definition&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">MyClass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#111">Main&lt;/span>&lt;span style="color:#111">(){...}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#endregion&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Unity 在處理平台裝置時也蠻常會出現的&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">PlatformDefines&lt;/span> &lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">MonoBehaviour&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#111">Start&lt;/span> &lt;span style="color:#111">()&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#if&lt;/span> &lt;span style="color:#111">UNITY_EDITOR&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Debug&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">Log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Unity Editor&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#endif&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#if&lt;/span> &lt;span style="color:#111">UNITY_IOS&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Debug&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">Log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;iOS&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#endif&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#if&lt;/span> &lt;span style="color:#111">UNITY_STANDALONE_OSX&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Debug&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">Log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Standalone OSX&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#endif&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#if&lt;/span> &lt;span style="color:#111">UNITY_STANDALONE_WIN&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">Debug&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">Log&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;Standalone Windows&amp;#34;&lt;/span>&lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#endif&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="問題">問題&lt;/h2>
&lt;p>那前置處理器指示詞有什麼問題呢? (參考日文那個 Ref 有比較明確的 Case)&lt;/p>
&lt;ul>
&lt;li>編譯版本至少會是 2^(指示詞的分類數)種，持續的調試和測試變得非常困難。&lt;/li>
&lt;li>Unit Test 中難以使用。&lt;/li>
&lt;li>編譯檢查不起作用。&lt;/li>
&lt;li>當巢狀結構出現時可讀性將大為降低。&lt;/li>
&lt;/ul>
&lt;p>上述這些狀況都會導致 &lt;strong>延後發現問題的時間 !&lt;/strong>&lt;/p>
&lt;h2 id="方案">方案&lt;/h2>
&lt;p>這個前置處理器指示詞一直是個蠻有爭議的作法，有一派人士是不使用的(通過使用條件分支、策略模式或依賴注入等其他方式，更可以清晰地表達了代碼的邏輯，提高了程式的可維護性)。&lt;/p>
&lt;p>筆者也傾向不使用(業務邏輯不用，其餘的看狀況)。&lt;/p>
&lt;h3 id="case-editor">Case. Editor&lt;/h3>
&lt;p>有時後會有需要客製編輯器時，會這樣跟 MonoBehaviour 寫在一起並用 UNITY_EDITOR 處理。但事實上獨立一個檔案放在 &lt;strong>Editor 資料夾&lt;/strong> 應該會更好。&lt;/p></description></item><item><title>Unity - Platform - iOS - plug-in</title><link>https://HoshikawaRyuukou.github.io/posts/unity---platform---ios---plug-in/</link><pubDate>Wed, 05 Jul 2023 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---platform---ios---plug-in/</guid><description>&lt;h2 id="前述">前述&lt;/h2>
&lt;p>這次的業務需求是&lt;/p>
&lt;blockquote>
&lt;p>取得 ios 實機的 &amp;ldquo;地區&amp;rdquo;，並讓 C# 能拿到 Swift 所返回的字串&lt;/p>&lt;/blockquote>
&lt;p>因為在 ios 的環境下 unity / C# 拿到的值並不正確。此外筆者對 Swift / Objective-C 幾乎零基礎，目前只針對一些教學文件做些修改，之後有機會更熟再回頭深究。&lt;/p>
&lt;h2 id="實作">實作&lt;/h2>
&lt;ul>
&lt;li>SwiftDeviceInfoPlugin.swift 須放置於 Plugins\iOS 之下&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-swift" data-lang="swift">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">import&lt;/span> &lt;span style="color:#75af00">Foundation&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">SwiftDeviceInfoPlugin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">getRegion&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">-&amp;gt;&lt;/span> &lt;span style="color:#111">String&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">Locale&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">current&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">regionCode&lt;/span> &lt;span style="color:#111">??&lt;/span> &lt;span style="color:#d88200">&amp;#34;Unknown&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">@&lt;/span>&lt;span style="color:#111">_cdecl&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#d88200">&amp;#34;getRegion&amp;#34;&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">func&lt;/span> &lt;span style="color:#75af00">getRegion&lt;/span>&lt;span style="color:#111">()&lt;/span> &lt;span style="color:#111">-&amp;gt;&lt;/span> &lt;span style="color:#111">UnsafePointer&lt;/span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#111">CChar&lt;/span>&lt;span style="color:#111">&amp;gt;?&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">let&lt;/span> &lt;span style="color:#111">region&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">strdup&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">SwiftDeviceInfoPlugin&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">getRegion&lt;/span>&lt;span style="color:#111">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#111">UnsafePointer&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">region&lt;/span>&lt;span style="color:#111">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>@_cdecl(&amp;ldquo;getRegion&amp;rdquo;)：這是一個 Swift 標記，表示下面的函數將使用cdecl樣式的名稱綁定。您只需知道此屬性向 C 公開了一個 Swift 函數&lt;/li>
&lt;li>UnsafePointer&amp;lt;CChar&amp;gt;?，它是一個可為空的指向 C 風格字串（CChar）的指標。這使得 Swift 能夠以與 C 相容的方式提供訪問區域資訊的介面。&lt;/li>
&lt;li>strdup() 用於創建預返回的字串的副本，並在堆上分配其記憶體。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">sealed&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">IOSDeviceInfoProvider&lt;/span> &lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">IDeviceInfoProvider&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">string&lt;/span> &lt;span style="color:#111">GetRegion&lt;/span>&lt;span style="color:#111">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">return&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">System&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">Globalization&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">RegionInfo&lt;/span>&lt;span style="color:#111">(&lt;/span>&lt;span style="color:#111">GetRegionFromDevice&lt;/span>&lt;span style="color:#111">()).&lt;/span>&lt;span style="color:#111">ThreeLetterISORegionName&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">ToUpper&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00"> [DllImport(&amp;#34;__Internal&amp;#34;, EntryPoint = &amp;#34;getRegion&amp;#34;)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">static&lt;/span> &lt;span style="color:#00a8c8">extern&lt;/span> &lt;span style="color:#00a8c8">string&lt;/span> &lt;span style="color:#111">GetRegionFromDevice&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>[DllImport] : 是一個 System.Runtime.InteropServices 命名空間中的屬性，它告訴 C# 編譯器這個函數是在外部插件中定義的，並且需要從外部導入。&lt;/li>
&lt;li>EntryPoint = &amp;ldquo;getRegion&amp;rdquo; 表示在外部插件中將使用名為 callSwift 的函數作為入口點。&lt;/li>
&lt;li>extern 關鍵字表示該函數的實現不是在 C# 代碼中，而是在外部的原生插件中實現的。&lt;/li>
&lt;/ul>
&lt;h2 id="待補">待補&lt;/h2>
&lt;ul>
&lt;li>記憶體管理的知識點&lt;/li>
&lt;li>這次沒用到委派，須找時間理解&lt;/li>
&lt;/ul>
&lt;h2 id="ref">Ref&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.unity3d.com/Manual/PluginsForIOS.html">Building plug-ins for iOS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.create-forever.games/unity2021-csharp-swift-call/">C# から直接 Swift コードを呼び出す&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://betterprogramming.pub/setting-up-ios-framework-for-unity-9ef4e577db89">Setting Up iOS Framework for Unity From Swift to C#&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Software Design - Pattern - Service Locator</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---service-locator/</link><pubDate>Wed, 28 Jun 2023 20:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---service-locator/</guid><description>&lt;h2 id="前述">前述&lt;/h2>
&lt;p>Service Locator 確實也是 IoC 的一種實作方式，不過採用的是 依賴尋找(Dependency Lookup) 的設計。
筆者之前有一陣子蠻常使用這 pattern，那時對 DI 與 IoC 的概念並不熟悉，只覺得這樣使用依賴變得很方便。&lt;/p>
&lt;p>因為我可以在任何地方直接這樣取用資源&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">var&lt;/span> &lt;span style="color:#111">target&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#111">ServiceLocator&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">Resovle&lt;/span>&lt;span style="color:#111">&amp;lt;&lt;/span>&lt;span style="color:#111">Target&lt;/span>&lt;span style="color:#111">&amp;gt;();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>這樣的寫法有以下問題 :&lt;/p>
&lt;ol>
&lt;li>透過 ServiceLocator 因為這個取用資源的過程是隱性的，不容易被直接發現。&lt;/li>
&lt;li>想用誰就拿誰這件事也有點危險，Ex: View 可以拿到不屬於 Presentation layer 該碰的對象。&lt;/li>
&lt;/ol>
&lt;p>所以當 DI 與 IoC 的概念熟悉後，並且使用 DI / IoC Container 後就漸漸不使用這 pattern 了。&lt;/p>
&lt;h2 id="應用">應用&lt;/h2>
&lt;p>但這次工作上反而覺得 Service Locator 可以勝任從 Singleton 過渡到 DI / IoC Container 的中繼階段。&lt;/p>
&lt;p>因為這次接觸到的專案嚴重依賴 Singleton，且組員也已習慣 Singleton 的寫法了，要直切換到 DI / IoC Container 會有不小的陣痛期(當然實務上能不能切又是另一個故事了)。&lt;/p>
&lt;p>於是筆者想起了 Service Locator，有以下理由&lt;/p>
&lt;ol>
&lt;li>因為在使用上就很像是 Singleton&lt;/li>
&lt;li>筆者希望組員能快速感受到 IoC 所帶來的紅利&lt;/li>
&lt;li>集中管理依賴&lt;/li>
&lt;/ol>
&lt;h2 id="實作">實作&lt;/h2>
&lt;p>此模式使用稱為「服務定位器」的中央註冊表，它根據請求返回執行特定任務所需的對象。&lt;/p></description></item><item><title>Network - WebP</title><link>https://HoshikawaRyuukou.github.io/posts/network---webp/</link><pubDate>Thu, 22 Jun 2023 20:20:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/network---webp/</guid><description>&lt;h2 id="設計目標">設計目標&lt;/h2>
&lt;p>Google 以縮減線上影像的檔案大小為目標，同時維持不輸 JPEG、PNG、GIF 格式的圖片品質。&lt;/p>
&lt;p>網站的瀏覽與速度不僅影響使用者的耐心，也會影響 SEO 的排名與檢索，透過顯著縮減相片和圖形大小，網頁就能加快載入速度，提供更優質的使用者體驗。&lt;/p>
&lt;p>並持續在優化
&lt;a href="https://chromium.googlesource.com/codecs/libwebp2/">WebP 2: experimental successor of the WebP image format&lt;/a>&lt;/p>
&lt;h2 id="壓縮方式">壓縮方式&lt;/h2>
&lt;ul>
&lt;li>有損壓縮&lt;/li>
&lt;li>無失真壓縮&lt;/li>
&lt;/ul>
&lt;h2 id="ref">Ref&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.adobe.com/tw/creativecloud/file-types/image/raster/webp-file.html">WebP 檔案&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://note.com/reality_eng/n/nc49229b19a7a">Now in REALITY Tech #6 画像をWebP形式に対応した話&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://note.com/reality_eng/n/nad3e6b4a84c6">Now in REALITY Tech #37 UnityでWebPを扱えるようにした話&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Test - Note</title><link>https://HoshikawaRyuukou.github.io/posts/test---note/</link><pubDate>Sat, 03 Jun 2023 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/test---note/</guid><description>&lt;p>以下觀點不一定適用於各專案，請因地制宜。&lt;/p>
&lt;h2 id="在開始寫-code-之前">在開始寫 code 之前&lt;/h2>
&lt;ul>
&lt;li>測試文化: 底下的人願意寫，上面的人願意給時間。&lt;/li>
&lt;li>測試的順位: 從商業價值最高的功能開始。&lt;/li>
&lt;li>較低的測試價值
&lt;ul>
&lt;li>需求尚未明朗又必須交付成果。&lt;/li>
&lt;li>取決於經營者對價值的認定，其實跟程式沒多大關係。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>不是所有的程式都可以測試，有時候為了測試，程式需要先重構成可以測試的樣子。&lt;/li>
&lt;/ul>
&lt;h2 id="unit-test">Unit Test&lt;/h2>
&lt;h3 id="手動測試">手動測試&lt;/h3>
&lt;ul>
&lt;li>慢&lt;/li>
&lt;li>不穩定&lt;/li>
&lt;li>脆弱&lt;/li>
&lt;li>不方便&lt;/li>
&lt;/ul>
&lt;p>問題出在不可控&lt;/p>
&lt;ul>
&lt;li>希望是可控的&lt;/li>
&lt;li>可重現一樣結果&lt;/li>
&lt;/ul>
&lt;h3 id="以整體專案的角度來看單元測試">以整體專案的角度來看單元測試&lt;/h3>
&lt;p>專案內分為 不可控 與 可控 兩部分&lt;/p>
&lt;ul>
&lt;li>不可控: 檔案/資料庫/第三方套件&lt;/li>
&lt;li>可控: 除不可控以外自己所寫的部分&lt;/li>
&lt;/ul>
&lt;p>可控內分為 不可測 與 可測 兩部分&lt;/p>
&lt;ul>
&lt;li>不可測: 與不可控接觸的部分，因此會希望這部分越單純越好。&lt;/li>
&lt;li>可測: 為專案內價值較高，須小心維護的部分。&lt;/li>
&lt;/ul>
&lt;p>目標: 可測範圍盡量大，不可測盡量小。&lt;/p>
&lt;p>
 &lt;img src="https://HoshikawaRyuukou.github.io/images/UnitTest_Project_Controllability_Grading.png" alt="UnitTest_Project_Controllability_Grading">

&lt;/p>
&lt;h3 id="單元測試相較於手動測試的優勢-">單元測試相較於手動測試的優勢 ?&lt;/h3>
&lt;ul>
&lt;li>可以輕鬆的跑完多個 Test Cases&lt;/li>
&lt;/ul>
&lt;h3 id="static-要不要測-">Static 要不要測 ?&lt;/h3>
&lt;ul>
&lt;li>直接使用真實行為&lt;/li>
&lt;li>透過測試框架強測&lt;/li>
&lt;li>重構/隔離/依賴注入&lt;/li>
&lt;/ul>
&lt;h2 id="ref">Ref&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://blog.miniasp.com/post/2019/02/18/Unit-testing-Integration-testing-e2e-testing?fbclid=IwAR0oNzrUdvkS_1797MPY76s8GGf0t50XE3XAXsZcdddvUU7gHzS8ulffi5w">一次搞懂單元測試、整合測試、端對端測試之間的差異&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=8lxTP2e5Uvk">一起設計出可被單元測試的程式碼吧！&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ithelp.ithome.com.tw/articles/10102264">[Day 2]Unit Testing 簡介&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/dotnet/core/testing/unit-testing-best-practices">.NET Core 和 .NET Standard 的單元測試最佳做法&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Unity - Editor - ScriptedImporter</title><link>https://HoshikawaRyuukou.github.io/posts/unity---editor---scriptedimporter/</link><pubDate>Sat, 27 May 2023 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---editor---scriptedimporter/</guid><description>&lt;h2 id="用途">用途&lt;/h2>
&lt;ul>
&lt;li>使用 C# 為 Unity 本身不支持的文件格式編寫自定義資源導入器，從而添加支持。&lt;/li>
&lt;/ul>
&lt;h2 id="注意">注意&lt;/h2>
&lt;ul>
&lt;li>Scripted Importer 無法處理已由 Unity 本身處理的文件擴展名。&lt;/li>
&lt;/ul>
&lt;h2 id="example">Example&lt;/h2>
&lt;p>這裡將 .lua 以 TextAsset&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">using&lt;/span> &lt;span style="color:#111">UnityEngine&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">using&lt;/span> &lt;span style="color:#111">System.IO&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">using&lt;/span> &lt;span style="color:#111">UnityEditor.AssetImporters&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75af00">[ScriptedImporter( 1, &amp;#34;lua&amp;#34; )]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">class&lt;/span> &lt;span style="color:#75af00">LuaImporter&lt;/span> &lt;span style="color:#111">:&lt;/span> &lt;span style="color:#111">ScriptedImporter&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">override&lt;/span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#111">OnImportAsset&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#111">AssetImportContext&lt;/span> &lt;span style="color:#111">ctx&lt;/span> &lt;span style="color:#111">)&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">TextAsset&lt;/span> &lt;span style="color:#111">subAsset&lt;/span> &lt;span style="color:#111">=&lt;/span> &lt;span style="color:#00a8c8">new&lt;/span> &lt;span style="color:#111">TextAsset&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#111">File&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">ReadAllText&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#111">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">assetPath&lt;/span> &lt;span style="color:#111">)&lt;/span> &lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">AddObjectToAsset&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#d88200">&amp;#34;text&amp;#34;&lt;/span>&lt;span style="color:#111">,&lt;/span> &lt;span style="color:#111">subAsset&lt;/span> &lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">ctx&lt;/span>&lt;span style="color:#111">.&lt;/span>&lt;span style="color:#111">SetMainObject&lt;/span>&lt;span style="color:#111">(&lt;/span> &lt;span style="color:#111">subAsset&lt;/span> &lt;span style="color:#111">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ref">Ref&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.unity3d.com/Manual/ScriptedImporters.html">Scripted Importers&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cnblogs.com/wildmelon/p/16087056.html">[Unity] 资源工作流程 - ScriptedImporter&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Unity - Package Manager - Sample Workflow</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package-manager---create-a-sample/</link><pubDate>Sat, 22 Apr 2023 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package-manager---create-a-sample/</guid><description>&lt;h2 id="package-samples">Package Samples&lt;/h2>
&lt;p>對應有些模組的操作比較複雜繁瑣，有時需要有一些 Sample 做參考。官方 Package Manager 有個 &amp;ldquo;半套&amp;rdquo; Sample 工作流，讓人不是很舒服。&lt;/p>
&lt;p>&lt;a href="https://docs.unity3d.com/2021.3/Documentation/Manual/cus-samples.html">官方文件&lt;/a>&lt;/p>
&lt;p>Sample 資料夾後面加了波浪號 (&lt;del>) 告訴 Unity 忽略 Samples&lt;/del> 文件夾中的內容，此類文件夾不使用.meta文件進行跟踪。忽略 Samples~ 對 Package 使用者是好的，畢竟不是每個人都需要。&lt;/p>
&lt;p>
 &lt;img src="https://HoshikawaRyuukou.github.io/images/Unity_Package_BasicStructure.png" alt="Unity_Package_BasicStructure">

&lt;/p>
&lt;p>但對 Package 開發者，畢竟 Samples 也是要進版控的，而這樣改名的作法會徒增一些重命名的提交也有點煩躁(除非在修改 Sample 的過程中完全不提交)。原先想說寫個 Samples ↔ Samples~ 切換的腳本就好，會一直有 meta 檔的警告(刪掉/改名都還是在)。&lt;/p>
&lt;p>
 &lt;img src="https://HoshikawaRyuukou.github.io/images/Unity_PackageManager_MetaWarning.png" alt="Unity_PackageManager_MetaWarning">

&lt;/p>
&lt;p>&lt;a href="https://forum.unity.com/threads/samples-in-packages-manual-setup.623080/#post-4991561">官方作法&lt;/a> 論壇中的某篇討論才記載他們的做法(倒是加到文件中阿&amp;hellip;)&lt;/p>
&lt;ul>
&lt;li>在內部確實使用了名為 Samples 的文件夾 (沒有 Samples~ )&lt;/li>
&lt;li>在推送新包版本之前通過腳本對其進行重命名(透過 CI )&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://medium.com/openupm/how-to-maintain-upm-package-part-1-7b4daf88d4c4">OpenUPM&lt;/a> 的作者也是使用類似的工作流，總之筆者也調整為上述的方式。&lt;/p>
&lt;h2 id="透過-github-actions-workflow-調整目錄名">透過 GitHub Actions Workflow 調整目錄名&lt;/h2>
&lt;p>筆者不熟 GitHub Actions/ YAML/ 文件操作，但這種初階的操作就交由 chatgpt 代勞，幫我省去不少實驗成本。這裡的操作只是堪用，應該有更好的方式。&lt;/p>
&lt;p>以下是筆者要求的條件&lt;/p>
&lt;ul>
&lt;li>想透過 GitHub Actions 中的 workflow 完成&lt;/li>
&lt;li>如果 forPackage 分支已存在則將其刪除&lt;/li>
&lt;li>從 main 建立新的 forPackage 分支&lt;/li>
&lt;li>Assets/Modules 的所有子目錄(同時有 &amp;ldquo;package.json&amp;rdquo; 與 &amp;ldquo;Samples&amp;quot;資料夾)，將該子目錄的 &amp;ldquo;Samples資料夾&amp;rdquo; 重新命名 為 &amp;ldquo;Samples~資料夾&amp;rdquo;&lt;/li>
&lt;li>並提交更新&lt;/li>
&lt;/ul>
&lt;p>將產出的 yml 做一點微調即可。主要文件操作的出錯率很高，find 指令似乎是有些眉角，等有空再回頭研究。&lt;/p></description></item><item><title>Unity - Package - HybridCLR</title><link>https://HoshikawaRyuukou.github.io/posts/unity---package---hybridclr/</link><pubDate>Tue, 11 Apr 2023 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---package---hybridclr/</guid><description>&lt;h2 id="先備知識">先備知識&lt;/h2>
&lt;h3 id="assembly-definition-asmdef">Assembly Definition (Asmdef)&lt;/h3>
&lt;p>Unity 2017.3 以上版本的提供功能，主要解決龐大的程序集編譯時效率問題。&lt;/p>
&lt;p>具體內容建議閱讀 &lt;a href="https://docs.unity3d.com/Manual/ScriptCompilationAssemblyDefinitionFiles.html">Doc - Assembly definitions&lt;/a>&lt;/p>
&lt;h3 id="assembly-csharpdll">Assembly-CSharp.dll&lt;/h3>
&lt;p>Unity 預設整合的 dll，專案內未被自定義 Asmdef 劃分的腳本都會被整合到 Assembly-CSharp.dll&lt;/p>
&lt;hr>
&lt;h2 id="簡述">簡述&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://hybridclr.doc.code-philosophy.com/">HybridCLR&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/focus-creative-games/hybridclr">focus-creative-games/hybridclr&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/focus-creative-games/hybridclr_trial">focus-creative-games/hybridclr_trial&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>HybridCLR 筆者已經應用於工作環境好一陣子了(從 2.X 版本開始)，其最讓人驚豔的地方在於，過往的開發流幾乎不用更動(當然要好 Asmdef 的規劃)，僅在打包時調整一下工作流即可。&lt;/p>
&lt;p>其極大簡化過往麻煩且效率不彰的熱更流程。xLua 和 ILRuntime 在筆者看來最難受的事是「侵入性」極強，搞得綁手綁腳。大家也都抱怨很久了，但也沒有其他可靠方案，直到 HybridCLR 出現。&lt;/p>
&lt;h2 id="快速上手">快速上手&lt;/h2>
&lt;p>3.0 版本後流程優化得更順暢了，照著 &lt;a href="https://hybridclr.doc.code-philosophy.com/#/beginner/quickstart">文件&lt;/a> 可以很快地感受到其威力。&lt;/p>
&lt;h2 id="注意">注意&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/focus-creative-games/hybridclr/issues/57">请问，Generate All、补充元数据的DLL更新的执行时机的最佳实践？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/focus-creative-games/hybridclr/issues/19">怎么卸载热更dll&lt;/a>&lt;/li>
&lt;li>CLI 規範中只能以 AppDomain 形式卸載所有 dll，不支持卸載單獨的 dll。而 il2cpp 是單例 AppDomain，因此這個要求是不符合規範的。要採用 HybridCLR DHE 的商業方案。不過筆者倒是不太擔心，畢竟 Unity client 通常不是需要常駐的應用，使用者也不太會把應用的每一個功能都點一遍，初估是還可以接受的。&lt;/li>
&lt;/ul></description></item><item><title>Unity - Basic - DontDestroyOnLoad</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basic---dontdestroyonload/</link><pubDate>Mon, 20 Mar 2023 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basic---dontdestroyonload/</guid><description>&lt;h2 id="用例">用例&lt;/h2>
&lt;p>被標記為 DontDestroyOnLoad 的物件場景更改時不會被破壞。&lt;/p>
&lt;ol>
&lt;li>全域管理器：因為整個遊戲期間一直存在。例如，音效管理器、遊戲設定管理器或玩家數據管理器等物件可以在場景切換時保留，以確保它們的功能和數據在各個場景中持續存在。&lt;/li>
&lt;li>持久性數據：如果你有需要在多個場景中共享的持久性數據，可以將存儲這些數據的物件標記為 DontDestroyOnLoad。例如，玩家的遊戲進度或全域的配置設置等數據可以在場景切換時保留，以便在不同場景中訪問和更新。&lt;/li>
&lt;li>UI 元素：某些UI元素，如遊戲狀態面板、計時器或得分顯示，可能需要在多個場景中保留。通過將這些UI元素物件標記為 DontDestroyOnLoad，可以確保它們在場景切換時不會被銷毀，以便在不同場景中持續顯示和更新。&lt;/li>
&lt;/ol>
&lt;h2 id="問題">問題&lt;/h2>
&lt;ol>
&lt;li>記憶體管理問題：使用 DontDestroyOnLoad 將遊戲物件保留在多個場景中可能會導致記憶體洩漏。如果你的遊戲物件不再需要，但沒有被正確銷毀，它們將繼續存在於記憶體中，佔用系統資源，可能導致性能下降。&lt;/li>
&lt;li>場景管理問題：DontDestroyOnLoad 會打破場景之間的清晰界限。場景是 Unity 中組織和管理遊戲邏輯的基本單位，每個場景都應該是相對獨立的。通過在多個場景之間保持物件，會增加場景之間的耦合性，導致代碼難以維護和測試。&lt;/li>
&lt;/ol>
&lt;h2 id="ref">Ref&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html">Object.DontDestroyOnLoad&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Visual Design - Note</title><link>https://HoshikawaRyuukou.github.io/posts/visual-design---note/</link><pubDate>Thu, 02 Mar 2023 21:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/visual-design---note/</guid><description>&lt;h2 id="color">Color&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=PCYD7codKXQ">如何找出好配色？照著這個步驟做，讓你的設計更具吸引力！！&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1B64y177Bw">什么是更好的渐变？&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="color-tools">Color Tools&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://www.stocksy.com/color/e0ffc0?page=1">Stocksy&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://color.adobe.com/zh/create/image">Adobe Color&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.canva.com/colors/color-wheel/">Canva&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.learnui.design/tools/gradient-generator.html">VIVID GRADIENT GENERATOR TOOL&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Art - Drawing - Note</title><link>https://HoshikawaRyuukou.github.io/posts/art---drawing---note/</link><pubDate>Wed, 01 Mar 2023 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/art---drawing---note/</guid><description>&lt;h2 id="新手村">新手村&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=VdLLdRPhvoA">给画画爱好者的入门经验分享，当初有人告诉我该多好！&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=FFTzCkdjkeY">你是哪种握笔？4大绘画握笔法哪种最强 ！？&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="community">Community&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.pinterest.com/">Pinterest&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="channel">Channel&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.pixiv.net/users/70834530">taco1704&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/@hidechannel2/streams">hide channel【顔と体の描き方講座】&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/@kookiefunk">曲奇放克&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="practice">Practice&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://line-of-action.com/">Line of Action&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="book">Book&lt;/h2>
&lt;ul>
&lt;li>ミニキャラの描き方　「ちまっとかわいい」を描く基本＆表現テクニック&lt;/li>
&lt;/ul>
&lt;h2 id="分析">分析&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=LWAHZdAQ0To">【舊版獵人】的美術真的強到爆嗎？用插畫家的角度來分析看看。 / HUNTER x HUNTER (1999)&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Unity - WorkFlow - Build &amp; Publish</title><link>https://HoshikawaRyuukou.github.io/posts/unity---workflow---build--publish/</link><pubDate>Mon, 27 Feb 2023 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---workflow---build--publish/</guid><description>&lt;h2 id="build">Build&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://forum.unity.com/threads/repositories-cfg-could-not-be-loaded-unity.1028959/#post-8161763">repositories.cfg could not be loaded.&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://baba-s.hatenablog.com/entry/2022/01/24/150000">Unable to find player assembly: XXXX\Temp\StagingArea\Data\Managed\UnityEngine.TestRunner.dll&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kingmo.jp/kumonos/cocoapods-update-error-unity/">Cocoapodsの更新にハマった【Unity】&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="publish">Publish&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=BfIWE172jj0">Privacy policy for your game? No problem! (generate and publish)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=UXl_C3ZnRLc">Publish your UNITY game on Google Play Store - 2023 guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="misc">Misc&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/facebook/facebook-ios-sdk/issues/2128#issuecomment-1332276033">Library not loaded: @rpath/FBAEMKit.framework/FBAEMKit&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Software Design - Modularization</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---modularization/</link><pubDate>Wed, 22 Feb 2023 21:21:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---modularization/</guid><description>&lt;h2 id="前述">前述&lt;/h2>
&lt;p>首先幾篇文章是基於 Clean Architecture 的基礎，建議先閱讀以下連結已具備基礎知識&lt;/p>
&lt;h3 id="the-missing-chapter">The missing chapter&lt;/h3>
&lt;ul>
&lt;li>CA 原著 Chapter 34 - The missing chapter - Actual implementation details of an architecture&lt;/li>
&lt;li>&lt;a href="https://github.com/serodriguez68/clean-architecture/blob/master/part-6-details.md#chapter-34---the-missing-chapter---actual-implementation-details-of-an-architecture">連結 34章摘要心得&lt;/a>，請先觀看裡面的圖表(重要)&lt;/li>
&lt;/ul>
&lt;h3 id="ca-modularization">CA Modularization&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://proandroiddev.com/multiple-ways-of-defining-clean-architecture-layers-bbb70afa5d4a">Multiple ways of defining Clean Architecture layers&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.ttulka.com/package-by-component-with-clean-modules-in-java/">Package by Component with Clean Modules in Java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learning-notes.mistermicheels.com/architecture-design/reference-architectures/package-by-feature-or-component/">Package by feature or component&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="vertical-slice">Vertical Slice&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://www.betterask.erni/news-room/slices-vs-layers/">Slices vs. Layers&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://codeopinion.com/restructuring-to-a-vertical-slice-architecture/?fbclid=IwAR0Ek5KW6_MWQ9K5Rxv6P5BpqatHs5tsjfHZ_B9GZmrkd3YaBoH-HHuNZE4">Restructuring to a Vertical Slice Architecture&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=L2Wnq0ChAIA">Vertical Slice Architecture, not Layers!&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="modular-monolith">Modular Monolith&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://lukashajdu.com/post/majestic-modular-monolith/">Majestic Modular Monoliths&lt;/a> (強烈建議)&lt;/li>
&lt;li>&lt;a href="https://www.kamilgrzybek.com/design/modular-monolith-primer/">Modular Monolith architecture&lt;/a> (強烈建議讀完這個系列)&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;strong>各 Package 策略的圖請參考上方連結 34 章摘要心得&lt;/strong>&lt;/p></description></item><item><title>Unity - Basics</title><link>https://HoshikawaRyuukou.github.io/posts/unity---basics/</link><pubDate>Mon, 20 Feb 2023 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---basics/</guid><description>&lt;h2 id="analysis">Analysis&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://sharpcoderblog.com/blog/unity-3d-how-to-use-profiler-to-optimize-your-code">Unity Optimize Your Game Using Profiler&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.chunfuchao.com/posts/unity-profiling-tools/">Unity 手機遊戲最佳化雜談– 內建Profiling&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="animation">Animation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://learn.unity.com/course/introduction-to-3d-animation-systems?uv=2019.4">Introduction to 3D Animation Systems&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="audio">Audio&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://sharpcoderblog.com/blog/unity-3d-audio-clip-import-settings-for-the-best-performance">Unity Audio Clip Import Settings For The Best Performance&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.raywenderlich.com/532-audio-tutorial-for-unity-the-audio-mixer">Audio tutorial for Unity: the Audio Mixer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://johnleonardfrench.com/the-right-way-to-make-a-volume-slider-in-unity-using-logarithmic-conversion/">The right way to make a volume slider in Unity&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="build">Build&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://forum.unity.com/threads/repositories-cfg-could-not-be-loaded-unity.1028959/#post-7174270">repositories.cfg could not be loaded. unity&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="camera">Camera&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://pressstart.vip/tutorials/2018/06/6/37/understanding-orthographic-size.html">Understanding Orthographic Size&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.lujun.co/2019/06/02/unity_camera_clear_flags/#">探寻 Unity Camera 属性之 Clear Flags&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://3dunity.org/game-create-lesson/clicker-game/mobile-adjustment/">Unityの画面のアスペクト比と解像度を自動変換　全スマホ・複数解像度に対応させる&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="canvas">Canvas&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.unity3d.com/Packages/com.unity.ugui@1.0/manual/HOWTO-UIMultiResolution.html">Designing UI for Multiple Resolutions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/hello_1995/article/details/122130097">Unity Canvas Scaler 组件的使用&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/qq_42672770/article/details/121886944">Unity分辨率适配方案设置&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="editor">Editor&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://linkliu.github.io/game-tech-post/posts/%E5%9C%A8Unity%E7%BC%96%E8%BE%91%E5%99%A8%E4%B8%8D%E5%90%8C%E4%BD%8D%E7%BD%AE%E6%B7%BB%E5%8A%A0%E8%8F%9C%E5%8D%95/">在unity编辑器不同位置添加菜单&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://light11.hatenadiary.com/entry/2021/12/13/194147">SerializeReferenceをつけている型をリネーム・削除する時の注意点&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://forum.unity.com/threads/what-are-editorbuildsettings-config-objects-used-for-or-how-can-i-use-them.712031/">What are EditorBuildSettings config objects used for or how can I use them?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.unity.cn/cn/current/ScriptReference/EditorBuildSettings.TryGetConfigObject.html">EditorBuildSettings Example&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="material">Material&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.jianshu.com/p/3df37c726530">Unity中，UI反向Mask效果（图片挖洞）&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="screen">Screen&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://gamedevbeginner.com/how-to-capture-the-screen-in-unity-3-methods/">How to capture the screen in Unity (3 methods)&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="text">Text&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://blog.csdn.net/final5788/article/details/134158552">【Unity编辑器扩展】艺术字/自定义图片字体生成工具&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kyoro-s.com/unity-5/#google_vignette">【Unity】自作フォントを作成してTextで表示する方法&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/linxinfa/article/details/116561750">Unity中自制UGUI艺术字体（位图字体）（Bitmap Font Generator）&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="textmeshpro">TextMeshPro&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://gametorrahod.com/textmeshpro-anatomy/">TextMeshPro Anatomy&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1oK411x7MG">[Unity干货]使用TextMeshPro动态字体节省时间&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://nekojara.city/unity-textmesh-pro-sprite-number">【Unity】TextMesh Proで数字をスプライト表示する&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="ui">UI&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://shibuya24.info/entry/unity-ui-anchor">【Unity】3つだけでいい!?覚えるべきUIアンカー&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://shibuya24.info/entry/unity-ui-layout">【Unity基礎】スマホ向けゲームUIの作り方！基本的なUI配置から複数解像度対応まで解説&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=cW-E4WEogzE">Master your Unity UI Buttons! - Unity UI tutorial&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=QnT-2KxVvyk">How to scale Unity UI objects for every screen - Unity UI tutorial&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Unity - Sites</title><link>https://HoshikawaRyuukou.github.io/posts/unity---sites/</link><pubDate>Mon, 20 Feb 2023 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/unity---sites/</guid><description>&lt;h2 id="blog">Blog&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://blog.yucchiy.com/">Yucchiy&amp;rsquo;s Note&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://baba-s.hatenablog.com/">コガネブログ&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blog.coolcoding.cn/">老刘@开发笔记&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kan-kikuchi.hatenablog.com/">(:3[kanのメモ帳]&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gamedevbeginner.com/">Game Dev Beginner - Everyone Can Make Games&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://light11.hatenadiary.com/">LIGHT11&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://takap-tech.com/">PG日誌&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.kyubuns.dev/">きゅぶろぐ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.nowsprinting.com/">やらなイカ？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.hanachiru-blog.com/">はなちるのマイノート&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kingmo.jp/kumonos/">くものす&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kyoro-s.com/">ピクセルブログ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://nekojara.city/">ねこじゃらシティ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://orotiyamatano.hatenablog.com/">YAMADA TAISHI’s diary&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.karvan1230.com/">原カバンは鞄のお店ではありません。&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.liuocean.com/">L&amp;rsquo;s Blog&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://raspberly.hateblo.jp/archive">Raspberlyのブログ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://shibuya24.info/">渋谷ほととぎす通信&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://lianbai.github.io/">LianBai&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://onclick9927.github.io/">Real-Man&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/lightjiao/lightjiao.github.io/tree/master?tab=readme-ov-file">Lightjiao的博客&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://unityletsgo.hatenablog.com/">unityでいってみよう！&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tedliou.com/unity/">偵錯桐人 - unity&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="blog-enterprise">Blog (Enterprise)&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://developers.cyberagent.co.jp/blog/">CyberAgent Developers Blog | サイバーエージェント デベロッパーズブログ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://note.com/reality_eng/">REALITY｜note&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tech.mirrativ.stream/">Mirrativ Tech Blog&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://technote.qualiarts.jp/">QualiArtsエンジニアブログ&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="channel">Channel&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/channel/UCFK6NCbuCIVzA6Yj1G_ZqCg">Code Monkey&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/@MSTUDIOHUB/videos">M Studio&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/channel/UCfIiEKtakOPRPnE4iQTLvlA/videos">Coco Code&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="collection">Collection&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/XINCGer/Unity3DTraining/tree/0501d6b93520f9d3481f76cd092b71c945e3e3f7?tab=readme-ov-file">XINCGer/Unity3DTraining&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="forum">Forum&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://qiita.com/tags/unity">Qiita|Unity&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zenn.dev/topics/unity?order=daily">Zenn|Unity&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learning.unity3d.jp/">Unity Learning Materials&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.fantsida.com/t/unity3d">Unity3d - 幻想社区&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://note.com/search?q=unity&amp;amp;context=note&amp;amp;mode=search">「unity」の人気の記事一覧｜note&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/organizations/unity-game-dev-guild/items">Unityゲーム開発者ギルド&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="events">Events&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://meetup.unity3d.jp/jp/">Unity Meetup&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://qiita.com/advent-calendar/2023/unity">Unity Advent Calendar&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://uycc.unity3d.jp/">Unityユースクリエイターカップ&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="community">Community&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://unityroom.com/">unityroom&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Software Design - Architecture - Clean Architecture</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---architecture---clean-architecture/</link><pubDate>Sat, 04 Feb 2023 20:03:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---architecture---clean-architecture/</guid><description>&lt;p>以下 Clean Architecture 簡稱 CA&lt;/p>
&lt;p>這裡還是先引用 Uncle Bob 的分層圖
&lt;a href="https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html">The Clean Code Blog - The Clean Architecture&lt;/a>

 &lt;img src="https://blog.cleancoder.com/uncle-bob/images/2012-08-13-the-clean-architecture/CleanArchitecture.jpg" alt="CA Layers">

&lt;/p>
&lt;p>筆者認爲可擴展性是系統架構的重要考量。畢竟應用程式會演化，必須不斷更新與修改系統以滿足新的需求，而 CA 是其中一種實現方針。筆者在這裡不會寫出詳細的介紹，想了解的可以參考 Ref 整理的連結或是 CA 相關書籍。&lt;/p>
&lt;p>本文著重於促使筆者思考方式改變的幾個重要觀念。&lt;/p>
&lt;h2 id="依賴關係">依賴關係&lt;/h2>
&lt;ul>
&lt;li>相依性: 向內圈依賴，且盡量避免跨層依賴 (有些例外之後說明)。&lt;/li>
&lt;li>Dependency Inversion Principle (DIP): 內圈定義介面，外圈實作。&lt;/li>
&lt;/ul>
&lt;p>基於這兩個規則所帶來的是&lt;/p>
&lt;ul>
&lt;li>單向依賴流 : 紊亂的依賴流可能造成牽一髮動全身的窘境。尤其是當 Domain 去依賴到細節時。&lt;/li>
&lt;li>延後實作 : UseCase/Adapter 都是依賴於應用層所開出的介面。因此業務/畫面能獨立開發，不用互相等待(理想狀態)。&lt;/li>
&lt;/ul>
&lt;p>而筆者在實作時的基本型架構通常如下圖(比較接近 CA 書中的另外一張圖，我這裡做了簡化)，Adapter 只分成 Input/Output Port。

 &lt;img src="https://HoshikawaRyuukou.github.io/images/CleanArchitectureBasic.png" alt="Clean Architecture Basic">

&lt;/p>
&lt;ul>
&lt;li>Domain: 領域邏輯&lt;/li>
&lt;li>UseCase: 應用邏輯&lt;/li>
&lt;li>Domain + UseCase: 業務邏輯&lt;/li>
&lt;li>InputPort: 用例功能使用方介面&lt;/li>
&lt;li>OutputPort: 用例功能支援方介面&lt;/li>
&lt;li>Adapter: 將外部與用例功能接合的膠水代碼&lt;/li>
&lt;/ul>
&lt;p>不過架構會針對不同情況做調整，細節參考另一篇文章&lt;/p>
&lt;p>架構設計 - Clean Architecture and Modularization&lt;/p></description></item><item><title>Git - Note</title><link>https://HoshikawaRyuukou.github.io/posts/git---note/</link><pubDate>Sat, 04 Feb 2023 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/git---note/</guid><description>&lt;h2 id="gui-clients">GUI Clients&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://git-fork.com/">Fork&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="common">Common&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/playlist?list=PLDBEQHWAyt9FbN7TANIXlUvtRhdoBCEQ5">两小时Git教程&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.aliyun.com/article/634481">Git忽略规则.gitignore不生效&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.github.com/zh/get-started/getting-started-with-git/configuring-git-to-handle-line-endings#global-settings-for-line-endings">配置 Git 处理行结束符&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="workflow">Workflow&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/556418580">如何做好分支管理，保证高效CI/CD？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=vDs3K6Szstg">【GeekHour教程】分支管理和工作流模型&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.puckwang.com/posts/2020/git-submodule-vs-subtree/">Git 進階應用 Submodule 與 Subtree，使用它們來拆分專案&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="operation">Operation&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1S4421f7MS">git revert 是如何让你丢失代码的？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=ol7CMoJuAvI">十分钟学会常用git撤销操作，全面掌握git的时光机&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gist.github.com/myusuf3/7f645819ded92bda6677">How effectively delete a git submodule.&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://faun.pub/git-cherry-pick-a-commit-to-another-repo-30dc64d61acb">Git cherry pick a commit to another repo&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="git-hook">git hook&lt;/h2>
&lt;ul>
&lt;li>git hook 是每次執行 git 操作時都會運行的命令或腳本。&lt;/li>
&lt;li>如果 git hook 的執行失敗，則 git 操作將中止。&lt;/li>
&lt;/ul></description></item><item><title>Github - Note</title><link>https://HoshikawaRyuukou.github.io/posts/github---note/</link><pubDate>Sat, 04 Feb 2023 13:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/github---note/</guid><description>&lt;h2 id="profile">Profile&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://medium.com/starbugs/%E5%A6%82%E4%BD%95%E5%BB%BA%E7%AB%8B%E7%8D%A8%E4%B8%80%E7%84%A1%E4%BA%8C%E7%9A%84-github-profile-%E8%88%87%E4%B8%89%E5%80%8B%E5%BE%88%E9%85%B7%E7%9A%84%E8%A8%AD%E8%A8%88%E5%8F%8A%E6%87%89%E7%94%A8-ef1cbb4b42c1">如何建立獨一無二的 GitHub Profile！與三個很酷的設計及應用&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/tandpfun/skill-icons#readme">tandpfun/skill-icons&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="collaboration">Collaboration&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=uj8hjLyEBmU">十分钟学会正确的github工作流，和开源作者们使用同一套流程&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="github-copilot">GitHub Copilot&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://vscode.dev.org.tw/docs/copilot/overview">VS Code 中的 GitHub Copilot&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="github-actions">GitHub Actions&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.github.com/zh/actions">GitHub Actions 文档&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/marketplace?type=actions">GitHub Marketplace&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.blog/changelog/2021-02-17-github-actions-limit-which-branches-can-deploy-to-an-environment/">GitHub Actions: Limit which branches can deploy to an environment&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="github-packages">GitHub Packages&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.github.com/zh/packages">GitHub Packages 文档&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Software Design - Pattern - Guard Clauses</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---guard-clauses/</link><pubDate>Tue, 10 Jan 2023 21:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---guard-clauses/</guid><description>&lt;h2 id="目的">目的&lt;/h2>
&lt;ul>
&lt;li>符合 Fail Fast 的原則，驗證條件並在不滿足條件時立即停止執行。&lt;/li>
&lt;li>增加可讀性(更扁平)，減少了巢狀判斷。&lt;/li>
&lt;li>例子請參考 &lt;a href="https://deviq.com/design-patterns/guard-clause">Guard Clause&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="extra---guard-class">Extra - Guard Class&lt;/h2>
&lt;p>將通用的保護子句封裝在一個專門的類是一種很好的做法，可重用邏輯並編寫更具可讀性的保護子句。&lt;/p>
&lt;ul>
&lt;li>可參考這個庫 &lt;a href="https://github.com/ardalis/GuardClauses">GuardClauses&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="extra---value-object">Extra - Value Object&lt;/h2>
&lt;p>&lt;a href="https://codeopinion.com/stop-using-trivial-guard-clauses-try-this-instead/">Stop using trivial Guard Clauses! Try this instead&lt;/a>&lt;/p>
&lt;p>文章作者避免瑣碎 Guard 的方式，是使用 Value Object，來避免域接受到無效參數。這個作法在筆者看來才是真正意義上的 Fail Fast。(YT評論區也建議閱讀，有許多不錯的討論)&lt;/p>
&lt;p>但不可否認的 Guard Clause 作法在大多情況下是有益的。&lt;/p>
&lt;h2 id="ref">Ref&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://deviq.com/design-patterns/guard-clause">Guard Clause&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://teddy-chen-tw.blogspot.com/2012/05/implementation-patterns-guard-clause.html">Implementation Patterns: Guard Clause&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/ardalis/GuardClauses">GuardClauses&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://codeopinion.com/stop-using-trivial-guard-clauses-try-this-instead/">Stop using trivial Guard Clauses! Try this instead&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>CSharp - Note</title><link>https://HoshikawaRyuukou.github.io/posts/csharp---note/</link><pubDate>Thu, 05 Jan 2023 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/csharp---note/</guid><description>&lt;h2 id="語法">語法&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1RR4y1r7vj">C# 的一些冷知识（其一）&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1EP4y1B7Er">C# 的一些冷知识（其二）&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/dotnet/csharp/fundamentals/functional/discards">捨棄 - C# 基本概念&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/read/cv14801567">C#中 ??、 ?、 ?: 、?.、?[ ] 问号&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="type">Type&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.huanlintalk.com/2009/10/c-40covariance-and-contravariance.html">C# 4.0：Covariance 與 Contravariance 觀念入門&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="data">Data&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.linkedin.com/pulse/different-ways-return-data-c-ziv-ben-or">Different ways to return data in C#&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dotblogs.com.tw/ASPNETShare/2017/02/24/20170223-ValueTuple">ValueTuple&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>ValueTuple 是 value type，所以它使用的記憶體空間使用在 program stack，因此使用不會有 garbage collection&lt;/p>&lt;/blockquote>
&lt;h2 id="format">Format&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://dotblogs.com.tw/lazycodestyle/2016/06/24/005827">內插字串&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="collection">Collection&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://dev.twsiyuan.com/2018/02/encapsulating-list-collection-in-c-sharp.html">C# 回傳內部資料集合的幾種方式，考慮封裝與設計需求&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://codereview.stackexchange.com/questions/48661/iterate-over-two-collections-of-equal-length">Iterate over two collections of equal length&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>foreach &lt;span style="color:#f92672">(&lt;/span>var &lt;span style="color:#f92672">(&lt;/span>cell, id&lt;span style="color:#f92672">)&lt;/span> in cells.Zip&lt;span style="color:#f92672">(&lt;/span>randomizedIDs, &lt;span style="color:#f92672">(&lt;/span>key, value&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">=&lt;/span>&amp;gt; &lt;span style="color:#f92672">(&lt;/span>Cell: key, ID: value&lt;span style="color:#f92672">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> idDict&lt;span style="color:#f92672">[&lt;/span>cell&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> id&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cell.selectCallback &lt;span style="color:#f92672">=&lt;/span> Select&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="utils">Utils&lt;/h2>
&lt;ul>
&lt;li>Random&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>var &lt;span style="color:#111">random_list&lt;/span> &lt;span style="color:#f92672">=&lt;/span> list.OrderBy&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#111">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span>&amp;gt; Guid.NewGuid&lt;span style="color:#f92672">())&lt;/span>.ToList&lt;span style="color:#f92672">()&lt;/span>&lt;span style="color:#111">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="other">Other&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=nH_C3poH3-4">C# 記憶體管理 Value Type 與 Reference Type&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/178307774">工作十余年，还是一直被问 委托和事件 有什么区别？ 真是够了&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Software Design - Domain-Driven Design 初探</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---domain-driven-design/</link><pubDate>Thu, 15 Dec 2022 20:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---domain-driven-design/</guid><description>&lt;p>必須先聲明筆者仍在學習中，以下屬個人觀點&lt;/p>
&lt;h2 id="動機">動機&lt;/h2>
&lt;p>筆者發現在使用 Clean Architecture (CA) 時越來越力不從心，因此開始研究 Domain-Driven Design (DDD)，事出有因，列出幾點問題與對應方式。&lt;/p>
&lt;h4 id="重複的程式碼">重複的程式碼&lt;/h4>
&lt;ul>
&lt;li>主因是 貧血域模型 (Anemic Domain Model)，表示模型中幾乎只有 Get/Set，這導致了 Domain層 (業務邏輯) 滲透到 Application層 (應用邏輯)，某些對 Domain 的操作重複出現在多個的 Usecase (應用邏輯)。&lt;/li>
&lt;li>重新分析系統，區分出不同上下文，設計充血域模型，將業務邏輯設計進去。&lt;/li>
&lt;/ul>
&lt;h4 id="域模型的一致性問題">域模型的一致性問題&lt;/h4>
&lt;ul>
&lt;li>Domain 面對四面八方的操作，顯得很亂且充滿不確定(會不會模型之間的關係因為更改而被破壞)&lt;/li>
&lt;li>引入聚合(Aggregate)來維持保護邊界內的不變條件。&lt;/li>
&lt;/ul>
&lt;h4 id="primitive-obsession">Primitive Obsession&lt;/h4>
&lt;ul>
&lt;li>這會造成對模型的不信任，進而寫出一些防禦性程式設計。&lt;/li>
&lt;li>引入值物件(Value Object)來確保不變性與自我驗證(即不正確就不應該存在)。&lt;/li>
&lt;/ul>
&lt;p>以上這幾點是筆者比較有感的。&lt;/p>
&lt;h2 id="概述與想法">概述與想法&lt;/h2>
&lt;p>Domain-Driven Design (DDD)，出自 Eric Evans 2003 年出版的一本書，以領域模型為中心來進行系統的分析設計。不是架構也不是技術，是一種方法論，可以搭配不同類型的架構來實現&lt;/p>
&lt;ul>
&lt;li>Layered Architecture&lt;/li>
&lt;li>Hexagonal Architecture&lt;/li>
&lt;li>Clean Architecture (以下稱 CA )&lt;/li>
&lt;li>Command Query Responsibility Segregation (CQRS)&lt;/li>
&lt;/ul>
&lt;p>原著中是使用 Layered Architecture 的架構作為示範，但該章的重點是在隔離 Domain，在 Google 的時候有所謂 &amp;ldquo;DDD 架構圖&amp;rdquo;，但筆者覺得不太精確，因為 DDD 主要的發力點是在 Domain，應該稱作 &amp;ldquo;OO架構以DDD實作Domain&amp;rdquo; 會比較合適。&lt;/p></description></item><item><title>Software Design - Pattern - Data Transfer Object (DTO)</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---data-transfer-object-dto/</link><pubDate>Sun, 11 Dec 2022 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---data-transfer-object-dto/</guid><description>&lt;h2 id="什麼是-dto">什麼是 DTO？&lt;/h2>
&lt;p>Data Transfer Object (數據傳輸對象) 是定義如何在應用程序之間發送數據的對象。它僅用於發送和接收數據，本身不包含任何業務邏輯。&lt;/p>
&lt;h2 id="為什麼使用-dto">為什麼使用 DTO？&lt;/h2>
&lt;h3 id="輕鬆收發">輕鬆收發&lt;/h3>
&lt;p>在沒有任何邏輯的基礎上，可以僅使用序列化與反序列化就保證對象的完整性和可傳遞性。&lt;/p>
&lt;h3 id="避免過度暴露訊息">避免過度暴露訊息&lt;/h3>
&lt;p>對分層或模組來說，彼此間應盡量降低耦合。下圖以公園廁所報修為案例。&lt;/p>
&lt;p>
 &lt;img src="https://HoshikawaRyuukou.github.io/images/DTO.png" alt="DTO Example">

&lt;/p>
&lt;p>這個資料流由&lt;strong>鄉公所&lt;/strong>傳到&lt;strong>基層人員&lt;/strong>手上，中間經過兩個邊界&lt;/p>
&lt;ul>
&lt;li>鄉公所 | 工程公司 =&amp;gt; DTO (公文)&lt;/li>
&lt;li>工程公司 | 基層人員 =&amp;gt; DTO (簡訊)&lt;/li>
&lt;/ul>
&lt;p>每個單位的關注點不同，在意的資料也會不同，DTO 做為邊界兩方做最小程度的媒介，隱藏的不該被關注(敏感)的事&lt;/p>
&lt;ul>
&lt;li>印章對工程公司並不是必要資訊&lt;/li>
&lt;li>詳細的時間格式是對基層人員並不是必要資訊&lt;/li>
&lt;/ul>
&lt;p>在實作上常被用於轉換 DomainModol -&amp;gt; DomainDto&lt;/p>
&lt;h2 id="注意事項">注意事項&lt;/h2>
&lt;p>類別數量增加，請自行評估使用情形&lt;/p>
&lt;h2 id="ref">Ref&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/archive/msdn-magazine/2009/august/pros-and-cons-of-data-transfer-objects">Cutting Edge - Pros and Cons of Data Transfer Objects&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://examples.javacodegeeks.com/the-dto-data-transfer-object/">The DTO (Data Transfer Object)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://aspnetboilerplate.com/Pages/Documents/Data-Transfer-Objects">Data Transfer Objects&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stackoverflow.com/questions/52812337/clean-architecture-why-not-using-the-entity-as-request-model-of-the-use-case">Clean Architecture : why not using the entity as request model of the use case (interactor)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stackoverflow.com/questions/39397147/difference-between-entity-and-dto">Difference between Entity and DTO&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Software Design - Pattern - Model View Presenter (MVP)</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---model-view-presenter-mvp/</link><pubDate>Sat, 10 Dec 2022 20:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---pattern---model-view-presenter-mvp/</guid><description>&lt;h2 id="前述">前述&lt;/h2>
&lt;p>關注點分離（Separation of Concerns，SoC）: 在軟體開發中，一個模組或組件應該專注於解決特定的問題，而不是同時處理多個功能。每個組件都有自己的職責範圍，並且與其他組件盡可能解耦合。&lt;/p>
&lt;p>而 MVC / MVP / MVVM 是關注點分離於前端的經典應用，網上已經有很多不錯的文章，再寫一份類似的整理文章意義也不大，對此感到陌生，不妨閱讀以下連結，會幫助你理解 MV系列的發展。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/livoras/blog/issues/11">界面之下：还原真实的MV*模式&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://juejin.cn/post/6901200799242649607">正确认识 MVC/MVP/MVVM&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://juejin.cn/post/6998093259893407757#comment">站在思想层面看MVX架构&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://deltatimer.com/260/mvp-pattern-part-2-supervising-controller">MVP Pattern: Part 2 Supervising Controller&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://proandroiddev.com/converting-presenters-into-viewmodels-c9279c7516e7">Part 2 — Converting Presenters into ViewModels&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://annulusgames-lab.blogspot.com/2022/12/unity-ui-mvrp.html">【Unity】MV(R)Pパターンのすすめ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.pragmaticcoding.ca/javafx/Frameworks/">Unravelling MVC, MVP and MVVM&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>以下則對筆者實作中比較常用的 MVP 多做一些討論&lt;/p>
&lt;h2 id="關注點責任">關注點(責任)&lt;/h2>
&lt;p>在 MVP 的構成下分成三個部分&lt;/p>
&lt;ul>
&lt;li>Model: 應用程式的核心邏輯。&lt;/li>
&lt;li>View: 應用程式的使用者介面，負責呈現數據和接收使用者的輸入。&lt;/li>
&lt;li>Presenter: View 和 Model 之間的中介。&lt;/li>
&lt;/ul>
&lt;h3 id="passive-view">Passive View&lt;/h3>
&lt;p>這是 MVP 的一種實作風格，也是筆者主要使用的風格。&lt;/p>
&lt;ul>
&lt;li>Presenter 對 View 有完全控制權&lt;/li>
&lt;li>View 提供方法與事件給 Presenter 使用&lt;/li>
&lt;li>View 對 Presenter 一無所知&lt;/li>
&lt;/ul>
&lt;p>以猜拳遊戲的 View 為例&lt;/p></description></item><item><title>Assets - Note</title><link>https://HoshikawaRyuukou.github.io/posts/assets---note/</link><pubDate>Tue, 22 Nov 2022 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/assets---note/</guid><description>&lt;h2 id="audio">Audio&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://maou.audio/">魔王魂&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://soundeffect-lab.info/">効果音ラボ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dova-s.jp/">フリーBGM（音楽素材）無料ダウンロード｜DOVA-SYNDROME&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://taira-komori.jpn.org/freesound.html">フリー効果音素材・無料効果音&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="color">Color&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://coolors.co/413b5e-fcaa67-b0413e">Coolors&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.palettable.io/516ABE-FFFFFF-FFD600-413B5E">Palettable&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="feature-graphics">Feature Graphics&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://hotpot.ai/templates/google-play-feature-graphic">Google Play Feature Graphics&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="font">Font&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://mrmad.com.tw/tag/%E4%B8%AD%E6%96%87%E5%85%8D%E8%B2%BB%E5%AD%97%E9%AB%94">中文免費字體&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://fonts.google.com/">Google Fonts&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://forum.gamer.com.tw/C.php?bsn=60076&amp;amp;snA=3906436">2022/0113更新# 36個合法免費高品質字體&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.fontget.com/">fontget&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="icon">Icon&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://icooon-mono.com/">ICOOON MONO&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://iconmonstr.com/">iconmonstr&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.flaticon.com/">Flaticon&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://icon.kitchen">IconKitchen&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://game-icons.net/">Game-icons.net&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="image">Image&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://unsplash.com/developers">Unsplash Image API | Free HD Photo API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://picsum.photos/">Lorem Picsum&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://photosku.com/">Photosku&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://techmoon.xyz/free-img/">2023 熱門 47 個可商用無版權免費圖庫懶人包（圖片、圖示、圖標、素材、背景）&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sozaino.site/">OKUMONO&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="misc">Misc&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://opengameart.org/">Opengameart&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.kenney.nl/assets">Kenney&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.irasutoya.com/">かわいいフリー素材集 いらすとや&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="textures">Textures&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://polyhaven.com/">Poly Haven&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="tools">Tools&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://tools.wingzero.tw/web/page/1">網路資源列表| DeTools&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="repo">Repo&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://itch.io/game-assets">itch.io&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Software Design - Navigation</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---navigation/</link><pubDate>Wed, 16 Nov 2022 21:11:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---navigation/</guid><description>&lt;p>以下 Feature 指的是一個功能獨立的模組，Feature A 將簡稱 A。&lt;/p>
&lt;h2 id="問題">問題&lt;/h2>
&lt;blockquote>
&lt;p>應用程式中有一個由 A 到 B 的&lt;strong>導航&lt;/strong>，那這個&lt;strong>導航&lt;/strong>是誰的責任?&lt;/p>&lt;/blockquote>
&lt;p>以下先討論 2 種狀況。&lt;/p>
&lt;h3 id="a-直接依賴-b">A 直接依賴 B&lt;/h3>
&lt;p>簡單粗暴的強耦合破壞了 A 的獨立性。當流程發生變化時，可能需要到各個 Feature 去修改。&lt;/p>
&lt;pre tabindex="0">&lt;code>Feature A -&amp;gt; Feature B
&lt;/code>&lt;/pre>&lt;h3 id="a-引入導航器間接依賴-b">A 引入導航器間接依賴 B&lt;/h3>
&lt;p>這作法將導航操作收斂到某個類中，但 A 仍然隱含的知道 B，這同樣破壞了 A 的獨立性。&lt;/p>
&lt;pre tabindex="0">&lt;code>Feature A -&amp;gt; INavigator.Route(View.FeatureB) // Enum
or
Feature A -&amp;gt; INavigator.Route(&amp;#34;FeatureB&amp;#34;) // 魔術字串
or
Feature A -&amp;gt; INavigator.RouteFeatureB()
&lt;/code>&lt;/pre>&lt;p>重新思考導航這件事&lt;/p>
&lt;ul>
&lt;li>Feature 應該知道自己是能夠 &lt;strong>被導航&lt;/strong> 或是 &lt;strong>能導航到哪&lt;/strong> 嗎?&lt;/li>
&lt;li>到底 A 能導航到 B 這件事是誰決定的?&lt;/li>
&lt;/ul>
&lt;p>應該隱約地感覺到了吧，導航並不屬於 A 也不屬於 B，&lt;strong>導航是一個獨立操作&lt;/strong>，需要一個額外的單位來負責。此外這個單位多是屬於 App 級別的(因為該層級有對其他模組的正當訪問性，畢竟是負責做統合的)。&lt;/p></description></item><item><title>Software Design - Principle - Dependency Inversion Principle (DIP)</title><link>https://HoshikawaRyuukou.github.io/posts/software-design---principle---dependency-inversion-principle-dip/</link><pubDate>Tue, 15 Nov 2022 20:05:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/software-design---principle---dependency-inversion-principle-dip/</guid><description>&lt;p>依賴倒置原則 Dependency Inversion Principle，以下皆簡稱 DIP。&lt;/p>
&lt;h2 id="為什麼需要">為什麼需要&lt;/h2>
&lt;p>先來看定義&lt;/p>
&lt;ul>
&lt;li>高層次的模塊不應該依賴於低層次的模塊，兩者都應該依賴於抽象接口&lt;/li>
&lt;li>抽象接口不應該依賴於具體實現。而具體實現則應該依賴於抽象接口&lt;/li>
&lt;/ul>
&lt;p>文謅謅的，但重點似乎是抽象。不如直接看個狀況劇:&lt;/p>
&lt;blockquote>
&lt;p>有一個 Project A 需要使用播廣告的功能。分別採 2 個做法&lt;/p>&lt;/blockquote>
&lt;h3 id="直接依賴">直接依賴&lt;/h3>
&lt;p>
 &lt;img src="https://HoshikawaRyuukou.github.io/images/DIPNO.png" alt="DIPNO">

&lt;/p>
&lt;p>直覺的做法。Project A 直接依賴於廣告模組(UnityAds)，這裡模組 Project A 被迫去了解 UnityAds 的實作細節(怎麼初始化/下載廣告/播廣告)。&lt;/p>
&lt;p>目前沒甚麼問題，運作得很好&amp;hellip; 但很快問題就來了。UnityAds 因為某些原因不能用了! (假設後臺被打了什麼的)。於是找了另一個廣告模組(AdMob)，想要如法炮製，但有幾點可能會不好受。&lt;/p>
&lt;ul>
&lt;li>要改的地方很分散 (廣告被 Project A 多處使用)&lt;/li>
&lt;li>Project A 需要處理不同的 API格式 (了解細節，單例、Callback、事件&amp;hellip;)&lt;/li>
&lt;li>導致原先依賴 UnityAds 的模組需要重新編譯 (造成浪費時間)&lt;/li>
&lt;/ul>
&lt;p>原因是&lt;strong>直接依賴&lt;/strong>外部模組導致的，相對於你的系統 UnityAds 是個外人，是不穩定的，去依賴一個不穩定的東西，也會導致自己變得不穩定。&lt;/p>
&lt;h3 id="依賴倒置">依賴倒置&lt;/h3>
&lt;p>
 &lt;img src="https://HoshikawaRyuukou.github.io/images/DIPValid.png" alt="DIPValid">

&lt;/p>
&lt;ul>
&lt;li>仔細想一下，Project A 直接依賴 UnityAds 是必要的嗎?&lt;/li>
&lt;li>需求是播 UnityAds 的廣告? 還是播廣告?&lt;/li>
&lt;/ul>
&lt;p>為了實現穩定廣告服務的依賴源，我們將其抽象化&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00a8c8">public&lt;/span> &lt;span style="color:#00a8c8">interface&lt;/span> &lt;span style="color:#75af00">IAdService&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#111">Initialize&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#111">Load&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00a8c8">void&lt;/span> &lt;span style="color:#111">Show&lt;/span>&lt;span style="color:#111">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#111">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>但 UnityAds 與 AdMob 又不能直接實作這個介面怎麼辦，可以用配接器模式(Adapter Pattern)寫個轉接頭，想辦法讓外部細節符合 IAdService 的需求。現在需要廣告服務的部分均透過 IAdService來操作，不需再知道外部廣告模組的細節。&lt;/p></description></item><item><title>Network - RPC</title><link>https://HoshikawaRyuukou.github.io/posts/network---rpc/</link><pubDate>Mon, 07 Nov 2022 21:06:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/network---rpc/</guid><description>&lt;h2 id="rpc-remote-procedure-call遠端程序呼叫">RPC (Remote Procedure Call，遠端程序呼叫)&lt;/h2>
&lt;p>是一種通信協定，多用於分佈式系統的通信。&lt;/p>
&lt;h3 id="目的">目的&lt;/h3>
&lt;p>讓客戶端呼叫遠程函式就像呼叫本地函式一樣。將網路通信封裝成函式來使用，那麼客戶端將不需要關心網路協定/模型。&lt;/p>
&lt;h3 id="流程">流程&lt;/h3>
&lt;ol>
&lt;li>client 客戶端通過本地呼叫的方式呼叫服務&lt;/li>
&lt;li>client stub 接收到請求後將參數序列化成能夠進行網路傳輸的訊息體&lt;/li>
&lt;li>client stub 找到服務地址，並將訊息發送給服務端&lt;/li>
&lt;li>server stub 收到訊息後進行反序列化&lt;/li>
&lt;li>server stub 根據反序列化結果呼叫本地服務&lt;/li>
&lt;li>本地服務執行並將處理結果返回給 server stub&lt;/li>
&lt;li>server stub 將結果序列化並發送至 client stub&lt;/li>
&lt;li>client stub 接收到訊息，並進行反序列化&lt;/li>
&lt;li>client 得到最終結果&lt;/li>
&lt;/ol>
&lt;h2 id="ref">Ref&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.zhihu.com/question/524580708/answer/2584782720">怎么理解rpc，既然有http请求了为啥还要用rpc？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.zhihu.com/question/25536695">谁能用通俗的语言解释一下什么是 RPC 框架？&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Philosophy - Ship of Theseus</title><link>https://HoshikawaRyuukou.github.io/posts/philosophy---ship-of-theseus/</link><pubDate>Sun, 06 Nov 2022 21:20:00 +0000</pubDate><guid>https://HoshikawaRyuukou.github.io/posts/philosophy---ship-of-theseus/</guid><description>&lt;h2 id="問題---忒修斯之船">問題 - 忒修斯之船&lt;/h2>
&lt;p>1世紀時的希臘作家普魯塔克問到&lt;/p>
&lt;blockquote>
&lt;p>如果忒修斯的船上的木頭逐漸被替換，直到所有的木頭都不是原來的木頭，那這艘船還是原來的那艘船嗎？&lt;/p>&lt;/blockquote>
&lt;h2 id="思考">思考&lt;/h2>
&lt;p>這艘船在被賦予存在意義之前，就不過是一堆木頭與金屬，如果沒有使用他的人，那麼船將沒有他的意義。因此只要賦予它存在意義的人還在，或者說這份存在意義能夠被繼承下去，無論它變成什麼樣子，它還是那艘船。&lt;/p></description></item></channel></rss>